{"task_id": "Mbpp/431", "completion": "\n```python\ndef common_element(list1, list2):\n    for element in list1:\n        if element in list2:\n            return True\n    return False\n```\n\nThis code defines a function called `common_element` that takes two lists as arguments. It then iterates through the elements of the first list using a `for` loop, and checks if each element is also present in the second list using the `in` operator. If a common element is found, the function returns `True`. If no common element is found, the function returns `False`.\n\nTo test the function, you can use the `assert` statement as shown in the instruction. The `assert` statement checks if the function returns `True` for the given lists, and raises an `AssertionError` if the assertion fails.\n\nYou can run the code in your Python environment by copying and pasting it into a Python file, and then running the file using the `python` command. For example, if you save the code as `common_element.py`, you can run it by typing `python common_element.py` in your terminal.\n\nPlease note that this is just one possible implementation of the function. You can modify the code to suit your specific needs, and use different techniques to solve the problem.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes two lists and returns true if they have at least one common element. Your code should satisfy the following assertion:\n```python\nassert common_element([1,2,3,4,5], [5,6,7,8,9])==True\n```\n\n### Response:\n```python\ndef common_element(list1, list2):\n    for element in list1:\n        if element in list2:\n            return True\n    return False\n```\n\nThis code defines a function called `common_element` that takes two lists as arguments. It then iterates through the elements of the first list using a `for` loop, and checks if each element is also present in the second list using the `in` operator. If a common element is found, the function returns `True`. If no common element is found, the function returns `False`.\n\nTo test the function, you can use the `assert` statement as shown in the instruction. The `assert` statement checks if the function returns `True` for the given lists, and raises an `AssertionError` if the assertion fails.\n\nYou can run the code in your Python environment by copying and pasting it into a Python file, and then running the file using the `python` command. For example, if you save the code as `common_element.py`, you can run it by typing `python common_element.py` in your terminal.\n\nPlease note that this is just one possible implementation of the function. You can modify the code to suit your specific needs, and use different techniques to solve the problem."}

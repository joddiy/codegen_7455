{"task_id": "Mbpp/71", "completion": "\n```python\ndef comb_sort(lst):\n    gap = len(lst)\n    swaps = True\n\n    while gap > 1 or swaps:\n        gap = max(1, int(gap / 1.3))\n        swaps = False\n\n        for i in range(len(lst) - gap):\n            j = i + gap\n            if lst[i] > lst[j]:\n                lst[i], lst[j] = lst[j], lst[i]\n                swaps = True\n\n    return lst\n\nassert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n```\n\n### Response:\n```python\ndef comb_sort(lst):\n    gap = len(lst)\n    swaps = True\n\n    while gap > 1 or swaps:\n        gap = max(1, int(gap / 1.3))\n        swaps = False\n\n        for i in range(len(lst) - gap):\n            j = i + gap\n            if lst[i] > lst[j]:\n                lst[i], lst[j] = lst[j], lst[i]\n                swaps = True\n\n    return lst\n\nassert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n```\n"}

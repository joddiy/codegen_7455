{"task_id": "Mbpp/620", "completion": "\n```python\ndef largest_subset(lst):\n    \"\"\"\n    Find the size of the largest subset of a list of numbers so that every pair is divisible.\n    \"\"\"\n    # Create a list of all the numbers in the list\n    numbers = lst\n\n    # Find the size of the largest subset of the list\n    size = len(numbers)\n\n    # Find the size of the largest subset of the list that is divisible by every number in the list\n    size_divisible = len(numbers)\n\n    # Return the size of the largest subset\n    return size_divisible\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the size of the largest subset of a list of numbers so that every pair is divisible. Your code should satisfy the following assertion:\n```python\nassert largest_subset([ 1, 3, 6, 13, 17, 18 ]) == 4\n```\n\n### Response:\n```python\ndef largest_subset(lst):\n    \"\"\"\n    Find the size of the largest subset of a list of numbers so that every pair is divisible.\n    \"\"\"\n    # Create a list of all the numbers in the list\n    numbers = lst\n\n    # Find the size of the largest subset of the list\n    size = len(numbers)\n\n    # Find the size of the largest subset of the list that is divisible by every number in the list\n    size_divisible = len(numbers)\n\n    # Return the size of the largest subset\n    return size_divisible\n```\n"}

{"task_id": "Mbpp/805", "completion": "\n```python\ndef max_sum_list(lst):\n    max_sum = 0\n    max_list = []\n    for sublist in lst:\n        if sum(sublist) > max_sum:\n            max_sum = sum(sublist)\n            max_list = sublist\n    return max_list\n\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\nIn this code, we define a function called max_sum_list that takes a list of lists as an argument. We initialize two variables, max_sum and max_list, to keep track of the maximum sum of elements in a sublist and the corresponding sublist, respectively.\n\nInside the function, we iterate over each sublist in the input list using a for loop. For each sublist, we calculate its sum using the sum() function and compare it with the current maximum sum. If the sum is greater than the current maximum sum, we update max_sum and max_list accordingly.\n\nFinally, we return the max_list, which contains the sublist with the highest sum of elements.\n\nWe also include an assertion statement at the end of the code to check if the function works correctly. We provide a sample input list and the expected output, and the assertion statement will raise an AssertionError if the function does not return the correct output.\n\nThis code should work as expected and return the correct output for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that returns the list in a list of lists whose sum of elements is the highest. Your code should satisfy the following assertion:\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\n### Response:\n```python\ndef max_sum_list(lst):\n    max_sum = 0\n    max_list = []\n    for sublist in lst:\n        if sum(sublist) > max_sum:\n            max_sum = sum(sublist)\n            max_list = sublist\n    return max_list\n\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\nIn this code, we define a function called max_sum_list that takes a list of lists as an argument. We initialize two variables, max_sum and max_list, to keep track of the maximum sum of elements in a sublist and the corresponding sublist, respectively.\n\nInside the function, we iterate over each sublist in the input list using a for loop. For each sublist, we calculate its sum using the sum() function and compare it with the current maximum sum. If the sum is greater than the current maximum sum, we update max_sum and max_list accordingly.\n\nFinally, we return the max_list, which contains the sublist with the highest sum of elements.\n\nWe also include an assertion statement at the end of the code to check if the function works correctly. We provide a sample input list and the expected output, and the assertion statement will raise an AssertionError if the function does not return the correct output.\n\nThis code should work as expected and return the correct output for the given input."}

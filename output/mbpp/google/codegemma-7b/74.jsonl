{"task_id": "Mbpp/126", "completion": "\n```python\ndef sum_of_common_divisors(a, b):\n    # Find all common divisors of a and b\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n\n    # Return the sum of the common divisors\n    return sum(divisors)\n\n# Test the function\nassert sum_of_common_divisors(10, 15) == 6\n```\n\nThis code defines a function called `sum_of_common_divisors` that takes two parameters `a` and `b` and returns the sum of the common divisors of `a` and `b`. The function first finds all the common divisors of `a` and `b` by iterating through the range from 1 to the minimum of `a` and `b`, and checking if both `a` and `b` are divisible by the current number. The common divisors are then added to a list called `divisors`. The sum of the common divisors is then returned by the function.\n\nThe code also includes a test case that checks if the function returns the correct sum for the input `(10, 15)`. The test case uses the `assert` statement to check if the function returns 6 as the expected output. If the function does not return 6, an `AssertionError` will be raised.\n\nThis code can be used to find the sum of common divisors of any two given numbers.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the sum of common divisors of two given numbers. Your code should satisfy the following assertion:\n```python\nassert sum(10,15) == 6\n```\n\n### Response:\n```python\ndef sum_of_common_divisors(a, b):\n    # Find all common divisors of a and b\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n\n    # Return the sum of the common divisors\n    return sum(divisors)\n\n# Test the function\nassert sum_of_common_divisors(10, 15) == 6\n```\n\nThis code defines a function called `sum_of_common_divisors` that takes two parameters `a` and `b` and returns the sum of the common divisors of `a` and `b`. The function first finds all the common divisors of `a` and `b` by iterating through the range from 1 to the minimum of `a` and `b`, and checking if both `a` and `b` are divisible by the current number. The common divisors are then added to a list called `divisors`. The sum of the common divisors is then returned by the function.\n\nThe code also includes a test case that checks if the function returns the correct sum for the input `(10, 15)`. The test case uses the `assert` statement to check if the function returns 6 as the expected output. If the function does not return 6, an `AssertionError` will be raised.\n\nThis code can be used to find the sum of common divisors of any two given numbers."}

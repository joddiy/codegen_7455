{"task_id": "Mbpp/722", "completion": "\n```python\ndef filter_data(data, min_height, min_weight):\n    filtered_data = {}\n    for name, (height, weight) in data.items():\n        if height > min_height and weight > min_weight:\n            filtered_data[name] = (height, weight)\n    return filtered_data\n\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nThe input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Your code should satisfy the following assertion:\n```python\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```\n\n### Response:\n```python\ndef filter_data(data, min_height, min_weight):\n    filtered_data = {}\n    for name, (height, weight) in data.items():\n        if height > min_height and weight > min_weight:\n            filtered_data[name] = (height, weight)\n    return filtered_data\n\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```"}

{"task_id": "Mbpp/229", "completion": "\n```python\ndef re_arrange_array(arr, n):\n    # Create two new arrays to hold the negative and positive elements\n    neg_arr = []\n    pos_arr = []\n\n    # Loop through the first n elements of the given array\n    for i in range(n):\n        # If the element is negative, add it to the negative array\n        if arr[i] < 0:\n            neg_arr.append(arr[i])\n        # If the element is positive, add it to the positive array\n        else:\n            pos_arr.append(arr[i])\n\n    # Combine the negative and positive arrays into a single array\n    return neg_arr + pos_arr\n\n# Test the function\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved. Your code should satisfy the following assertion:\n```python\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```\n\n### Response:\n```python\ndef re_arrange_array(arr, n):\n    # Create two new arrays to hold the negative and positive elements\n    neg_arr = []\n    pos_arr = []\n\n    # Loop through the first n elements of the given array\n    for i in range(n):\n        # If the element is negative, add it to the negative array\n        if arr[i] < 0:\n            neg_arr.append(arr[i])\n        # If the element is positive, add it to the positive array\n        else:\n            pos_arr.append(arr[i])\n\n    # Combine the negative and positive arrays into a single array\n    return neg_arr + pos_arr\n\n# Test the function\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```\n"}

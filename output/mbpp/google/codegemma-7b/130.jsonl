{"task_id": "Mbpp/260", "completion": "\n```python\ndef newman_prime(n):\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        i = 3\n        while True:\n            if is_prime(i) and is_newman_prime(i):\n                n -= 1\n                if n == 0:\n                    return i\n            i += 2\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_newman_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the nth newman\u2013shanks\u2013williams prime number. Your code should satisfy the following assertion:\n```python\nassert newman_prime(3) == 7\n```\n\n### Response:\n```python\ndef newman_prime(n):\n    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n        i = 3\n        while True:\n            if is_prime(i) and is_newman_prime(i):\n                n -= 1\n                if n == 0:\n                    return i\n            i += 2\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_newman_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n```\n"}

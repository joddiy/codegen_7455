{"task_id": "Mbpp/129", "completion": "\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    sum_diag = 0\n    sum_diag2 = 0\n    for i in range(n):\n        sum_diag += matrix[i][i]\n        sum_diag2 += matrix[i][n-i-1]\n    if sum_diag != sum_diag2:\n        return False\n    sum_col = [0] * n\n    for row in matrix:\n        sum_row = sum(row)\n        for i in range(n):\n            sum_col[i] += row[i]\n        if sum_row != sum_diag:\n            return False\n    if any(sum_col[i] != sum_diag for i in range(n)):\n        return False\n    return True\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n### Response:\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    sum_diag = 0\n    sum_diag2 = 0\n    for i in range(n):\n        sum_diag += matrix[i][i]\n        sum_diag2 += matrix[i][n-i-1]\n    if sum_diag != sum_diag2:\n        return False\n    sum_col = [0] * n\n    for row in matrix:\n        sum_row = sum(row)\n        for i in range(n):\n            sum_col[i] += row[i]\n        if sum_row != sum_diag:\n            return False\n    if any(sum_col[i] != sum_diag for i in range(n)):\n        return False\n    return True\n```\n"}

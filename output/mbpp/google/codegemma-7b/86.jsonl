{"task_id": "Mbpp/140", "completion": "\n```python\ndef extract_singly(lst):\n    flattened = []\n    for item in lst:\n        if isinstance(item, tuple):\n            flattened.extend(item)\n        else:\n            flattened.append(item)\n    return flattened\n\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to flatten the list of lists into a single set of numbers. Your code should satisfy the following assertion:\n```python\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n\n### Response:\n```python\ndef extract_singly(lst):\n    flattened = []\n    for item in lst:\n        if isinstance(item, tuple):\n            flattened.extend(item)\n        else:\n            flattened.append(item)\n    return flattened\n\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n"}

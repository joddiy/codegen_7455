{"task_id": "Mbpp/61", "completion": "\n```python\ndef count_Substrings(string):\n    count = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if sum(map(int, string[i:j+1])) == len(string[i:j+1]):\n                count += 1\n    return count\n```\n/Python/Python_Basics/01_Introduction_to_Python/03_Python_Data_Types.md\n# Python Data Types\n\n## 1. Numbers\n\n### 1.1. Integers\n\n```python\n>>> 1\n1\n>>> 100\n100\nall_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to count the number of substrings with the sum of digits equal to their length. Your code should satisfy the following assertion:\n```python\nassert count_Substrings('112112') == 6\n```\n\n### Response:\n```python\ndef count_Substrings(string):\n    count = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if sum(map(int, string[i:j+1])) == len(string[i:j+1]):\n                count += 1\n    return count\n```\n/Python/Python_Basics/01_Introduction_to_Python/03_Python_Data_Types.md\n# Python Data Types\n\n## 1. Numbers\n\n### 1.1. Integers\n\n```python\n>>> 1\n1\n>>> 100\n100\n}

{"task_id": "Mbpp/638", "completion": "\n```python\ndef wind_chill(wind_velocity, temperature):\n    return round((35.74 + 0.6215*temperature - 35.75*(wind_velocity**0.16) + 0.4275*temperature*(wind_velocity**0.16)))\n```\n/week-04/day-03/01-count-letters/count_letters.py\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\nprint(count_letters(\"apple\"))\n/week-04/day-03/02-anagram/anagram.py\n# Create a function that takes two strings and returns a boolean value\n# based on if the two strings are Anagramms or not.\n# Create a test for that.\n\ndef anagram(string1, string2):\n    if len(string1)!= len(string2):\n        return False\n    else:\n        for letter in string1:\n            if letter not in string2:\n                return False\n        return True\n\nprint(anagram(\"dog\", \"god\"))\n/week-04/day-03/03-count-letters-2/count_letters_2.py\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n# Create a test for that.\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\ndef test_count_letters():\n    assert count_letters(\"apple\") == {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n\ntest_count_letters()\n/week-04/day-03/04-count-letters-3/count_letters_3.py\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n# Create a test for that.\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\ndef test_count_letters():\n    assert count_letters(\"apple\") == {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n\ntest_count_letters()\n\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n# Create a test for that.\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\ndef test_count_letters():\n    assert count_letters(\"apple\") == {\"a\": 1, \"p\": 2, \"l\": 1, \"e", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius. Your code should satisfy the following assertion:\n```python\nassert wind_chill(120,35)==40\n```\n\n### Response:\n```python\ndef wind_chill(wind_velocity, temperature):\n    return round((35.74 + 0.6215*temperature - 35.75*(wind_velocity**0.16) + 0.4275*temperature*(wind_velocity**0.16)))\n```\n/week-04/day-03/01-count-letters/count_letters.py\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\nprint(count_letters(\"apple\"))\n/week-04/day-03/02-anagram/anagram.py\n# Create a function that takes two strings and returns a boolean value\n# based on if the two strings are Anagramms or not.\n# Create a test for that.\n\ndef anagram(string1, string2):\n    if len(string1)!= len(string2):\n        return False\n    else:\n        for letter in string1:\n            if letter not in string2:\n                return False\n        return True\n\nprint(anagram(\"dog\", \"god\"))\n/week-04/day-03/03-count-letters-2/count_letters_2.py\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n# Create a test for that.\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\ndef test_count_letters():\n    assert count_letters(\"apple\") == {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n\ntest_count_letters()\n/week-04/day-03/04-count-letters-3/count_letters_3.py\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n# Create a test for that.\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\ndef test_count_letters():\n    assert count_letters(\"apple\") == {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n\ntest_count_letters()\n\n# Create a function that takes a string as an input and returns a dictionary\n# where keys are letters and values are counting how many times did the letter\n# occur.\n# Example: \"apple\" the result should be {\"a\": 1, \"p\": 2, \"l\": 1, \"e\": 1}\n# Create a test for that.\n\ndef count_letters(string):\n    result = {}\n    for letter in string:\n        if letter in result:\n            result[letter] += 1\n        else:\n            result[letter] = 1\n    return result\n\ndef test_count_letters():\n    assert count_letters(\"apple\") == {\"a\": 1, \"p\": 2, \"l\": 1, \"e"}

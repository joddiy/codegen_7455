{"task_id": "Mbpp/262", "completion": "\n```python\ndef split_two_parts(lst,L):\n    return lst[:L], lst[L:]\n```\n/week_01/day_04/02_lists_and_tuples.py\n# 02_lists_and_tuples.py\n\n# 1. Create a list that contains the names of 5 friends.\nfriends = [\"Josh\", \"Jenny\", \"Jordan\", \"Jeremy\", \"Jessica\"]\n\n# 2. Print the 3rd friend in the list.\nprint(friends[2])\n\n# 3. Add your name to the list.\nfriends.append(\"Jacob\")\n\n# 4. Print the list of friends.\nprint(friends)\n\n# 5. Print the number of friends in the list.\nprint(len(friends))\n\n# 6. Print the 2nd to last friend in the list.\nprint(friends[-2])\n\n# 7. Print the first and last names on the same line separated by a space, like: \"\".\nprint(friends[0] + \" \" + friends[-1])\n\n# 8. Print the first 3 friends.\nprint(friends[:3])\n\n# 9. Print the last 3 friends.\nprint(friends[-3:])\n\n# 10. Print the list in reverse order.\nprint(friends[::-1])\n\n# 11. Print the list in alphabetical order.\nprint(sorted(friends))\n\n# 12. Print True if the list contains your name.\nprint(\"Jacob\" in friends)\n\n# 13. Print True if the list contains a name that starts with \"J\".\nprint(any(name.startswith(\"J\") for name in friends))\n\n# 14. Print the position of the first occurrence of your name in the list.\nprint(friends.index(\"Jacob\"))\n\n# 15. Print the position of the last occurrence of your name in the list.\nprint(friends.index(\"Jacob\"))\n\n# 16. Remove your name from the list and print the list.\nfriends.remove(\"Jacob\")\nprint(friends)\n\n# 17. Create a tuple that contains the names of 5 friends.\nfriends = (\"Josh\", \"Jenny\", \"Jordan\", \"Jeremy\", \"Jessica\")\n\n# 18. Print the 3rd friend in the tuple.\nprint(friends[2])\n\n# 19. Print the number of friends in the tuple.\nprint(len(friends))\n\n# 20. Print the 2nd to last friend in the tuple.\nprint(friends[-2])\n\n# 21. Print the first and last names on the same line separated by a space, like: \"\".\nprint(friends[0] + \" \" + friends[-1])\n\n# 22. Print the first 3 friends.\nprint(friends[:3])\n\n# 23. Print the last 3 friends.\nprint(friends[-3:])\n\n# 24. Print the tuple in reverse order.\nprint(friends[::-1])\n\n# 25. Print the tuple in alphabetical order.\nprint(sorted(friends))\n\n# 26. Print True if the tuple contains your name.\nprint(\"Jacob\" in friends)\n\n# 27. Print True if the tuple contains a name that starts with \"J\".\nprint(any(name.startswith(\"J\") for name in friends))\n\n# 28. Print the position of the first occurrence of your name in the tuple.\nprint(friends.index(\"Jacob\"))\n\n# 29. Print the position of the last occurrence of your name in the tuple.\nprint(friends.index(\"Jacob\"))\n\n# 30. Create a list that contains the names of ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple. Your code should satisfy the following assertion:\n```python\nassert split_two_parts([1,1,2,3,4,4,5,1],3)==([1, 1, 2], [3, 4, 4, 5, 1])\n```\n\n### Response:\n```python\ndef split_two_parts(lst,L):\n    return lst[:L], lst[L:]\n```\n/week_01/day_04/02_lists_and_tuples.py\n# 02_lists_and_tuples.py\n\n# 1. Create a list that contains the names of 5 friends.\nfriends = [\"Josh\", \"Jenny\", \"Jordan\", \"Jeremy\", \"Jessica\"]\n\n# 2. Print the 3rd friend in the list.\nprint(friends[2])\n\n# 3. Add your name to the list.\nfriends.append(\"Jacob\")\n\n# 4. Print the list of friends.\nprint(friends)\n\n# 5. Print the number of friends in the list.\nprint(len(friends))\n\n# 6. Print the 2nd to last friend in the list.\nprint(friends[-2])\n\n# 7. Print the first and last names on the same line separated by a space, like: \"\".\nprint(friends[0] + \" \" + friends[-1])\n\n# 8. Print the first 3 friends.\nprint(friends[:3])\n\n# 9. Print the last 3 friends.\nprint(friends[-3:])\n\n# 10. Print the list in reverse order.\nprint(friends[::-1])\n\n# 11. Print the list in alphabetical order.\nprint(sorted(friends))\n\n# 12. Print True if the list contains your name.\nprint(\"Jacob\" in friends)\n\n# 13. Print True if the list contains a name that starts with \"J\".\nprint(any(name.startswith(\"J\") for name in friends))\n\n# 14. Print the position of the first occurrence of your name in the list.\nprint(friends.index(\"Jacob\"))\n\n# 15. Print the position of the last occurrence of your name in the list.\nprint(friends.index(\"Jacob\"))\n\n# 16. Remove your name from the list and print the list.\nfriends.remove(\"Jacob\")\nprint(friends)\n\n# 17. Create a tuple that contains the names of 5 friends.\nfriends = (\"Josh\", \"Jenny\", \"Jordan\", \"Jeremy\", \"Jessica\")\n\n# 18. Print the 3rd friend in the tuple.\nprint(friends[2])\n\n# 19. Print the number of friends in the tuple.\nprint(len(friends))\n\n# 20. Print the 2nd to last friend in the tuple.\nprint(friends[-2])\n\n# 21. Print the first and last names on the same line separated by a space, like: \"\".\nprint(friends[0] + \" \" + friends[-1])\n\n# 22. Print the first 3 friends.\nprint(friends[:3])\n\n# 23. Print the last 3 friends.\nprint(friends[-3:])\n\n# 24. Print the tuple in reverse order.\nprint(friends[::-1])\n\n# 25. Print the tuple in alphabetical order.\nprint(sorted(friends))\n\n# 26. Print True if the tuple contains your name.\nprint(\"Jacob\" in friends)\n\n# 27. Print True if the tuple contains a name that starts with \"J\".\nprint(any(name.startswith(\"J\") for name in friends))\n\n# 28. Print the position of the first occurrence of your name in the tuple.\nprint(friends.index(\"Jacob\"))\n\n# 29. Print the position of the last occurrence of your name in the tuple.\nprint(friends.index(\"Jacob\"))\n\n# 30. Create a list that contains the names of "}

{"task_id": "Mbpp/223", "completion": "\n```python\ndef is_majority(arr, n, element):\n    return arr.count(element) > n/2\n```\n/01-Python/02-OOP/01-Object-Oriented-Programming/04-Inheritance/01-Animal/01-Animal.py\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n        self.health = 100\n\n    def walk(self):\n        self.health -= 1\n        return self\n\n    def run(self):\n        self.health -= 5\n        return self\n\n    def display_health(self):\n        print(f\"Health: {self.health}\")\n        return self\n\nclass Dog(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        self.health = 150\n\n    def pet(self):\n        self.health += 5\n        return self\n\nclass Dragon(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        self.health = 170\n\n    def fly(self):\n        self.health -= 10\n        return self\n\n    def display_health(self):\n        super().display_health()\n        print(\"I am a Dragon\")\n        return self\n\ndog = Dog(\"Dog\")\ndog.walk().walk().walk().run().run().pet().display_health()\n\ndragon = Dragon(\"Dragon\")\ndragon.walk().walk().walk().run().run().fly().fly().display_health()\n/01-Python/02-OOP/01-Object-Oriented-Programming/04-Inheritance/03-Ninja-Class/03-Ninja-Class.py\nclass Ninja:\n    def __init__(self, name, health=100):\n        self.name = name\n        self.health = health\n        self.speed = 3\n        self.strength = 3\n\n    def say_name(self):\n        print(self.name)\n        return self\n\n    def show_stats(self):\n        print(f\"Name: {self.name}, Health: {self.health}, Speed: {self.speed}, Strength: {self.strength}\")\n        return self\n\n    def drink_sake(self):\n        self.health += 10\n        return self\n\nclass Sensei(Ninja):\n    def __init__(self, name):\n        super().__init__(name)\n        self.health = 200\n        self.speed = 10\n        self.strength = 10\n        self.wisdom = 10\n\n    def speak_woof(self):\n        print(\"Woof!\")\n        return self\n\n    def speak_woof_woof(self):\n        print(\"Woof Woof!\")\n        return self\n\n    def show_stats(self):\n        super().show_stats()\n        print(f\"Wisdom: {self.wisdom}\")\n        return self\n\nsensei = Sensei(\"Sensei\")\nsensei.speak_woof().speak_woof_woof().show_stats()\n/01-Python/01-Python-Fundamentals/01-Python-Fundamentals/01-Basic-Python-Fundamentals/03-Basic-Math-Part-1/03-Basic-Math-Part-1.py\n# Basic: Math: Part I\n# Create a function that takes in two numbers as arguments and returns their sum.\n\ndef add(num1, num2):\n    return num1 + num2\n\nprint(add(1, 2))\n/01-Python/01-Python-Fundamentals/01-Python-Fundamentals/01-Basic-Python-Fundamentals/02-Basic-Math-Part-2/02-Basic-Math-Part-2.py\n# Basic: Math: Part II\n# Create a function that takes in two numbers as arguments and returns their product.\n\ndef multiply(num1, num2):\n    return num1 * num2\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.). Your code should satisfy the following assertion:\n```python\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\n```\n\n### Response:\n```python\ndef is_majority(arr, n, element):\n    return arr.count(element) > n/2\n```\n/01-Python/02-OOP/01-Object-Oriented-Programming/04-Inheritance/01-Animal/01-Animal.py\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n        self.health = 100\n\n    def walk(self):\n        self.health -= 1\n        return self\n\n    def run(self):\n        self.health -= 5\n        return self\n\n    def display_health(self):\n        print(f\"Health: {self.health}\")\n        return self\n\nclass Dog(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        self.health = 150\n\n    def pet(self):\n        self.health += 5\n        return self\n\nclass Dragon(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n        self.health = 170\n\n    def fly(self):\n        self.health -= 10\n        return self\n\n    def display_health(self):\n        super().display_health()\n        print(\"I am a Dragon\")\n        return self\n\ndog = Dog(\"Dog\")\ndog.walk().walk().walk().run().run().pet().display_health()\n\ndragon = Dragon(\"Dragon\")\ndragon.walk().walk().walk().run().run().fly().fly().display_health()\n/01-Python/02-OOP/01-Object-Oriented-Programming/04-Inheritance/03-Ninja-Class/03-Ninja-Class.py\nclass Ninja:\n    def __init__(self, name, health=100):\n        self.name = name\n        self.health = health\n        self.speed = 3\n        self.strength = 3\n\n    def say_name(self):\n        print(self.name)\n        return self\n\n    def show_stats(self):\n        print(f\"Name: {self.name}, Health: {self.health}, Speed: {self.speed}, Strength: {self.strength}\")\n        return self\n\n    def drink_sake(self):\n        self.health += 10\n        return self\n\nclass Sensei(Ninja):\n    def __init__(self, name):\n        super().__init__(name)\n        self.health = 200\n        self.speed = 10\n        self.strength = 10\n        self.wisdom = 10\n\n    def speak_woof(self):\n        print(\"Woof!\")\n        return self\n\n    def speak_woof_woof(self):\n        print(\"Woof Woof!\")\n        return self\n\n    def show_stats(self):\n        super().show_stats()\n        print(f\"Wisdom: {self.wisdom}\")\n        return self\n\nsensei = Sensei(\"Sensei\")\nsensei.speak_woof().speak_woof_woof().show_stats()\n/01-Python/01-Python-Fundamentals/01-Python-Fundamentals/01-Basic-Python-Fundamentals/03-Basic-Math-Part-1/03-Basic-Math-Part-1.py\n# Basic: Math: Part I\n# Create a function that takes in two numbers as arguments and returns their sum.\n\ndef add(num1, num2):\n    return num1 + num2\n\nprint(add(1, 2))\n/01-Python/01-Python-Fundamentals/01-Python-Fundamentals/01-Basic-Python-Fundamentals/02-Basic-Math-Part-2/02-Basic-Math-Part-2.py\n# Basic: Math: Part II\n# Create a function that takes in two numbers as arguments and returns their product.\n\ndef multiply(num1, num2):\n    return num1 * num2\n\n"}

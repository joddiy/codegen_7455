{"task_id": "Mbpp/398", "completion": "\nHere is a Python function that computes the sum of digits of each number in a given list:\n\n```python\ndef sum_of_digits(lst):\n    return sum(sum(int(digit) for digit in str(num)) for num in lst)\n\nassert sum_of_digits([10,2,56]) == 14\n```\n\nThis function works by first converting each number in the list to a string, then iterating over each digit in the string, converting each digit back to an integer, and summing these integers. The outer sum function then sums up the results for each number in the list.\n\nThe assertion at the end checks that the function works correctly for the given example. If the function is working correctly, it will not output anything, indicating that all tests passed. If there is an error, it will raise an AssertionError.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to compute the sum of digits of each number of a given list. Your code should satisfy the following assertion:\n```python\nassert sum_of_digits([10,2,56])==14\n```\n\n### Response:\nHere is a Python function that computes the sum of digits of each number in a given list:\n\n```python\ndef sum_of_digits(lst):\n    return sum(sum(int(digit) for digit in str(num)) for num in lst)\n\nassert sum_of_digits([10,2,56]) == 14\n```\n\nThis function works by first converting each number in the list to a string, then iterating over each digit in the string, converting each digit back to an integer, and summing these integers. The outer sum function then sums up the results for each number in the list.\n\nThe assertion at the end checks that the function works correctly for the given example. If the function is working correctly, it will not output anything, indicating that all tests passed. If there is an error, it will raise an AssertionError.\n"}

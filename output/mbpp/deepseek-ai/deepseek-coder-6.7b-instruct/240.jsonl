{"task_id": "Mbpp/474", "completion": "\nHere is a Python function that replaces a specific character in a string with another character:\n\n```python\ndef replace_char(s, old, new):\n    return s.replace(old, new)\n\nassert replace_char(\"polygon\",'y','l')==(\"pollgon\")\n```\n\nIn this function, `s.replace(old, new)` is used to replace all occurrences of the `old` character in the string `s` with the `new` character. The function then returns the modified string. The `assert` statement checks if the function works as expected.\n\nYou can call this function with a string, the character to be replaced, and the character to replace it with. For example, `replace_char(\"polygon\",'y','l')` will return \"pollgon\".\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to replace characters in a string. Your code should satisfy the following assertion:\n```python\nassert replace_char(\"polygon\",'y','l')==(\"pollgon\")\n```\n\n### Response:\nHere is a Python function that replaces a specific character in a string with another character:\n\n```python\ndef replace_char(s, old, new):\n    return s.replace(old, new)\n\nassert replace_char(\"polygon\",'y','l')==(\"pollgon\")\n```\n\nIn this function, `s.replace(old, new)` is used to replace all occurrences of the `old` character in the string `s` with the `new` character. The function then returns the modified string. The `assert` statement checks if the function works as expected.\n\nYou can call this function with a string, the character to be replaced, and the character to replace it with. For example, `replace_char(\"polygon\",'y','l')` will return \"pollgon\".\n"}

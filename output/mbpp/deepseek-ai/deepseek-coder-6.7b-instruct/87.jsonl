{"task_id": "Mbpp/141", "completion": "\nHere is a Python script that uses the pancake sort algorithm to sort a list of elements:\n\n```python\ndef flip(arr, i):\n    start = 0\n    while start < i:\n        arr[start], arr[i] = arr[i], arr[start]\n        start += 1\n        i -= 1\n\ndef pancake_sort(arr):\n    n = len(arr)\n    for i in range(n, 0, -1):\n        max_idx = 0\n        for j in range(0, i):\n            if arr[j] > arr[max_idx]:\n                max_idx = j\n        if max_idx != i - 1:\n            flip(arr, max_idx)\n            flip(arr, i - 1)\n    return arr\n\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```\n\nThis script defines a `flip` function that reverses the order of elements in a list from index 0 to a given index `i`. The `pancake_sort` function uses this to sort the list by repeatedly finding the maximum element and flipping it to the front of the list.\n\nThe assertion at the end checks that the function works correctly. If the assertion fails, an error will be raised.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```\n\n### Response:\nHere is a Python script that uses the pancake sort algorithm to sort a list of elements:\n\n```python\ndef flip(arr, i):\n    start = 0\n    while start < i:\n        arr[start], arr[i] = arr[i], arr[start]\n        start += 1\n        i -= 1\n\ndef pancake_sort(arr):\n    n = len(arr)\n    for i in range(n, 0, -1):\n        max_idx = 0\n        for j in range(0, i):\n            if arr[j] > arr[max_idx]:\n                max_idx = j\n        if max_idx != i - 1:\n            flip(arr, max_idx)\n            flip(arr, i - 1)\n    return arr\n\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```\n\nThis script defines a `flip` function that reverses the order of elements in a list from index 0 to a given index `i`. The `pancake_sort` function uses this to sort the list by repeatedly finding the maximum element and flipping it to the front of the list.\n\nThe assertion at the end checks that the function works correctly. If the assertion fails, an error will be raised.\n"}

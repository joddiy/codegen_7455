{"task_id": "Mbpp/102", "completion": "\nHere is a Python function that converts a snake case string to camel case string:\n\n```python\ndef snake_to_camel(snake_str):\n    components = snake_str.split('_')\n    return ''.join(x.title() for x in components)\n\nassert snake_to_camel('python_program') == 'PythonProgram'\n```\n\nThis function works by splitting the input string into a list of words using the underscore as a delimiter, then it uses the `title` method to convert the first character of each word to uppercase and the rest to lowercase. Finally, it joins the words back together into a single string.\n\nThe `assert` statement is used to test the function. If the function returns the expected result, the assertion is true and nothing happens. If the function returns a different result, the assertion is false and an `AssertionError` is raised.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to convert a snake case string to camel case string. Your code should satisfy the following assertion:\n```python\nassert snake_to_camel('python_program')=='PythonProgram'\n```\n\n### Response:\nHere is a Python function that converts a snake case string to camel case string:\n\n```python\ndef snake_to_camel(snake_str):\n    components = snake_str.split('_')\n    return ''.join(x.title() for x in components)\n\nassert snake_to_camel('python_program') == 'PythonProgram'\n```\n\nThis function works by splitting the input string into a list of words using the underscore as a delimiter, then it uses the `title` method to convert the first character of each word to uppercase and the rest to lowercase. Finally, it joins the words back together into a single string.\n\nThe `assert` statement is used to test the function. If the function returns the expected result, the assertion is true and nothing happens. If the function returns a different result, the assertion is false and an `AssertionError` is raised.\n"}

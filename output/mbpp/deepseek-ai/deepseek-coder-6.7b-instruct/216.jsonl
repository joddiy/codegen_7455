{"task_id": "Mbpp/442", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef positive_count(arr):\n    # Initialize count of positive numbers\n    count = 0\n    # Iterate over the array\n    for num in arr:\n        # If the number is positive, increment the count\n        if num > 0:\n            count += 1\n    # Return the ratio of positive numbers\n    return count / len(arr)\n\n# Test the function\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]) == 0.54\n```\n\nThis script defines a function `positive_count` that takes an array of integers as input and returns the ratio of positive numbers in the array. The function iterates over the array and increments a count whenever it encounters a positive number. Finally, it returns the count divided by the length of the array, which is the ratio of positive numbers. The assertion at the end tests the function with the provided example.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the ration of positive numbers in an array of integers. Your code should satisfy the following assertion:\n```python\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.54\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef positive_count(arr):\n    # Initialize count of positive numbers\n    count = 0\n    # Iterate over the array\n    for num in arr:\n        # If the number is positive, increment the count\n        if num > 0:\n            count += 1\n    # Return the ratio of positive numbers\n    return count / len(arr)\n\n# Test the function\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]) == 0.54\n```\n\nThis script defines a function `positive_count` that takes an array of integers as input and returns the ratio of positive numbers in the array. The function iterates over the array and increments a count whenever it encounters a positive number. Finally, it returns the count divided by the length of the array, which is the ratio of positive numbers. The assertion at the end tests the function with the provided example.\n"}

{"task_id": "Mbpp/476", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef big_sum(arr):\n    return max(arr) + min(arr)\n\nassert big_sum([1,2,3]) == 4\n```\n\nThis function works by using the built-in Python functions `max()` and `min()` to find the maximum and minimum values in the array, respectively. It then returns the sum of these two values. The `assert` statement is used to test the function. If the function returns the expected result, the assertion is true and nothing happens. If the function returns a different result, the assertion is false and an `AssertionError` is raised.\n\nYou can test this function with other inputs as well:\n\n```python\nassert big_sum([5, 10, 15]) == 20\nassert big_sum([-5, -1, -10]) == -15\nassert big_sum([0, 0, 0]) == 0\n```\n\nThese tests cover a variety of cases, including negative numbers and zero.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the sum of the largest and smallest value in a given array. Your code should satisfy the following assertion:\n```python\nassert big_sum([1,2,3]) == 4\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef big_sum(arr):\n    return max(arr) + min(arr)\n\nassert big_sum([1,2,3]) == 4\n```\n\nThis function works by using the built-in Python functions `max()` and `min()` to find the maximum and minimum values in the array, respectively. It then returns the sum of these two values. The `assert` statement is used to test the function. If the function returns the expected result, the assertion is true and nothing happens. If the function returns a different result, the assertion is false and an `AssertionError` is raised.\n\nYou can test this function with other inputs as well:\n\n```python\nassert big_sum([5, 10, 15]) == 20\nassert big_sum([-5, -1, -10]) == -15\nassert big_sum([0, 0, 0]) == 0\n```\n\nThese tests cover a variety of cases, including negative numbers and zero.\n"}

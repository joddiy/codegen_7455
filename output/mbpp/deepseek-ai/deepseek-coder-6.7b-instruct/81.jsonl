{"task_id": "Mbpp/133", "completion": "\nHere is a Python function that calculates the sum of the negative numbers in a given list:\n\n```python\ndef sum_negativenum(numbers):\n    return sum(num for num in numbers if num < 0)\n\nassert sum_negativenum([2, 4, -6, -9, 11, -12, 14, -5, 17]) == -32\n```\n\nThis function uses a generator expression to iterate over the numbers in the list and yield only the negative ones. The sum function then adds up these negative numbers.\n\nThe assertion at the end of the script checks if the function works correctly. If the function returns the correct result, the assertion will pass silently. If not, an AssertionError will be raised.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate the sum of the negative numbers of a given list of numbers. Your code should satisfy the following assertion:\n```python\nassert sum_negativenum([2, 4, -6, -9, 11, -12, 14, -5, 17])==-32\n```\n\n### Response:\nHere is a Python function that calculates the sum of the negative numbers in a given list:\n\n```python\ndef sum_negativenum(numbers):\n    return sum(num for num in numbers if num < 0)\n\nassert sum_negativenum([2, 4, -6, -9, 11, -12, 14, -5, 17]) == -32\n```\n\nThis function uses a generator expression to iterate over the numbers in the list and yield only the negative ones. The sum function then adds up these negative numbers.\n\nThe assertion at the end of the script checks if the function works correctly. If the function returns the correct result, the assertion will pass silently. If not, an AssertionError will be raised.\n"}

{"task_id": "Mbpp/61", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef count_Substrings(s):\n    count = 0\n    for length in range(1, len(s) + 1):\n        for start in range(0, len(s) - length + 1):\n            substring = s[start:start + length]\n            if sum(int(digit) for digit in substring) == length:\n                count += 1\n    return count\n\nassert count_Substrings('112112') == 6\n```\n\nThis function works by iterating over all possible lengths of substrings in the input string `s`. For each length, it iterates over all possible starting points of substrings of that length. It then extracts the substring and checks if the sum of its digits equals the length of the substring. If it does, it increments the count. Finally, it returns the count.\n\nThe assertion at the end checks that the function works correctly for the example provided.\n\nPlease note that this function assumes that the input string `s` only contains digits. If this is not the case, you may need to modify the function to handle non-digit characters.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to count the number of substrings with the sum of digits equal to their length. Your code should satisfy the following assertion:\n```python\nassert count_Substrings('112112') == 6\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef count_Substrings(s):\n    count = 0\n    for length in range(1, len(s) + 1):\n        for start in range(0, len(s) - length + 1):\n            substring = s[start:start + length]\n            if sum(int(digit) for digit in substring) == length:\n                count += 1\n    return count\n\nassert count_Substrings('112112') == 6\n```\n\nThis function works by iterating over all possible lengths of substrings in the input string `s`. For each length, it iterates over all possible starting points of substrings of that length. It then extracts the substring and checks if the sum of its digits equals the length of the substring. If it does, it increments the count. Finally, it returns the count.\n\nThe assertion at the end checks that the function works correctly for the example provided.\n\nPlease note that this function assumes that the input string `s` only contains digits. If this is not the case, you may need to modify the function to handle non-digit characters.\n"}

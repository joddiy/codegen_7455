{"task_id": "Mbpp/754", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef extract_index_list(l1, l2, l3):\n    common_elements = []\n    for i in range(len(l1)):\n        if l1[i] == l2[i] == l3[i]:\n            common_elements.append(l1[i])\n    return common_elements\n```\n\nThis function iterates over the indices of the input lists. If the elements at the current index are the same in all three lists, it adds that element to the `common_elements` list. Finally, it returns the `common_elements` list.\n\nYou can test the function with the provided assertion:\n\n```python\nassert extract_index_list([1, 1, 3, 4, 5, 6, 7],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7]) == [1, 7]\n```\n\nThis assertion should pass without any output, indicating that the function is working correctly.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWe say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. Your code should satisfy the following assertion:\n```python\nassert extract_index_list([1, 1, 3, 4, 5, 6, 7],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7])==[1, 7]\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef extract_index_list(l1, l2, l3):\n    common_elements = []\n    for i in range(len(l1)):\n        if l1[i] == l2[i] == l3[i]:\n            common_elements.append(l1[i])\n    return common_elements\n```\n\nThis function iterates over the indices of the input lists. If the elements at the current index are the same in all three lists, it adds that element to the `common_elements` list. Finally, it returns the `common_elements` list.\n\nYou can test the function with the provided assertion:\n\n```python\nassert extract_index_list([1, 1, 3, 4, 5, 6, 7],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7]) == [1, 7]\n```\n\nThis assertion should pass without any output, indicating that the function is working correctly.\n"}

{"task_id": "Mbpp/140", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef extract_singly(lst):\n    result = []\n    for sublist in lst:\n        for item in sublist:\n            result.append(item)\n    return result\n\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n\nThis script defines a function `extract_singly` that takes a list of lists as input and returns a single list of numbers. It does this by iterating over each sublist in the input list and then iterating over each item in the sublist. Each item is then appended to the `result` list. Finally, the `result` list is returned.\n\nThe assertion at the end of the script checks that the `extract_singly` function works correctly. If the function is implemented correctly, the assertion should pass without raising an error.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to flatten the list of lists into a single set of numbers. Your code should satisfy the following assertion:\n```python\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef extract_singly(lst):\n    result = []\n    for sublist in lst:\n        for item in sublist:\n            result.append(item)\n    return result\n\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n\nThis script defines a function `extract_singly` that takes a list of lists as input and returns a single list of numbers. It does this by iterating over each sublist in the input list and then iterating over each item in the sublist. Each item is then appended to the `result` list. Finally, the `result` list is returned.\n\nThe assertion at the end of the script checks that the `extract_singly` function works correctly. If the function is implemented correctly, the assertion should pass without raising an error.\n"}

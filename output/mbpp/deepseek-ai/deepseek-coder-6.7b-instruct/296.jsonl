{"task_id": "Mbpp/611", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef max_of_nth(matrix, n):\n    return max(row[n] for row in matrix)\n```\n\nThis function uses a generator expression to extract the nth element from each row in the matrix and then uses the built-in `max` function to find the maximum value.\n\nYou can test this function with the provided assertion:\n\n```python\nassert max_of_nth([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n```\n\nThis assertion will pass if the function is implemented correctly.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function which given a matrix represented as a list of lists returns the max of the n'th column. Your code should satisfy the following assertion:\n```python\nassert max_of_nth([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef max_of_nth(matrix, n):\n    return max(row[n] for row in matrix)\n```\n\nThis function uses a generator expression to extract the nth element from each row in the matrix and then uses the built-in `max` function to find the maximum value.\n\nYou can test this function with the provided assertion:\n\n```python\nassert max_of_nth([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n```\n\nThis assertion will pass if the function is implemented correctly.\n"}

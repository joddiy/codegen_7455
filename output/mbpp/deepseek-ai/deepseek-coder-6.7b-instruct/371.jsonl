{"task_id": "Mbpp/778", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef pack_consecutive_duplicates(lst):\n    result = []\n    i = 0\n    while i < len(lst):\n        start = i\n        while i < len(lst) - 1 and lst[i] == lst[i + 1]:\n            i += 1\n        result.append(lst[start:i+1])\n        i += 1\n    return result\n\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```\n\nThis script works by iterating over the input list and checking for consecutive duplicates. When it finds a duplicate, it adds the sublist to the result list and continues to the next element.\n\nThe function `pack_consecutive_duplicates` takes a list as input and returns a new list where consecutive duplicates are packed into sublists.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, it will not output anything. If there is an error, it will raise an AssertionError.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to pack consecutive duplicates of a given list elements into sublists. Your code should satisfy the following assertion:\n```python\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef pack_consecutive_duplicates(lst):\n    result = []\n    i = 0\n    while i < len(lst):\n        start = i\n        while i < len(lst) - 1 and lst[i] == lst[i + 1]:\n            i += 1\n        result.append(lst[start:i+1])\n        i += 1\n    return result\n\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```\n\nThis script works by iterating over the input list and checking for consecutive duplicates. When it finds a duplicate, it adds the sublist to the result list and continues to the next element.\n\nThe function `pack_consecutive_duplicates` takes a list as input and returns a new list where consecutive duplicates are packed into sublists.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, it will not output anything. If there is an error, it will raise an AssertionError.\n"}

{"task_id": "Mbpp/282", "completion": "\nHere is a Python function that subtracts two lists element-wise:\n\n```python\ndef sub_list(list1, list2):\n    return [a - b for a, b in zip(list1, list2)]\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert sub_list([1, 2, 3],[4,5,6])==[-3,-3,-3]\n```\n\nThis function works by using a list comprehension and the built-in `zip` function to pair up the corresponding elements from the two input lists. It then subtracts the second list's elements from the first list's elements and returns the result as a new list.\n\nIf the assertion is true, then the function is working correctly. If it's false, then there's a bug in the function.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to subtract two lists element-wise. Your code should satisfy the following assertion:\n```python\nassert sub_list([1, 2, 3],[4,5,6])==[-3,-3,-3]\n```\n\n### Response:\nHere is a Python function that subtracts two lists element-wise:\n\n```python\ndef sub_list(list1, list2):\n    return [a - b for a, b in zip(list1, list2)]\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert sub_list([1, 2, 3],[4,5,6])==[-3,-3,-3]\n```\n\nThis function works by using a list comprehension and the built-in `zip` function to pair up the corresponding elements from the two input lists. It then subtracts the second list's elements from the first list's elements and returns the result as a new list.\n\nIf the assertion is true, then the function is working correctly. If it's false, then there's a bug in the function.\n"}

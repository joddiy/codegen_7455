{"task_id": "Mbpp/588", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef big_diff(lst):\n    return max(lst) - min(lst)\n\nassert big_diff([1,2,3,4]) == 3\n```\n\nThis function works by using the built-in `max()` and `min()` functions in Python to find the largest and smallest values in the list, respectively. It then returns the difference between these two values.\n\nThe `assert` statement is used to test the function. If the function returns the correct result for the given input, the assert statement does nothing. If the function returns a different result, the assert statement raises an `AssertionError`.\n\nThis function assumes that the input list is non-empty and contains only numbers. If this is not the case, you may want to add error checking to the function.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the difference between largest and smallest value in a given list. Your code should satisfy the following assertion:\n```python\nassert big_diff([1,2,3,4]) == 3\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef big_diff(lst):\n    return max(lst) - min(lst)\n\nassert big_diff([1,2,3,4]) == 3\n```\n\nThis function works by using the built-in `max()` and `min()` functions in Python to find the largest and smallest values in the list, respectively. It then returns the difference between these two values.\n\nThe `assert` statement is used to test the function. If the function returns the correct result for the given input, the assert statement does nothing. If the function returns a different result, the assert statement raises an `AssertionError`.\n\nThis function assumes that the input list is non-empty and contains only numbers. If this is not the case, you may want to add error checking to the function.\n"}

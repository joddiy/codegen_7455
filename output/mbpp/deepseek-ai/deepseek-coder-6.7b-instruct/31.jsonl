{"task_id": "Mbpp/74", "completion": "\nHere is a Python function that checks if two lists follow the same pattern:\n\n```python\ndef is_samepatterns(list1, list2):\n    return len(set(zip(list1, list2))) == len(list1) == len(list2)\n\nassert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True\n```\n\nThis function works by creating a set of tuples from the two lists using the `zip` function. The `set` function removes duplicates from the list of tuples. If the lengths of the set and the original lists are the same, it means that the two lists follow the same pattern.\n\nIn the assertion, `[\"red\",\"green\",\"green\"]` and `[\"a\", \"b\", \"b\"]` are two lists that follow the same pattern, so the assertion should pass.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check whether it follows the sequence given in the patterns array. Your code should satisfy the following assertion:\n```python\nassert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True\n```\n\n### Response:\nHere is a Python function that checks if two lists follow the same pattern:\n\n```python\ndef is_samepatterns(list1, list2):\n    return len(set(zip(list1, list2))) == len(list1) == len(list2)\n\nassert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True\n```\n\nThis function works by creating a set of tuples from the two lists using the `zip` function. The `set` function removes duplicates from the list of tuples. If the lengths of the set and the original lists are the same, it means that the two lists follow the same pattern.\n\nIn the assertion, `[\"red\",\"green\",\"green\"]` and `[\"a\", \"b\", \"b\"]` are two lists that follow the same pattern, so the assertion should pass.\n"}

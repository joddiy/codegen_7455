{"task_id": "Mbpp/126", "completion": "\nHere is a Python function that calculates the sum of common divisors of two given numbers:\n\n```python\ndef sum_common_divisors(num1, num2):\n    def common_divisors(n):\n        divisors = [1]\n        for i in range(2, n + 1):\n            if n % i == 0:\n                divisors.append(i)\n        return divisors\n\n    return sum(set(common_divisors(num1) + common_divisors(num2)))\n\nassert sum_common_divisors(10, 15) == 6\n```\n\nIn this function, `common_divisors` is a helper function that returns a list of all divisors of a given number. The main function `sum_common_divisors` calculates the sum of common divisors by first generating the lists of divisors for both numbers, then combining these lists, removing duplicates by converting them to a set, and finally calculating the sum.\n\nThe assertion at the end checks that the function works correctly for the given example.\n\nNote: This function has a time complexity of O(n), where n is the larger of the two input numbers. This is because it needs to iterate over all numbers up to n to find their divisors. If performance is a concern for large inputs, you might want to consider a more efficient algorithm.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the sum of common divisors of two given numbers. Your code should satisfy the following assertion:\n```python\nassert sum(10,15) == 6\n```\n\n### Response:\nHere is a Python function that calculates the sum of common divisors of two given numbers:\n\n```python\ndef sum_common_divisors(num1, num2):\n    def common_divisors(n):\n        divisors = [1]\n        for i in range(2, n + 1):\n            if n % i == 0:\n                divisors.append(i)\n        return divisors\n\n    return sum(set(common_divisors(num1) + common_divisors(num2)))\n\nassert sum_common_divisors(10, 15) == 6\n```\n\nIn this function, `common_divisors` is a helper function that returns a list of all divisors of a given number. The main function `sum_common_divisors` calculates the sum of common divisors by first generating the lists of divisors for both numbers, then combining these lists, removing duplicates by converting them to a set, and finally calculating the sum.\n\nThe assertion at the end checks that the function works correctly for the given example.\n\nNote: This function has a time complexity of O(n), where n is the larger of the two input numbers. This is because it needs to iterate over all numbers up to n to find their divisors. If performance is a concern for large inputs, you might want to consider a more efficient algorithm.\n"}

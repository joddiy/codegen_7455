{"task_id": "Mbpp/599", "completion": "\nHere is a Python function that calculates the sum and average of the first n natural numbers:\n\n```python\ndef sum_average(n):\n    total_sum = n * (n + 1) // 2\n    average = total_sum / n\n    return (total_sum, average)\n\n# Test the function\nassert sum_average(10) == (55, 5.5)\n```\n\nIn this function, we use the formula for the sum of the first n natural numbers, which is n*(n+1)/2. We then calculate the average by dividing the sum by n. The function returns a tuple containing the sum and average.\n\nThe assert statement is used to test the function. If the function returns the expected result, the assert statement does nothing. If the function does not return the expected result, the assert statement raises an AssertionError.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find sum and average of first n natural numbers. Your code should satisfy the following assertion:\n```python\nassert sum_average(10)==(55, 5.5)\n```\n\n### Response:\nHere is a Python function that calculates the sum and average of the first n natural numbers:\n\n```python\ndef sum_average(n):\n    total_sum = n * (n + 1) // 2\n    average = total_sum / n\n    return (total_sum, average)\n\n# Test the function\nassert sum_average(10) == (55, 5.5)\n```\n\nIn this function, we use the formula for the sum of the first n natural numbers, which is n*(n+1)/2. We then calculate the average by dividing the sum by n. The function returns a tuple containing the sum and average.\n\nThe assert statement is used to test the function. If the function returns the expected result, the assert statement does nothing. If the function does not return the expected result, the assert statement raises an AssertionError.\n"}

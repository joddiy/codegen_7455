{"task_id": "Mbpp/454", "completion": "\nHere is a Python script that uses regular expressions to solve this problem:\n\n```python\nimport re\n\ndef text_match_wordz(text):\n    if re.search('z', text):\n        return True\n    else:\n        return False\n\nassert text_match_wordz(\"pythonz.\")==True\n```\n\nIn this script, the `re.search()` function is used to search for the pattern 'z' in the given text. If 'z' is found, the function returns `True`, otherwise it returns `False`.\n\nThe `assert` statement is used to test the `text_match_wordz()` function. If the function returns `True` for the input \"pythonz.\", the `assert` statement does not raise an exception. If the function returns `False` for the input \"pythonz.\", the `assert` statement raises an `AssertionError`.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that matches a word containing 'z'. Your code should satisfy the following assertion:\n```python\nassert text_match_wordz(\"pythonz.\")==True\n```\n\n### Response:\nHere is a Python script that uses regular expressions to solve this problem:\n\n```python\nimport re\n\ndef text_match_wordz(text):\n    if re.search('z', text):\n        return True\n    else:\n        return False\n\nassert text_match_wordz(\"pythonz.\")==True\n```\n\nIn this script, the `re.search()` function is used to search for the pattern 'z' in the given text. If 'z' is found, the function returns `True`, otherwise it returns `False`.\n\nThe `assert` statement is used to test the `text_match_wordz()` function. If the function returns `True` for the input \"pythonz.\", the `assert` statement does not raise an exception. If the function returns `False` for the input \"pythonz.\", the `assert` statement raises an `AssertionError`.\n"}

{"task_id": "Mbpp/99", "completion": "\nHere is a Python function that converts a decimal number to its binary equivalent:\n\n```python\ndef decimal_to_binary(n):\n    return bin(n).replace(\"0b\", \"\")\n```\n\nThis function uses Python's built-in `bin` function to convert the decimal number to binary. The `replace` method is used to remove the '0b' prefix that `bin` adds to the result.\n\nYou can test the function with the provided assertion:\n\n```python\nassert decimal_to_binary(8) == '1000'\n```\n\nIf the assertion is true, the program will not output anything. If it's false, an `AssertionError` will be raised.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros. Your code should satisfy the following assertion:\n```python\nassert decimal_to_binary(8) == '1000'\n```\n\n### Response:\nHere is a Python function that converts a decimal number to its binary equivalent:\n\n```python\ndef decimal_to_binary(n):\n    return bin(n).replace(\"0b\", \"\")\n```\n\nThis function uses Python's built-in `bin` function to convert the decimal number to binary. The `replace` method is used to remove the '0b' prefix that `bin` adds to the result.\n\nYou can test the function with the provided assertion:\n\n```python\nassert decimal_to_binary(8) == '1000'\n```\n\nIf the assertion is true, the program will not output anything. If it's false, an `AssertionError` will be raised.\n"}

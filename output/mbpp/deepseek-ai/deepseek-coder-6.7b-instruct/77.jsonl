{"task_id": "Mbpp/129", "completion": "\nA magic square is a square grid filled with distinct positive integers such that each cell contains a different integer and the sum of the integers in each row, each column, and both main diagonals is the same.\n\nHere is a Python function that checks if a given matrix is a magic square:\n\n```python\ndef magic_square_test(matrix):\n    # Get the size of the matrix\n    size = len(matrix)\n\n    # Calculate the sum of the first row\n    magic_constant = sum(matrix[0])\n\n    # Check rows and columns\n    for i in range(size):\n        if sum(matrix[i]) != magic_constant or sum([row[i] for row in matrix]) != magic_constant:\n            return False\n\n    # Check diagonals\n    if sum(matrix[i][i] for i in range(size)) != magic_constant or sum(matrix[i][size - i - 1] for i in range(size)) != magic_constant:\n        return False\n\n    # If all checks pass, the matrix is a magic square\n    return True\n\n# Test the function\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]]) == True\n```\n\nThis function first calculates the sum of the first row as the magic constant. Then it checks each row and column to see if their sums are equal to the magic constant. If any of these checks fail, the function returns `False`. Finally, it checks the sums of the two diagonals. If both sums are equal to the magic constant, the function returns `True`, indicating that the matrix is a magic square.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n### Response:\nA magic square is a square grid filled with distinct positive integers such that each cell contains a different integer and the sum of the integers in each row, each column, and both main diagonals is the same.\n\nHere is a Python function that checks if a given matrix is a magic square:\n\n```python\ndef magic_square_test(matrix):\n    # Get the size of the matrix\n    size = len(matrix)\n\n    # Calculate the sum of the first row\n    magic_constant = sum(matrix[0])\n\n    # Check rows and columns\n    for i in range(size):\n        if sum(matrix[i]) != magic_constant or sum([row[i] for row in matrix]) != magic_constant:\n            return False\n\n    # Check diagonals\n    if sum(matrix[i][i] for i in range(size)) != magic_constant or sum(matrix[i][size - i - 1] for i in range(size)) != magic_constant:\n        return False\n\n    # If all checks pass, the matrix is a magic square\n    return True\n\n# Test the function\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]]) == True\n```\n\nThis function first calculates the sum of the first row as the magic constant. Then it checks each row and column to see if their sums are equal to the magic constant. If any of these checks fail, the function returns `False`. Finally, it checks the sums of the two diagonals. If both sums are equal to the magic constant, the function returns `True`, indicating that the matrix is a magic square.\n"}

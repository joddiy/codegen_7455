{"task_id": "Mbpp/586", "completion": "\nHere is a Python function that accomplishes this task:\n\n```python\ndef split_Arr(arr, n):\n    return arr[n:] + arr[:n]\n\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```\n\nThis function works by slicing the input list at the nth element and concatenating the two parts in the desired order. The first part of the list (from the nth element to the end) is added to the end of the list, and the second part (from the beginning to the nth element) is added to the beginning.\n\nThe assert statement at the end checks that the function works correctly with the provided example. If the function returns the expected result, the assert statement does nothing. If the function does not return the expected result, an AssertionError is raised.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to split a list at the nth eelment and add the first part to the end. Your code should satisfy the following assertion:\n```python\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```\n\n### Response:\nHere is a Python function that accomplishes this task:\n\n```python\ndef split_Arr(arr, n):\n    return arr[n:] + arr[:n]\n\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```\n\nThis function works by slicing the input list at the nth element and concatenating the two parts in the desired order. The first part of the list (from the nth element to the end) is added to the end of the list, and the second part (from the beginning to the nth element) is added to the beginning.\n\nThe assert statement at the end checks that the function works correctly with the provided example. If the function returns the expected result, the assert statement does nothing. If the function does not return the expected result, an AssertionError is raised.\n"}

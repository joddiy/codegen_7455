{"task_id": "Mbpp/598", "completion": "\nSure, here is a Python function that checks if a given number is an Armstrong number or not. An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself.\n\n```python\ndef armstrong_number(num):\n    # Convert the number to string to easily access its digits\n    num_str = str(num)\n    num_len = len(num_str)\n\n    # Calculate the sum of the cubes of its digits\n    sum_cubes = sum(int(digit)**num_len for digit in num_str)\n\n    # Check if the number is an Armstrong number\n    return sum_cubes == num\n\n# Test the function\nassert armstrong_number(153) == True\n```\n\nThis function works by first converting the number to a string, so that we can easily iterate over its digits. It then calculates the sum of the cubes of its digits by using a generator expression to raise each digit to the power of the number of digits, and the `sum` function to add these up. Finally, it checks if this sum is equal to the original number, and returns `True` if it is, and `False` otherwise.\n\nThis function should work for any positive integer input, and will return `True` if the input is an Armstrong number, and `False` otherwise.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check whether the given number is armstrong or not. Your code should satisfy the following assertion:\n```python\nassert armstrong_number(153)==True\n```\n\n### Response:\nSure, here is a Python function that checks if a given number is an Armstrong number or not. An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself.\n\n```python\ndef armstrong_number(num):\n    # Convert the number to string to easily access its digits\n    num_str = str(num)\n    num_len = len(num_str)\n\n    # Calculate the sum of the cubes of its digits\n    sum_cubes = sum(int(digit)**num_len for digit in num_str)\n\n    # Check if the number is an Armstrong number\n    return sum_cubes == num\n\n# Test the function\nassert armstrong_number(153) == True\n```\n\nThis function works by first converting the number to a string, so that we can easily iterate over its digits. It then calculates the sum of the cubes of its digits by using a generator expression to raise each digit to the power of the number of digits, and the `sum` function to add these up. Finally, it checks if this sum is equal to the original number, and returns `True` if it is, and `False` otherwise.\n\nThis function should work for any positive integer input, and will return `True` if the input is an Armstrong number, and `False` otherwise.\n"}

{"task_id": "Mbpp/88", "completion": "\nHere is a Python function that accomplishes this task:\n\n```python\ndef freq_count(lst):\n    freqs = {}\n    for i in lst:\n        if i in freqs:\n            freqs[i] += 1\n        else:\n            freqs[i] = 1\n    return freqs\n```\n\nThis function works by iterating over each element in the list. If the element is already a key in the dictionary, it increments the value associated with that key by 1. If the element is not a key in the dictionary, it adds a new key-value pair with the element as the key and 1 as the value.\n\nYou can then call the function with your list as the argument:\n\n```python\nprint(freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30]))\n```\n\nThis will output:\n\n```python\n{10: 4, 20: 4, 40: 2, 50: 2, 30: 1}\n```\n\nWhich matches the assertion in the problem statement.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to get the frequency of all the elements in a list, returned as a dictionary. Your code should satisfy the following assertion:\n```python\nassert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})\n```\n\n### Response:\nHere is a Python function that accomplishes this task:\n\n```python\ndef freq_count(lst):\n    freqs = {}\n    for i in lst:\n        if i in freqs:\n            freqs[i] += 1\n        else:\n            freqs[i] = 1\n    return freqs\n```\n\nThis function works by iterating over each element in the list. If the element is already a key in the dictionary, it increments the value associated with that key by 1. If the element is not a key in the dictionary, it adds a new key-value pair with the element as the key and 1 as the value.\n\nYou can then call the function with your list as the argument:\n\n```python\nprint(freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30]))\n```\n\nThis will output:\n\n```python\n{10: 4, 20: 4, 40: 2, 50: 2, 30: 1}\n```\n\nWhich matches the assertion in the problem statement.\n"}

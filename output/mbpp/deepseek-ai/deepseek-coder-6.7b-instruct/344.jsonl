{"task_id": "Mbpp/745", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef divisible_by_digits(startnum, endnum):\n    result = []\n    for num in range(startnum, endnum+1):\n        if num < 10:\n            result.append(num)\n        else:\n            digits = [int(d) for d in str(num)]\n            if all(num % d == 0 for d in digits):\n                result.append(num)\n    return result\n\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\nThis script defines a function `divisible_by_digits(startnum, endnum)` that takes two integers as input and returns a list of numbers within the range from `startnum` to `endnum` (inclusive) where every number is divisible by every digit it contains.\n\nThe function works by iterating over each number in the range, converting it to a list of digits, and then checking if the number is divisible by every digit in the list. If it is, the number is added to the result list.\n\nThe assertion at the end of the script checks if the function works correctly for the given example.\n\nNote: This script assumes that the input range is valid and does not contain negative numbers. If the input range may include negative numbers, the function should be modified to handle these cases appropriately.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php. Your code should satisfy the following assertion:\n```python\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef divisible_by_digits(startnum, endnum):\n    result = []\n    for num in range(startnum, endnum+1):\n        if num < 10:\n            result.append(num)\n        else:\n            digits = [int(d) for d in str(num)]\n            if all(num % d == 0 for d in digits):\n                result.append(num)\n    return result\n\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\nThis script defines a function `divisible_by_digits(startnum, endnum)` that takes two integers as input and returns a list of numbers within the range from `startnum` to `endnum` (inclusive) where every number is divisible by every digit it contains.\n\nThe function works by iterating over each number in the range, converting it to a list of digits, and then checking if the number is divisible by every digit in the list. If it is, the number is added to the result list.\n\nThe assertion at the end of the script checks if the function works correctly for the given example.\n\nNote: This script assumes that the input range is valid and does not contain negative numbers. If the input range may include negative numbers, the function should be modified to handle these cases appropriately.\n"}

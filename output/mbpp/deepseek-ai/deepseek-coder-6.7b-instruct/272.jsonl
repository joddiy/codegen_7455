{"task_id": "Mbpp/585", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef expensive_items(dataset, n):\n    # Sort the dataset in descending order by price\n    sorted_dataset = sorted(dataset, key=lambda x: x['price'], reverse=True)\n    \n    # Return the first n items from the sorted dataset\n    return sorted_dataset[:n]\n```\n\nThis function first sorts the dataset in descending order by price using the `sorted` function and a lambda function as the key. Then it returns the first n items from the sorted dataset.\n\nYou can test the function with the provided assertion:\n\n```python\nassert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\n```\n\nThis assertion will pass if the function is implemented correctly.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the n most expensive items in a given dataset. Your code should satisfy the following assertion:\n```python\nassert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef expensive_items(dataset, n):\n    # Sort the dataset in descending order by price\n    sorted_dataset = sorted(dataset, key=lambda x: x['price'], reverse=True)\n    \n    # Return the first n items from the sorted dataset\n    return sorted_dataset[:n]\n```\n\nThis function first sorts the dataset in descending order by price using the `sorted` function and a lambda function as the key. Then it returns the first n items from the sorted dataset.\n\nYou can test the function with the provided assertion:\n\n```python\nassert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\n```\n\nThis assertion will pass if the function is implemented correctly.\n"}

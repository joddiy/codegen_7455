{"task_id": "Mbpp/143", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef find_lists(tup):\n    count = 0\n    for element in tup:\n        if isinstance(element, list):\n            count += 1\n    return count\n```\n\nThis function works by iterating over each element in the given tuple. If the element is a list (checked using the `isinstance` function), it increments the count. Finally, it returns the count.\n\nYou can test the function with the provided assertion:\n\n```python\nassert find_lists(([1, 2, 3, 4], [5, 6, 7, 8])) == 2\n```\n\nIf the assertion is true, the function works correctly. If it's false, there's a bug in the function.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find number of lists present in the given tuple. Your code should satisfy the following assertion:\n```python\nassert find_lists(([1, 2, 3, 4], [5, 6, 7, 8])) == 2\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef find_lists(tup):\n    count = 0\n    for element in tup:\n        if isinstance(element, list):\n            count += 1\n    return count\n```\n\nThis function works by iterating over each element in the given tuple. If the element is a list (checked using the `isinstance` function), it increments the count. Finally, it returns the count.\n\nYou can test the function with the provided assertion:\n\n```python\nassert find_lists(([1, 2, 3, 4], [5, 6, 7, 8])) == 2\n```\n\nIf the assertion is true, the function works correctly. If it's false, there's a bug in the function.\n"}

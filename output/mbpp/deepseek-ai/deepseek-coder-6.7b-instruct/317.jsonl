{"task_id": "Mbpp/639", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef sum_names(names):\n    return sum(len(name) for name in names if name[0].isupper())\n\nassert sum_names(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```\n\nThis script defines a function `sum_names` that takes a list of names as input. It uses a generator expression to iterate over each name in the list and calculate its length if the first character of the name is uppercase (checked using the `isupper` method). The sum of these lengths is then returned.\n\nThe assertion checks that the function works correctly with the provided example.\n\nNote: This script assumes that all names in the list are strings. If this is not the case, you may need to add additional error checking to handle non-string inputs.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter. Your code should satisfy the following assertion:\n```python\nassert sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef sum_names(names):\n    return sum(len(name) for name in names if name[0].isupper())\n\nassert sum_names(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```\n\nThis script defines a function `sum_names` that takes a list of names as input. It uses a generator expression to iterate over each name in the list and calculate its length if the first character of the name is uppercase (checked using the `isupper` method). The sum of these lengths is then returned.\n\nThe assertion checks that the function works correctly with the provided example.\n\nNote: This script assumes that all names in the list are strings. If this is not the case, you may need to add additional error checking to handle non-string inputs.\n"}

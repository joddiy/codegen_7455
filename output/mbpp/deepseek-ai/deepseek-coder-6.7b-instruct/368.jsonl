{"task_id": "Mbpp/773", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef occurrence_substring(s, sub):\n    pos = s.find(sub)\n    if pos != -1:\n        return (sub, pos, pos+len(sub))\n    else:\n        return None\n\nassert occurrence_substring('python programming, python language','python')==('python', 0, 6)\n```\n\nIn this script, the function `occurrence_substring` takes two parameters: a string `s` and a substring `sub`. It uses the `find` method of the string to find the first occurrence of the substring in the string. If the substring is found, it returns a tuple containing the substring, the starting position, and the ending position of the substring in the string. If the substring is not found, it returns `None`.\n\nThe assertion at the end checks whether the function works correctly. It should pass if the function returns the tuple `('python', 0, 6)` when the string is `'python programming, python language'` and the substring is `'python'`.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the occurrence and position of the substrings within a string. Return None if there is no match. Your code should satisfy the following assertion:\n```python\nassert occurance_substring('python programming, python language','python')==('python', 0, 6)\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef occurrence_substring(s, sub):\n    pos = s.find(sub)\n    if pos != -1:\n        return (sub, pos, pos+len(sub))\n    else:\n        return None\n\nassert occurrence_substring('python programming, python language','python')==('python', 0, 6)\n```\n\nIn this script, the function `occurrence_substring` takes two parameters: a string `s` and a substring `sub`. It uses the `find` method of the string to find the first occurrence of the substring in the string. If the substring is found, it returns a tuple containing the substring, the starting position, and the ending position of the substring in the string. If the substring is not found, it returns `None`.\n\nThe assertion at the end checks whether the function works correctly. It should pass if the function returns the tuple `('python', 0, 6)` when the string is `'python programming, python language'` and the substring is `'python'`.\n"}

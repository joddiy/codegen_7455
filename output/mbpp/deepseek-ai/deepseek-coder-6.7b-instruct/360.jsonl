{"task_id": "Mbpp/764", "completion": "\nSure, here is a simple Python function that counts the number of digits in a given string:\n\n```python\ndef number_ctr(s):\n    return sum(c.isdigit() for c in s)\n\nassert number_ctr('program2bedone') == 1\n```\n\nThis function works by using a generator expression to iterate over each character in the string `s`. The `isdigit()` method checks if the character is a digit and returns `True` if it is, and `False` otherwise. The `sum()` function then adds up all the `True` values, effectively counting the number of digits in the string.\n\nYou can test this function with other strings as well. For example:\n\n```python\nassert number_ctr('Hello, world123') == 3\nassert number_ctr('abc') == 0\nassert number_ctr('1234567890') == 10\n```\n\nThese tests should pass if the function is implemented correctly.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to count number of digits in a given string. Your code should satisfy the following assertion:\n```python\nassert number_ctr('program2bedone') == 1\n```\n\n### Response:\nSure, here is a simple Python function that counts the number of digits in a given string:\n\n```python\ndef number_ctr(s):\n    return sum(c.isdigit() for c in s)\n\nassert number_ctr('program2bedone') == 1\n```\n\nThis function works by using a generator expression to iterate over each character in the string `s`. The `isdigit()` method checks if the character is a digit and returns `True` if it is, and `False` otherwise. The `sum()` function then adds up all the `True` values, effectively counting the number of digits in the string.\n\nYou can test this function with other strings as well. For example:\n\n```python\nassert number_ctr('Hello, world123') == 3\nassert number_ctr('abc') == 0\nassert number_ctr('1234567890') == 10\n```\n\nThese tests should pass if the function is implemented correctly.\n"}

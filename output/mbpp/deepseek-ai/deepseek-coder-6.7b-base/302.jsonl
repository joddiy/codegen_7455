{"task_id": "Mbpp/619", "completion": "\n```python\ndef move_num(string):\n    nums = []\n    letters = []\n    for char in string:\n        if char.isdigit():\n            nums.append(char)\n        else:\n            letters.append(char)\n    return ''.join(letters) + ''.join(nums)\n```\n\n\n### Explanation:\nThe function `move_num` takes a string as input and returns a new string with all the numbers moved to the end of the string. The function uses two lists, `nums` and `letters`, to store the numbers and letters in the original string, respectively. It then joins the two lists to create the new string.\n\nThe function iterates through the input string using a for loop. For each character in the string, it checks if it is a digit using the `isdigit` method. If the character is a digit, it is added to the `nums` list. If the character is not a digit, it is added to the `letters` list.\n\nFinally, the function joins the `letters` and `nums` lists using the `join` method to create the new string. The new string is returned by the function.\n\nThe assertion statement at the end of the code checks if the function `move_num` returns the expected string for the given input. If the assertion fails, the code will raise an error.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to move all the numbers to the end of the given string. Your code should satisfy the following assertion:\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\n### Response:\n```python\ndef move_num(string):\n    nums = []\n    letters = []\n    for char in string:\n        if char.isdigit():\n            nums.append(char)\n        else:\n            letters.append(char)\n    return ''.join(letters) + ''.join(nums)\n```\n\n\n### Explanation:\nThe function `move_num` takes a string as input and returns a new string with all the numbers moved to the end of the string. The function uses two lists, `nums` and `letters`, to store the numbers and letters in the original string, respectively. It then joins the two lists to create the new string.\n\nThe function iterates through the input string using a for loop. For each character in the string, it checks if it is a digit using the `isdigit` method. If the character is a digit, it is added to the `nums` list. If the character is not a digit, it is added to the `letters` list.\n\nFinally, the function joins the `letters` and `nums` lists using the `join` method to create the new string. The new string is returned by the function.\n\nThe assertion statement at the end of the code checks if the function `move_num` returns the expected string for the given input. If the assertion fails, the code will raise an error.\n"}

{"task_id": "Mbpp/4", "completion": "\n```python\ndef heap_queue_largest(numbers, n):\n    heap = []\n    for number in numbers:\n        heapq.heappush(heap, -number)\n    result = []\n    for i in range(n):\n        result.append(-heapq.heappop(heap))\n    return result\n```\n\n### Explanation:\nThe function heap_queue_largest takes a list of numbers and an integer n as input. It creates an empty list heap and pushes each number in the list into the heap using the heapq.heappush function. Then, it creates an empty list result and pops the n largest elements from the heap using the heapq.heappop function. Finally, it returns the result list in descending order.\n\n### Testing:\nThe function is tested using the assert statement. The assert statement checks if the function returns the correct result for the given input. If the assertion fails, an AssertionError is raised.\n\n### Conclusion:\nThe function heap_queue_largest is a Python function that returns the n largest integers from a given list of numbers in descending order. The function uses the heapq module to efficiently find the n largest elements in the list. The function is tested using the assert statement to ensure that it returns the correct result for the given input.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the n largest integers from a given list of numbers, returned in descending order. Your code should satisfy the following assertion:\n```python\nassert heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]\n```\n\n### Response:\n```python\ndef heap_queue_largest(numbers, n):\n    heap = []\n    for number in numbers:\n        heapq.heappush(heap, -number)\n    result = []\n    for i in range(n):\n        result.append(-heapq.heappop(heap))\n    return result\n```\n\n### Explanation:\nThe function heap_queue_largest takes a list of numbers and an integer n as input. It creates an empty list heap and pushes each number in the list into the heap using the heapq.heappush function. Then, it creates an empty list result and pops the n largest elements from the heap using the heapq.heappop function. Finally, it returns the result list in descending order.\n\n### Testing:\nThe function is tested using the assert statement. The assert statement checks if the function returns the correct result for the given input. If the assertion fails, an AssertionError is raised.\n\n### Conclusion:\nThe function heap_queue_largest is a Python function that returns the n largest integers from a given list of numbers in descending order. The function uses the heapq module to efficiently find the n largest elements in the list. The function is tested using the assert statement to ensure that it returns the correct result for the given input.\n"}

{"task_id": "Mbpp/734", "completion": "\n\n```python\ndef sum_Of_Subarray_Prod(lst):\n    sum = 0\n    for i in range(len(lst)):\n        for j in range(i, len(lst)):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= lst[k]\n            sum += prod\n    return sum\n\nassert sum_Of_Subarray_Prod([1,2,3]) == 20\n```\n\n### Explanation:\n\nThe function `sum_Of_Subarray_Prod` takes a list `lst` as input and returns the sum of products of all possible sublists of `lst`. The function uses a nested loop to iterate over all possible sublists of `lst`. For each sublist, the function calculates the product of all elements in the sublist and adds it to the `sum` variable. Finally, the function returns the `sum` variable.\n\nThe assertion `assert sum_Of_Subarray_Prod([1,2,3]) == 20` checks if the function returns the correct result for the input list `[1,2,3]`. If the assertion fails, the test will fail and the function will not work as expected.\n\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/. Your code should satisfy the following assertion:\n```python\nassert sum_Of_Subarray_Prod([1,2,3]) == 20\n```\n\n### Response:\n\n```python\ndef sum_Of_Subarray_Prod(lst):\n    sum = 0\n    for i in range(len(lst)):\n        for j in range(i, len(lst)):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= lst[k]\n            sum += prod\n    return sum\n\nassert sum_Of_Subarray_Prod([1,2,3]) == 20\n```\n\n### Explanation:\n\nThe function `sum_Of_Subarray_Prod` takes a list `lst` as input and returns the sum of products of all possible sublists of `lst`. The function uses a nested loop to iterate over all possible sublists of `lst`. For each sublist, the function calculates the product of all elements in the sublist and adds it to the `sum` variable. Finally, the function returns the `sum` variable.\n\nThe assertion `assert sum_Of_Subarray_Prod([1,2,3]) == 20` checks if the function returns the correct result for the input list `[1,2,3]`. If the assertion fails, the test will fail and the function will not work as expected.\n\n\n"}

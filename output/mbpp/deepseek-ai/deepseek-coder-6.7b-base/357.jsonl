{"task_id": "Mbpp/760", "completion": "\n```python\ndef unique_Element(list):\n    for i in list:\n        if list.count(i) > 1:\n            return False\n    return True\n```\n\n### Explanation:\nThe function `unique_Element` takes a list as input and returns `True` if the list contains only one distinct element, and `False` otherwise. The function uses a loop to iterate over the elements in the list. For each element, it checks the number of occurrences of that element in the list using the `count` method. If the number of occurrences is greater than 1, the function returns `False`. If the loop completes without returning `False`, the function returns `True`.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to check whether a list of numbers contains only one distinct element or not. Your code should satisfy the following assertion:\n```python\nassert unique_Element([1,1,1]) == True\n```\n\n### Response:\n```python\ndef unique_Element(list):\n    for i in list:\n        if list.count(i) > 1:\n            return False\n    return True\n```\n\n### Explanation:\nThe function `unique_Element` takes a list as input and returns `True` if the list contains only one distinct element, and `False` otherwise. The function uses a loop to iterate over the elements in the list. For each element, it checks the number of occurrences of that element in the list using the `count` method. If the number of occurrences is greater than 1, the function returns `False`. If the loop completes without returning `False`, the function returns `True`.\n"}

{"task_id": "Mbpp/398", "completion": "\n\n```python\ndef sum_of_digits(lst):\n    sum = 0\n    for i in lst:\n        sum += i\n    return sum\n```\n\n### Testing:\n\n```python\nassert sum_of_digits([10,2,56])==17\n```\n\n### Explanation:\n\nThe function `sum_of_digits` takes a list of integers as input and returns the sum of the digits of each number in the list. The function iterates through the list and adds each number to the `sum` variable. The `sum` variable is then returned as the result of the function.\n\nThe assertion `assert sum_of_digits([10,2,56])==17` tests the function with the input list `[10,2,56]` and checks that the function returns the expected result `17`. If the assertion fails, the test will raise an exception and the test will fail.\n\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to compute the sum of digits of each number of a given list. Your code should satisfy the following assertion:\n```python\nassert sum_of_digits([10,2,56])==14\n```\n\n### Response:\n\n```python\ndef sum_of_digits(lst):\n    sum = 0\n    for i in lst:\n        sum += i\n    return sum\n```\n\n### Testing:\n\n```python\nassert sum_of_digits([10,2,56])==17\n```\n\n### Explanation:\n\nThe function `sum_of_digits` takes a list of integers as input and returns the sum of the digits of each number in the list. The function iterates through the list and adds each number to the `sum` variable. The `sum` variable is then returned as the result of the function.\n\nThe assertion `assert sum_of_digits([10,2,56])==17` tests the function with the input list `[10,2,56]` and checks that the function returns the expected result `17`. If the assertion fails, the test will raise an exception and the test will fail.\n\n\n"}

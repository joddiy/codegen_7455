{"task_id": "Mbpp/567", "completion": "\n\n```python\ndef issort_list(lst):\n    for i in range(len(lst)-1):\n        if lst[i]>lst[i+1]:\n            return False\n    return True\n```\n\n### Testing:\n\n```python\nassert issort_list([1,2,4,6,8,10,12,14,16,17])==True\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7,5])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7,5,3])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7,5,3,1])==True\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check whether a specified list is sorted or not. Your code should satisfy the following assertion:\n```python\nassert issort_list([1,2,4,6,8,10,12,14,16,17])==True\n```\n\n### Response:\n\n```python\ndef issort_list(lst):\n    for i in range(len(lst)-1):\n        if lst[i]>lst[i+1]:\n            return False\n    return True\n```\n\n### Testing:\n\n```python\nassert issort_list([1,2,4,6,8,10,12,14,16,17])==True\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7,5])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7,5,3])==False\nassert issort_list([1,2,4,6,8,10,12,14,16,17,15,13,11,9,7,5,3,1])==True\n```\n"}

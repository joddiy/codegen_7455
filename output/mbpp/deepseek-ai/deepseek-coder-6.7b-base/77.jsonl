{"task_id": "Mbpp/129", "completion": "\n\n```python\ndef magic_square_test(matrix):\n    # check if the matrix is a square matrix\n    if len(matrix) != len(matrix[0]):\n        return False\n\n    # check if the sum of each row is the same\n    row_sum = sum(matrix[0])\n    for row in matrix:\n        if sum(row) != row_sum:\n            return False\n\n    # check if the sum of each column is the same\n    col_sum = sum([row[0] for row in matrix])\n    for i in range(len(matrix)):\n        if sum([row[i] for row in matrix]) != col_sum:\n            return False\n\n    # check if the sum of the diagonals is the same\n    diag_sum = sum([matrix[i][i] for i in range(len(matrix))])\n    if diag_sum != sum([matrix[i][len(matrix)-i-1] for i in range(len(matrix))]):\n        return False\n\n    return True\n```\n\n### Explanation:\nThe function `magic_square_test` takes a matrix as input and returns a boolean value indicating whether the matrix is a magic square.\n\nThe function first checks if the matrix is a square matrix by checking if the number of rows and columns are the same. If not, it returns False.\n\nNext, the function checks if the sum of each row is the same by summing the elements in the first row and comparing it to the sum of each subsequent row. If any row does not have the same sum, the function returns False.\n\nThe function then checks if the sum of each column is the same by summing the elements in the first column and comparing it to the sum of each subsequent column. If any column does not have the same sum, the function returns False.\n\nFinally, the function checks if the sum of the diagonals is the same by summing the elements in the main diagonal and comparing it to the sum of the elements in the secondary diagonal. If the sums are not equal, the function returns False.\n\nIf all checks pass, the function returns True, indicating that the matrix is a magic square.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n### Response:\n\n```python\ndef magic_square_test(matrix):\n    # check if the matrix is a square matrix\n    if len(matrix) != len(matrix[0]):\n        return False\n\n    # check if the sum of each row is the same\n    row_sum = sum(matrix[0])\n    for row in matrix:\n        if sum(row) != row_sum:\n            return False\n\n    # check if the sum of each column is the same\n    col_sum = sum([row[0] for row in matrix])\n    for i in range(len(matrix)):\n        if sum([row[i] for row in matrix]) != col_sum:\n            return False\n\n    # check if the sum of the diagonals is the same\n    diag_sum = sum([matrix[i][i] for i in range(len(matrix))])\n    if diag_sum != sum([matrix[i][len(matrix)-i-1] for i in range(len(matrix))]):\n        return False\n\n    return True\n```\n\n### Explanation:\nThe function `magic_square_test` takes a matrix as input and returns a boolean value indicating whether the matrix is a magic square.\n\nThe function first checks if the matrix is a square matrix by checking if the number of rows and columns are the same. If not, it returns False.\n\nNext, the function checks if the sum of each row is the same by summing the elements in the first row and comparing it to the sum of each subsequent row. If any row does not have the same sum, the function returns False.\n\nThe function then checks if the sum of each column is the same by summing the elements in the first column and comparing it to the sum of each subsequent column. If any column does not have the same sum, the function returns False.\n\nFinally, the function checks if the sum of the diagonals is the same by summing the elements in the main diagonal and comparing it to the sum of the elements in the secondary diagonal. If the sums are not equal, the function returns False.\n\nIf all checks pass, the function returns True, indicating that the matrix is a magic square.\n"}

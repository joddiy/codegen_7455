{"task_id": "Mbpp/569", "completion": "\n\n```python\ndef sort_sublists(list_of_lists):\n    sorted_list = []\n    for sublist in list_of_lists:\n        sorted_sublist = sorted(sublist)\n        sorted_list.append(sorted_sublist)\n    return sorted_list\n\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to sort each sublist of strings in a given list of lists. Your code should satisfy the following assertion:\n```python\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\n### Response:\n\n```python\ndef sort_sublists(list_of_lists):\n    sorted_list = []\n    for sublist in list_of_lists:\n        sorted_sublist = sorted(sublist)\n        sorted_list.append(sorted_sublist)\n    return sorted_list\n\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\n\n"}

{"task_id": "Mbpp/770", "completion": "\n```python\ndef odd_num_sum(n):\n    return sum(i**4 for i in range(1, n*2, 2))\n```\n\n### Test:\n```python\nassert odd_num_sum(2) == 82\n```\n\n### Explanation:\nThe function `odd_num_sum` takes an integer `n` as input and returns the sum of the fourth power of the first `n` odd natural numbers.\n\nThe function uses a generator expression to generate the odd natural numbers up to `n*2`, and then uses the `sum` function to calculate the sum of the fourth power of each number.\n\nThe assertion `assert odd_num_sum(2) == 82` checks that the function returns the correct result for the input `2`.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the sum of fourth power of first n odd natural numbers. Your code should satisfy the following assertion:\n```python\nassert odd_num_sum(2) == 82\n```\n\n### Response:\n```python\ndef odd_num_sum(n):\n    return sum(i**4 for i in range(1, n*2, 2))\n```\n\n### Test:\n```python\nassert odd_num_sum(2) == 82\n```\n\n### Explanation:\nThe function `odd_num_sum` takes an integer `n` as input and returns the sum of the fourth power of the first `n` odd natural numbers.\n\nThe function uses a generator expression to generate the odd natural numbers up to `n*2`, and then uses the `sum` function to calculate the sum of the fourth power of each number.\n\nThe assertion `assert odd_num_sum(2) == 82` checks that the function returns the correct result for the input `2`.\n"}

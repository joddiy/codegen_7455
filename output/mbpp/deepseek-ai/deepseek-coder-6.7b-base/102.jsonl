{"task_id": "Mbpp/222", "completion": "\n\n```python\ndef check_type(tup):\n    return all(type(tup[0]) == type(i) for i in tup)\n```\n\n### Explanation:\n\nThe function `check_type` takes a tuple as an argument and returns `True` if all the elements in the tuple have the same data type, and `False` otherwise.\n\nThe function uses the `all` function to check if all elements in the tuple have the same data type. The `all` function returns `True` if all elements in the iterable are true, and `False` otherwise.\n\nThe `type` function returns the data type of the argument. The `==` operator is used to compare the data types of the elements in the tuple.\n\nThe function returns `True` if all elements in the tuple have the same data type, and `False` otherwise.\n\nThe assertion checks if the function returns `True` for the given tuple.\n\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check if all the elements in tuple have same data type or not. Your code should satisfy the following assertion:\n```python\nassert check_type((5, 6, 7, 3, 5, 6) ) == True\n```\n\n### Response:\n\n```python\ndef check_type(tup):\n    return all(type(tup[0]) == type(i) for i in tup)\n```\n\n### Explanation:\n\nThe function `check_type` takes a tuple as an argument and returns `True` if all the elements in the tuple have the same data type, and `False` otherwise.\n\nThe function uses the `all` function to check if all elements in the tuple have the same data type. The `all` function returns `True` if all elements in the iterable are true, and `False` otherwise.\n\nThe `type` function returns the data type of the argument. The `==` operator is used to compare the data types of the elements in the tuple.\n\nThe function returns `True` if all elements in the tuple have the same data type, and `False` otherwise.\n\nThe assertion checks if the function returns `True` for the given tuple.\n\n\n"}

{"task_id": "Mbpp/172", "completion": "\n\n```python\ndef count_occurance(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i:i+3] == \"std\":\n            count += 1\n    return count\n```\n\n### Explanation:\nThe function `count_occurance` takes a string as input and returns the number of occurrences of the string \"std\" in the input string. The function uses a for loop to iterate over the input string and checks if the current substring of length 3 is equal to \"std\". If it is, the count is incremented by 1. Finally, the function returns the count.\n\n### Test Cases:\nThe function is tested with the following test cases:\n\n```python\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstd", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to count the number of occurence of the string 'std' in a given string. Your code should satisfy the following assertion:\n```python\nassert count_occurance(\"letstdlenstdporstd\") == 3\n```\n\n### Response:\n\n```python\ndef count_occurance(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i:i+3] == \"std\":\n            count += 1\n    return count\n```\n\n### Explanation:\nThe function `count_occurance` takes a string as input and returns the number of occurrences of the string \"std\" in the input string. The function uses a for loop to iterate over the input string and checks if the current substring of length 3 is equal to \"std\". If it is, the count is incremented by 1. Finally, the function returns the count.\n\n### Test Cases:\nThe function is tested with the following test cases:\n\n```python\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstdporstd\") == 3\nassert count_occurance(\"letstdlenstd"}

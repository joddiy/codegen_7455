{"task_id": "Mbpp/730", "completion": "\n\n```python\ndef consecutive_duplicates(lst):\n    new_lst = []\n    for i in range(len(lst)):\n        if i == 0:\n            new_lst.append(lst[i])\n        elif lst[i] != lst[i-1]:\n            new_lst.append(lst[i])\n    return new_lst\n```\n\n### Test:\n\n```python\nassert consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to remove consecutive duplicates of a given list. Your code should satisfy the following assertion:\n```python\nassert consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n```\n\n### Response:\n\n```python\ndef consecutive_duplicates(lst):\n    new_lst = []\n    for i in range(len(lst)):\n        if i == 0:\n            new_lst.append(lst[i])\n        elif lst[i] != lst[i-1]:\n            new_lst.append(lst[i])\n    return new_lst\n```\n\n### Test:\n\n```python\nassert consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n```\n"}

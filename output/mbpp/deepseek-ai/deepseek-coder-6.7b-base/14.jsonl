{"task_id": "Mbpp/20", "completion": "\n\n```python\ndef is_woodall(n):\n    return n % 2 == 0 and n % 3 == 0 and n % 5 == 0\n```\n\n### Explanation:\n\nThe function `is_woodall` takes an integer `n` as input and returns `True` if `n` is divisible by 2, 3, and 5, and `False` otherwise.\n\nThe assertion `assert is_woodall(383) == True` checks if the function `is_woodall` returns `True` when given the input `383`. If the assertion fails, the script will raise an `AssertionError`.\n\nThe function `is_woodall` can be used to check if a number is a woodall number or not.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check if the given number is woodball or not. Your code should satisfy the following assertion:\n```python\nassert is_woodall(383) == True\n```\n\n### Response:\n\n```python\ndef is_woodall(n):\n    return n % 2 == 0 and n % 3 == 0 and n % 5 == 0\n```\n\n### Explanation:\n\nThe function `is_woodall` takes an integer `n` as input and returns `True` if `n` is divisible by 2, 3, and 5, and `False` otherwise.\n\nThe assertion `assert is_woodall(383) == True` checks if the function `is_woodall` returns `True` when given the input `383`. If the assertion fails, the script will raise an `AssertionError`.\n\nThe function `is_woodall` can be used to check if a number is a woodall number or not.\n"}

{"task_id": "Mbpp/414", "completion": "\n```python\ndef overlapping(seq1, seq2):\n    for item in seq1:\n        if item in seq2:\n            return True\n    return False\n```\n\n### Test:\n```python\nassert overlapping([1,2,3,4,5],[6,7,8,9]) == False\nassert overlapping([1,2,3,4,5],[1,2,3,4,5]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to check whether any value in a sequence exists in a sequence or not. Your code should satisfy the following assertion:\n```python\nassert overlapping([1,2,3,4,5],[6,7,8,9]) == False\n```\n\n### Response:\n```python\ndef overlapping(seq1, seq2):\n    for item in seq1:\n        if item in seq2:\n            return True\n    return False\n```\n\n### Test:\n```python\nassert overlapping([1,2,3,4,5],[6,7,8,9]) == False\nassert overlapping([1,2,3,4,5],[1,2,3,4,5]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]) == True\nassert overlapping([1,2,3,4,5],[1,2,3,"}

{"task_id": "Mbpp/787", "completion": "\n```python\ndef text_match_three(text):\n    pattern = r'ab{3}'\n    if re.search(pattern, text):\n        return 'Found a match!'\n    else:\n        return 'Not matched!'\n```\n\n### Test:\n```python\nassert text_match_three(\"ab\") == \"Found a match!\"\nassert text_match_three(\"abc\") == \"Found a match!\"\nassert text_match_three(\"abbb\") == \"Found a match!\"\nassert text_match_three(\"ac\") == \"Not matched!\"\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that matches a string that has an a followed by three 'b'. Your code should satisfy the following assertion:\n```python\nassert not text_match_three(\"ac\")\n```\n\n### Response:\n```python\ndef text_match_three(text):\n    pattern = r'ab{3}'\n    if re.search(pattern, text):\n        return 'Found a match!'\n    else:\n        return 'Not matched!'\n```\n\n### Test:\n```python\nassert text_match_three(\"ab\") == \"Found a match!\"\nassert text_match_three(\"abc\") == \"Found a match!\"\nassert text_match_three(\"abbb\") == \"Found a match!\"\nassert text_match_three(\"ac\") == \"Not matched!\"\n```\n"}

{"task_id": "Mbpp/232", "completion": "\n```python\ndef larg_nnum(lst, n):\n    lst.sort(reverse=True)\n    return lst[:n]\n```\n\n### Explanation:\nThe function `larg_nnum` takes in a list `lst` and an integer `n`. The function sorts the list in descending order using the `sort` method and then returns a list containing the first `n` elements of the sorted list.\n\nThe assertion checks that the function returns a list containing the two largest numbers in the list.\n\n### Testing:\nThe assertion can be tested by running the following code:\n```python\nassert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])\n```\n\n### Conclusion:\nThe function `larg_nnum` is a simple solution to the problem of finding the `n` largest numbers in a list. The assertion checks that the function returns the correct list of numbers.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Your code should satisfy the following assertion:\n```python\nassert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])\n```\n\n### Response:\n```python\ndef larg_nnum(lst, n):\n    lst.sort(reverse=True)\n    return lst[:n]\n```\n\n### Explanation:\nThe function `larg_nnum` takes in a list `lst` and an integer `n`. The function sorts the list in descending order using the `sort` method and then returns a list containing the first `n` elements of the sorted list.\n\nThe assertion checks that the function returns a list containing the two largest numbers in the list.\n\n### Testing:\nThe assertion can be tested by running the following code:\n```python\nassert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])\n```\n\n### Conclusion:\nThe function `larg_nnum` is a simple solution to the problem of finding the `n` largest numbers in a list. The assertion checks that the function returns the correct list of numbers.\n"}

{"task_id": "Mbpp/79", "completion": "\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to check whether the length of the word is odd or not. Your code should satisfy the following assertion:\n```python\nassert word_len(\"Hadoop\") == False\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\ndef word_len(word):\n    return len(word) % 2 == 1\n```\n\n### Explanation:\nThe `len()` function returns the length of the word. The `%` operator returns the remainder of the division of the length of the word by 2. If the remainder is 1, the length of the word is odd. If the remainder is 0, the length of the word is even.\n\n### Test:\n```python\nassert word_len(\"Hadoop\") == False\nassert word_len(\"Hadoop\") == True\n```\n\n### Response:\n```python\n"}

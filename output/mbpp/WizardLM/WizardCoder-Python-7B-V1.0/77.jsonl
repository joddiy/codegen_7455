{"task_id": "Mbpp/129", "completion": "Here's a Python function that checks if a given matrix is a magic square:\r\n\r\n```python\r\ndef magic_square_test(matrix):\r\n    n = len(matrix)\r\n    magic_sum = sum(range(1, n*n+1))\r\n    \r\n    # Check if all rows and columns have the same sum\r\n    for i in range(n):\r\n        row_sum = sum(matrix[i])\r\n        col_sum = sum(matrix[j][i] for j in range(n))\r\n        if row_sum != magic_sum or col_sum != magic_sum:\r\n            return False\r\n    \r\n    # Check if the diagonal elements have the same sum\r\n    diag1_sum = sum(matrix[i][i] for i in range(n))\r\n    diag2_sum = sum(matrix[i][n-i-1] for i in range(n))\r\n    if diag1_sum != magic_sum or diag2_sum != magic_sum:\r\n        return False\r\n    \r\n    # Check if the matrix is a square\r\n    if n*n != len(set(matrix[0])):\r\n        return False\r\n    \r\n    return True\r\n```\r\n\r\nThis function takes a matrix as input and returns True if it is a magic square, and False otherwise. It first calculates the sum of all the elements in the matrix, which is the expected sum of a magic square. Then, it checks if each row and column has the same sum, and if the two diagonals also have the same sum. If any of these conditions are not satisfied, it returns False. Finally, it checks if the matrix is a square by checking if the length of each row is equal to the length of the set of all elements in the matrix. If all these conditions are satisfied, it returns True. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n### Response:Here's a Python function that checks if a given matrix is a magic square:\r\n\r\n```python\r\ndef magic_square_test(matrix):\r\n    n = len(matrix)\r\n    magic_sum = sum(range(1, n*n+1))\r\n    \r\n    # Check if all rows and columns have the same sum\r\n    for i in range(n):\r\n        row_sum = sum(matrix[i])\r\n        col_sum = sum(matrix[j][i] for j in range(n))\r\n        if row_sum != magic_sum or col_sum != magic_sum:\r\n            return False\r\n    \r\n    # Check if the diagonal elements have the same sum\r\n    diag1_sum = sum(matrix[i][i] for i in range(n))\r\n    diag2_sum = sum(matrix[i][n-i-1] for i in range(n))\r\n    if diag1_sum != magic_sum or diag2_sum != magic_sum:\r\n        return False\r\n    \r\n    # Check if the matrix is a square\r\n    if n*n != len(set(matrix[0])):\r\n        return False\r\n    \r\n    return True\r\n```\r\n\r\nThis function takes a matrix as input and returns True if it is a magic square, and False otherwise. It first calculates the sum of all the elements in the matrix, which is the expected sum of a magic square. Then, it checks if each row and column has the same sum, and if the two diagonals also have the same sum. If any of these conditions are not satisfied, it returns False. Finally, it checks if the matrix is a square by checking if the length of each row is equal to the length of the set of all elements in the matrix. If all these conditions are satisfied, it returns True. "}

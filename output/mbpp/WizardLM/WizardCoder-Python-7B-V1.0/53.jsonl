{"task_id": "Mbpp/99", "completion": "Here's a Python function that converts a decimal number to its binary equivalent, represented as a string with no leading zeros:\r\n\r\n```python\r\ndef decimal_to_binary(num):\r\n    if num == 0:\r\n        return '0'\r\n    else:\r\n        return bin(num)[2:]\r\n```\r\n\r\nThis function uses the built-in `bin()` function in Python to convert the decimal number to its binary equivalent, which returns a string with a prefix of `'0b'`. We then slice the string from index 2 to get rid of the prefix and return the binary representation as a string. If the input is 0, we simply return `'0'`.\r\n\r\nFor example:\r\n\r\n```python\r\n>>> decimal_to_binary(8)\r\n'1000'\r\n>>> decimal_to_binary(13)\r\n'1101'\r\n>>> decimal_to_binary(0)\r\n'0'\r\n```\r\n\r\nWe can test the function with the given assertion:\r\n\r\n```python\r\nassert decimal_to_binary(8) == '1000'\r\n```\r\n\r\nThis should return `True`. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros. Your code should satisfy the following assertion:\n```python\nassert decimal_to_binary(8) == '1000'\n```\n\n### Response:Here's a Python function that converts a decimal number to its binary equivalent, represented as a string with no leading zeros:\r\n\r\n```python\r\ndef decimal_to_binary(num):\r\n    if num == 0:\r\n        return '0'\r\n    else:\r\n        return bin(num)[2:]\r\n```\r\n\r\nThis function uses the built-in `bin()` function in Python to convert the decimal number to its binary equivalent, which returns a string with a prefix of `'0b'`. We then slice the string from index 2 to get rid of the prefix and return the binary representation as a string. If the input is 0, we simply return `'0'`.\r\n\r\nFor example:\r\n\r\n```python\r\n>>> decimal_to_binary(8)\r\n'1000'\r\n>>> decimal_to_binary(13)\r\n'1101'\r\n>>> decimal_to_binary(0)\r\n'0'\r\n```\r\n\r\nWe can test the function with the given assertion:\r\n\r\n```python\r\nassert decimal_to_binary(8) == '1000'\r\n```\r\n\r\nThis should return `True`. "}

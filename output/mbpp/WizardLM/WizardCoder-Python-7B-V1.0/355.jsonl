{"task_id": "Mbpp/758", "completion": "Here's the Python code to solve the problem:\r\n\r\n```python\r\ndef count_lists(lst):\r\n    \"\"\"\r\n    This function takes a list of lists as input and returns a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurences in the original list.\r\n    \"\"\"\r\n    count_dict = {}\r\n    for sublist in lst:\r\n        tup = tuple(sublist)\r\n        if tup in count_dict:\r\n            count_dict[tup] += 1\r\n        else:\r\n            count_dict[tup] = 1\r\n    return count_dict\r\n```\r\n\r\nWe can test the function using the given assertion:\r\n\r\n```python\r\nassert count_lists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]) == {(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\r\n```\r\n\r\nThis should return `True` since the function returns the expected output. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Your code should satisfy the following assertion:\n```python\nassert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]] )=={(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n```\n\n### Response:Here's the Python code to solve the problem:\r\n\r\n```python\r\ndef count_lists(lst):\r\n    \"\"\"\r\n    This function takes a list of lists as input and returns a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurences in the original list.\r\n    \"\"\"\r\n    count_dict = {}\r\n    for sublist in lst:\r\n        tup = tuple(sublist)\r\n        if tup in count_dict:\r\n            count_dict[tup] += 1\r\n        else:\r\n            count_dict[tup] = 1\r\n    return count_dict\r\n```\r\n\r\nWe can test the function using the given assertion:\r\n\r\n```python\r\nassert count_lists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]) == {(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\r\n```\r\n\r\nThis should return `True` since the function returns the expected output. "}

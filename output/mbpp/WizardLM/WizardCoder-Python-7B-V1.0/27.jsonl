{"task_id": "Mbpp/69", "completion": "Here's a possible solution to the problem:\r\n\r\n```python\r\ndef is_sublist(lst, sublst):\r\n    \"\"\"\r\n    Checks whether a list contains a given sublist or not.\r\n    \r\n    Args:\r\n    lst: the list to check\r\n    sublst: the sublist to look for\r\n    \r\n    Returns:\r\n    True if the sublist is found in the list, False otherwise\r\n    \"\"\"\r\n    if len(sublst) == 0:\r\n        return True\r\n    for i in range(len(lst)):\r\n        if lst[i] == sublst[0]:\r\n            if lst[i:i+len(sublst)] == sublst:\r\n                return True\r\n    return False\r\n```\r\n\r\nThis function iterates through the list `lst` and checks whether each element is equal to the first element of the sublist `sublst`. If it finds a match, it checks whether the sublist is present in the remaining part of the list starting from that index. If it finds a match, it returns True. If it reaches the end of the list without finding a match, it returns False. If the sublist is empty, it returns True, since any list contains an empty sublist. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check whether a list contains the given sublist or not. Your code should satisfy the following assertion:\n```python\nassert is_sublist([2,4,3,5,7],[3,7])==False\n```\n\n### Response:Here's a possible solution to the problem:\r\n\r\n```python\r\ndef is_sublist(lst, sublst):\r\n    \"\"\"\r\n    Checks whether a list contains a given sublist or not.\r\n    \r\n    Args:\r\n    lst: the list to check\r\n    sublst: the sublist to look for\r\n    \r\n    Returns:\r\n    True if the sublist is found in the list, False otherwise\r\n    \"\"\"\r\n    if len(sublst) == 0:\r\n        return True\r\n    for i in range(len(lst)):\r\n        if lst[i] == sublst[0]:\r\n            if lst[i:i+len(sublst)] == sublst:\r\n                return True\r\n    return False\r\n```\r\n\r\nThis function iterates through the list `lst` and checks whether each element is equal to the first element of the sublist `sublst`. If it finds a match, it checks whether the sublist is present in the remaining part of the list starting from that index. If it finds a match, it returns True. If it reaches the end of the list without finding a match, it returns False. If the sublist is empty, it returns True, since any list contains an empty sublist. "}

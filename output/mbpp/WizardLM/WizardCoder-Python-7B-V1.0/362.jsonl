{"task_id": "Mbpp/766", "completion": "Here's one way to solve the problem:\r\n\r\n```python\r\ndef pair_wise(lst):\r\n    pairs = []\r\n    for i in range(len(lst)-1):\r\n        pairs.append((lst[i], lst[i+1]))\r\n    return pairs\r\n```\r\n\r\nThis function takes in a list `lst` and iterates through it using a `for` loop. For each index `i` in the range of `len(lst)-1`, it appends a tuple of `(lst[i], lst[i+1])` to the `pairs` list. This creates a list of all pairs of consecutive items in the list. The resulting list is then returned. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to return a list of all pairs of consecutive items in a given list. Your code should satisfy the following assertion:\n```python\nassert pair_wise([1,1,2,3,3,4,4,5])==[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]\n```\n\n### Response:Here's one way to solve the problem:\r\n\r\n```python\r\ndef pair_wise(lst):\r\n    pairs = []\r\n    for i in range(len(lst)-1):\r\n        pairs.append((lst[i], lst[i+1]))\r\n    return pairs\r\n```\r\n\r\nThis function takes in a list `lst` and iterates through it using a `for` loop. For each index `i` in the range of `len(lst)-1`, it appends a tuple of `(lst[i], lst[i+1])` to the `pairs` list. This creates a list of all pairs of consecutive items in the list. The resulting list is then returned. "}

{"task_id": "Mbpp/765", "completion": "Here's a Python function to find the nth polite number:\r\n\r\n```python\r\ndef is_polite(n):\r\n    \"\"\"\r\n    Returns the nth polite number.\r\n    \"\"\"\r\n    def is_polite(num):\r\n        return sum(1 for i in range(1, num) if num % i == 0)\r\n    \r\n    def polite_numbers():\r\n        count = 0\r\n        num = 1\r\n        while True:\r\n            if is_polite(num) == num:\r\n                count += 1\r\n                if count == n:\r\n                    return num\r\n            num += 1\r\n    \r\n    return polite_numbers()\r\n```\r\n\r\nThe `is_polite` function takes an integer `num` and returns the sum of all positive integers that divide it evenly. The `polite_numbers` function generates polite numbers until it finds the nth one. It uses a `while` loop to keep incrementing `num` until it finds the nth polite number. The `count` variable keeps track of the number of polite numbers found so far. The function returns the nth polite number when `count` reaches `n`.\r\n\r\nWe can test the function with the following assertion:\r\n\r\n```python\r\nassert is_polite(7) == 11\r\n```\r\n\r\nThis should pass, since the 7th polite number is 11. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/. Your code should satisfy the following assertion:\n```python\nassert is_polite(7) == 11\n```\n\n### Response:Here's a Python function to find the nth polite number:\r\n\r\n```python\r\ndef is_polite(n):\r\n    \"\"\"\r\n    Returns the nth polite number.\r\n    \"\"\"\r\n    def is_polite(num):\r\n        return sum(1 for i in range(1, num) if num % i == 0)\r\n    \r\n    def polite_numbers():\r\n        count = 0\r\n        num = 1\r\n        while True:\r\n            if is_polite(num) == num:\r\n                count += 1\r\n                if count == n:\r\n                    return num\r\n            num += 1\r\n    \r\n    return polite_numbers()\r\n```\r\n\r\nThe `is_polite` function takes an integer `num` and returns the sum of all positive integers that divide it evenly. The `polite_numbers` function generates polite numbers until it finds the nth one. It uses a `while` loop to keep incrementing `num` until it finds the nth polite number. The `count` variable keeps track of the number of polite numbers found so far. The function returns the nth polite number when `count` reaches `n`.\r\n\r\nWe can test the function with the following assertion:\r\n\r\n```python\r\nassert is_polite(7) == 11\r\n```\r\n\r\nThis should pass, since the 7th polite number is 11. "}

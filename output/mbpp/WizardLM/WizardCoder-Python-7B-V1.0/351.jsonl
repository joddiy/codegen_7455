{"task_id": "Mbpp/753", "completion": "Here's the Python code to find the minimum k records from a tuple list:\r\n\r\n```python\r\ndef min_k(lst, k):\r\n    return sorted(lst, key=lambda x: x[1])[:k]\r\n```\r\n\r\nThis function takes a list of tuples `lst` and an integer `k` as input and returns the minimum `k` records from the list sorted by the second element of each tuple. The `sorted()` function is used to sort the list based on the second element of each tuple in ascending order. The `key` parameter is used to specify the sorting criteria. The `lambda` function is used to specify the sorting criteria as the second element of each tuple.\r\n\r\nHere's how the function works:\r\n\r\n1. `sorted(lst, key=lambda x: x[1])` sorts the list `lst` based on the second element of each tuple in ascending order.\r\n2. `[:k]` slices the sorted list to return the first `k` elements.\r\n\r\nHere's the test case:\r\n\r\n```python\r\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\r\n```\r\n\r\nThis test case checks if the function returns the minimum 2 records from the given list `[('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)]`. The expected output is `[('Akash', 2), ('Akshat', 4)]`. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Your code should satisfy the following assertion:\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\n### Response:Here's the Python code to find the minimum k records from a tuple list:\r\n\r\n```python\r\ndef min_k(lst, k):\r\n    return sorted(lst, key=lambda x: x[1])[:k]\r\n```\r\n\r\nThis function takes a list of tuples `lst` and an integer `k` as input and returns the minimum `k` records from the list sorted by the second element of each tuple. The `sorted()` function is used to sort the list based on the second element of each tuple in ascending order. The `key` parameter is used to specify the sorting criteria. The `lambda` function is used to specify the sorting criteria as the second element of each tuple.\r\n\r\nHere's how the function works:\r\n\r\n1. `sorted(lst, key=lambda x: x[1])` sorts the list `lst` based on the second element of each tuple in ascending order.\r\n2. `[:k]` slices the sorted list to return the first `k` elements.\r\n\r\nHere's the test case:\r\n\r\n```python\r\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\r\n```\r\n\r\nThis test case checks if the function returns the minimum 2 records from the given list `[('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)]`. The expected output is `[('Akash', 2), ('Akshat', 4)]`. "}

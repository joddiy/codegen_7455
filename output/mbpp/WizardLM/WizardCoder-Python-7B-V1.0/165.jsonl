{"task_id": "Mbpp/301", "completion": "Here's a Python function that finds the depth of a dictionary:\r\n\r\n```python\r\ndef dict_depth(d):\r\n    if isinstance(d, dict):\r\n        return 1 + max(dict_depth(v) for v in d.values()) if d else 0\r\n    else:\r\n        return 0\r\n```\r\n\r\nThis function takes a dictionary `d` as input and recursively checks if it contains any nested dictionaries. If it does, it adds 1 to the maximum depth of the nested dictionaries. If it doesn't, it returns 0. The function returns the maximum depth found. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the depth of a dictionary. Your code should satisfy the following assertion:\n```python\nassert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4\n```\n\n### Response:Here's a Python function that finds the depth of a dictionary:\r\n\r\n```python\r\ndef dict_depth(d):\r\n    if isinstance(d, dict):\r\n        return 1 + max(dict_depth(v) for v in d.values()) if d else 0\r\n    else:\r\n        return 0\r\n```\r\n\r\nThis function takes a dictionary `d` as input and recursively checks if it contains any nested dictionaries. If it does, it adds 1 to the maximum depth of the nested dictionaries. If it doesn't, it returns 0. The function returns the maximum depth found. "}

{"task_id": "Mbpp/605", "completion": "Here's the Python function to check if a given integer is a prime number:\r\n\r\n```python\r\ndef prime_num(n):\r\n    if n < 2:\r\n        return False\r\n    for i in range(2, int(n ** 0.5) + 1):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n```\r\n\r\nThe function first checks if the given integer is less than 2, as 0 and 1 are not prime numbers. Then it iterates through all the numbers from 2 to the square root of the given integer and checks if the integer is divisible by any of them. If it is, it returns False, indicating that the number is not prime. If none of the numbers in the range divide the given integer, it returns True, indicating that the number is prime. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check if the given integer is a prime number. Your code should satisfy the following assertion:\n```python\nassert prime_num(13)==True\n```\n\n### Response:Here's the Python function to check if a given integer is a prime number:\r\n\r\n```python\r\ndef prime_num(n):\r\n    if n < 2:\r\n        return False\r\n    for i in range(2, int(n ** 0.5) + 1):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n```\r\n\r\nThe function first checks if the given integer is less than 2, as 0 and 1 are not prime numbers. Then it iterates through all the numbers from 2 to the square root of the given integer and checks if the integer is divisible by any of them. If it is, it returns False, indicating that the number is not prime. If none of the numbers in the range divide the given integer, it returns True, indicating that the number is prime. "}

{"task_id": "Mbpp/407", "completion": "Here's the Python code to solve the problem:\r\n\r\n```python\r\ndef rearrange_bigger(num):\r\n    num = str(num)\r\n    num_list = list(num)\r\n    num_list.sort(reverse=True)\r\n    num_list = [int(i) for i in num_list]\r\n    result = ''\r\n    for i in num_list:\r\n        result += str(i)\r\n    return int(result)\r\n```\r\n\r\nExplanation:\r\n\r\n1. First, we convert the input number to a string and store it in a list of characters.\r\n2. We sort the list in descending order.\r\n3. We convert the list back to a string.\r\n4. We iterate through the sorted list and concatenate each element to the result string.\r\n5. Finally, we return the result as an integer. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to create the next bigger number by rearranging the digits of a given number. Your code should satisfy the following assertion:\n```python\nassert rearrange_bigger(12)==21\n```\n\n### Response:Here's the Python code to solve the problem:\r\n\r\n```python\r\ndef rearrange_bigger(num):\r\n    num = str(num)\r\n    num_list = list(num)\r\n    num_list.sort(reverse=True)\r\n    num_list = [int(i) for i in num_list]\r\n    result = ''\r\n    for i in num_list:\r\n        result += str(i)\r\n    return int(result)\r\n```\r\n\r\nExplanation:\r\n\r\n1. First, we convert the input number to a string and store it in a list of characters.\r\n2. We sort the list in descending order.\r\n3. We convert the list back to a string.\r\n4. We iterate through the sorted list and concatenate each element to the result string.\r\n5. Finally, we return the result as an integer. "}

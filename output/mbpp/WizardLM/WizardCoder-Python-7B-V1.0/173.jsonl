{"task_id": "Mbpp/388", "completion": "Here's a possible solution:\r\n\r\n```python\r\ndef highest_Power_of_2(n):\r\n    power = 1\r\n    while power * 2 <= n:\r\n        power *= 2\r\n    return power\r\n```\r\n\r\nThis function starts with a power of 1 and multiplies it by 2 until it is greater than n. At that point, it returns the previous value of power, which is the highest power of 2 that is less than or equal to n. For example, if n is 10, the function will iterate through the following values of power: 1, 2, 4, 8, and return 8. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the highest power of 2 that is less than or equal to n. Your code should satisfy the following assertion:\n```python\nassert highest_Power_of_2(10) == 8\n```\n\n### Response:Here's a possible solution:\r\n\r\n```python\r\ndef highest_Power_of_2(n):\r\n    power = 1\r\n    while power * 2 <= n:\r\n        power *= 2\r\n    return power\r\n```\r\n\r\nThis function starts with a power of 1 and multiplies it by 2 until it is greater than n. At that point, it returns the previous value of power, which is the highest power of 2 that is less than or equal to n. For example, if n is 10, the function will iterate through the following values of power: 1, 2, 4, 8, and return 8. "}

{"task_id": "Mbpp/616", "completion": "Here's the Python code for the function that performs element-wise modulo operation on two tuples of the same length:\r\n\r\n```python\r\ndef tuple_modulo(t1, t2):\r\n    assert len(t1) == len(t2), \"Both tuples should have the same length\"\r\n    result = []\r\n    for i in range(len(t1)):\r\n        result.append(t1[i] % t2[i])\r\n    return tuple(result)\r\n```\r\n\r\nThis function takes two tuples as input, `t1` and `t2`, and returns a tuple containing the element-wise modulo of the corresponding elements of the two tuples. The `assert` statement checks if both tuples have the same length, and raises an error if they don't. The `for` loop iterates over the indices of the tuples and appends the modulo of the corresponding elements to the `result` list. Finally, the `tuple` function is used to convert the `result` list to a tuple and return it. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function which takes two tuples of the same length and performs the element wise modulo. Your code should satisfy the following assertion:\n```python\nassert tuple_modulo((10, 4, 5, 6), (5, 6, 7, 5)) == (0, 4, 5, 1)\n```\n\n### Response:Here's the Python code for the function that performs element-wise modulo operation on two tuples of the same length:\r\n\r\n```python\r\ndef tuple_modulo(t1, t2):\r\n    assert len(t1) == len(t2), \"Both tuples should have the same length\"\r\n    result = []\r\n    for i in range(len(t1)):\r\n        result.append(t1[i] % t2[i])\r\n    return tuple(result)\r\n```\r\n\r\nThis function takes two tuples as input, `t1` and `t2`, and returns a tuple containing the element-wise modulo of the corresponding elements of the two tuples. The `assert` statement checks if both tuples have the same length, and raises an error if they don't. The `for` loop iterates over the indices of the tuples and appends the modulo of the corresponding elements to the `result` list. Finally, the `tuple` function is used to convert the `result` list to a tuple and return it. "}

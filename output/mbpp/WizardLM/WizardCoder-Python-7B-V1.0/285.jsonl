{"task_id": "Mbpp/598", "completion": "Here's the Python code for the function that checks whether a given number is an Armstrong number or not:\r\n\r\n```python\r\ndef armstrong_number(num):\r\n    # initialize sum and number of digits\r\n    sum = 0\r\n    n = num\r\n    # find the number of digits in the number\r\n    n_digits = len(str(num))\r\n    # calculate the sum of the cube of each digit\r\n    while n > 0:\r\n        digit = n % 10\r\n        sum += digit ** n_digits\r\n        n //= 10\r\n    # check if the sum is equal to the original number\r\n    if sum == num:\r\n        return True\r\n    else:\r\n        return False\r\n```\r\n\r\nExplanation:\r\n\r\n- We first initialize the sum variable to 0 and the number of digits to the length of the number passed as an argument.\r\n- We then find the number of digits in the number by converting it to a string and getting its length.\r\n- We then loop through each digit of the number by repeatedly dividing it by 10 and taking the remainder until the number becomes 0.\r\n- For each digit, we cube it and add it to the sum.\r\n- Finally, we check if the sum is equal to the original number. If it is, we return True, else we return False.\r\n\r\nExample:\r\n\r\n```python\r\nprint(armstrong_number(153)) # Output: True\r\n```\r\n\r\nThis function will return True since 1^3 + 5^3 + 3^3 = 153. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check whether the given number is armstrong or not. Your code should satisfy the following assertion:\n```python\nassert armstrong_number(153)==True\n```\n\n### Response:Here's the Python code for the function that checks whether a given number is an Armstrong number or not:\r\n\r\n```python\r\ndef armstrong_number(num):\r\n    # initialize sum and number of digits\r\n    sum = 0\r\n    n = num\r\n    # find the number of digits in the number\r\n    n_digits = len(str(num))\r\n    # calculate the sum of the cube of each digit\r\n    while n > 0:\r\n        digit = n % 10\r\n        sum += digit ** n_digits\r\n        n //= 10\r\n    # check if the sum is equal to the original number\r\n    if sum == num:\r\n        return True\r\n    else:\r\n        return False\r\n```\r\n\r\nExplanation:\r\n\r\n- We first initialize the sum variable to 0 and the number of digits to the length of the number passed as an argument.\r\n- We then find the number of digits in the number by converting it to a string and getting its length.\r\n- We then loop through each digit of the number by repeatedly dividing it by 10 and taking the remainder until the number becomes 0.\r\n- For each digit, we cube it and add it to the sum.\r\n- Finally, we check if the sum is equal to the original number. If it is, we return True, else we return False.\r\n\r\nExample:\r\n\r\n```python\r\nprint(armstrong_number(153)) # Output: True\r\n```\r\n\r\nThis function will return True since 1^3 + 5^3 + 3^3 = 153. "}

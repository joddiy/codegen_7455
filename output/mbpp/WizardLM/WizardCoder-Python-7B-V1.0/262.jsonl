{"task_id": "Mbpp/573", "completion": "Here's a possible solution:\r\n\r\n```python\r\ndef unique_product(lst):\r\n    unique_nums = set(lst)\r\n    product = 1\r\n    for num in unique_nums:\r\n        product *= num\r\n    return product\r\n```\r\n\r\nExplanation:\r\n\r\nWe first convert the list to a set to remove duplicates, then we iterate over the unique numbers and multiply them together to get the product. The set() function removes duplicates by default, so we don't need to worry about that. We initialize the product to 1 and then multiply each number together. Finally, we return the product. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to calculate the product of the unique numbers in a given list. Your code should satisfy the following assertion:\n```python\nassert unique_product([10, 20, 30, 40, 20, 50, 60, 40]) ==  720000000\n```\n\n### Response:Here's a possible solution:\r\n\r\n```python\r\ndef unique_product(lst):\r\n    unique_nums = set(lst)\r\n    product = 1\r\n    for num in unique_nums:\r\n        product *= num\r\n    return product\r\n```\r\n\r\nExplanation:\r\n\r\nWe first convert the list to a set to remove duplicates, then we iterate over the unique numbers and multiply them together to get the product. The set() function removes duplicates by default, so we don't need to worry about that. We initialize the product to 1 and then multiply each number together. Finally, we return the product. "}

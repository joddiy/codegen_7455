{"task_id": "Mbpp/639", "completion": "Here's a possible solution:\r\n\r\n```python\r\ndef sum_names(names):\r\n    total_length = 0\r\n    for name in names:\r\n        if name[0].isupper():\r\n            total_length += len(name)\r\n    return total_length\r\n```\r\n\r\nThis function takes a list of names as input and iterates over each name in the list. If the first letter of the name is uppercase (i.e. not a lowercase letter), it adds the length of the name to a running total. Finally, it returns the total length of all the uppercase names. The `isupper()` method checks if the first character of a string is uppercase. If it is, it returns `True`, otherwise it returns `False`. We can use this to filter out the names that start with a lowercase letter. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter. Your code should satisfy the following assertion:\n```python\nassert sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```\n\n### Response:Here's a possible solution:\r\n\r\n```python\r\ndef sum_names(names):\r\n    total_length = 0\r\n    for name in names:\r\n        if name[0].isupper():\r\n            total_length += len(name)\r\n    return total_length\r\n```\r\n\r\nThis function takes a list of names as input and iterates over each name in the list. If the first letter of the name is uppercase (i.e. not a lowercase letter), it adds the length of the name to a running total. Finally, it returns the total length of all the uppercase names. The `isupper()` method checks if the first character of a string is uppercase. If it is, it returns `True`, otherwise it returns `False`. We can use this to filter out the names that start with a lowercase letter. "}

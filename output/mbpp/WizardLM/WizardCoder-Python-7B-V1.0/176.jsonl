{"task_id": "Mbpp/391", "completion": "Here's the Python code for the function:\r\n\r\n```python\r\ndef convert_list_dictionary(students, subjects, grades):\r\n    result = []\r\n    for i in range(len(students)):\r\n        result.append({students[i]: {subjects[i]: grades[i]}})\r\n    return result\r\n```\r\n\r\nThis function takes in three lists as input: `students`, `subjects`, and `grades`. It initializes an empty list `result` and then iterates over the length of the `students` list using a `for` loop. For each index `i`, it creates a dictionary with the `students[i]` as the key and the `subjects[i]` as the value, and assigns it to a new dictionary. It then adds this dictionary to the `result` list. Finally, it returns the `result` list. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to convert more than one list to nested dictionary. Your code should satisfy the following assertion:\n```python\nassert convert_list_dictionary([\"S001\", \"S002\", \"S003\", \"S004\"],[\"Adina Park\", \"Leyton Marsh\", \"Duncan Boyle\", \"Saim Richards\"] ,[85, 98, 89, 92])==[{'S001': {'Adina Park': 85}}, {'S002': {'Leyton Marsh': 98}}, {'S003': {'Duncan Boyle': 89}}, {'S004': {'Saim Richards': 92}}]\n```\n\n### Response:Here's the Python code for the function:\r\n\r\n```python\r\ndef convert_list_dictionary(students, subjects, grades):\r\n    result = []\r\n    for i in range(len(students)):\r\n        result.append({students[i]: {subjects[i]: grades[i]}})\r\n    return result\r\n```\r\n\r\nThis function takes in three lists as input: `students`, `subjects`, and `grades`. It initializes an empty list `result` and then iterates over the length of the `students` list using a `for` loop. For each index `i`, it creates a dictionary with the `students[i]` as the key and the `subjects[i]` as the value, and assigns it to a new dictionary. It then adds this dictionary to the `result` list. Finally, it returns the `result` list. "}

{"task_id": "Mbpp/419", "completion": "Here's the Python code to solve the problem:\r\n\r\n```python\r\ndef round_and_sum(numbers):\r\n    total = 0\r\n    for num in numbers:\r\n        total += round(num)\r\n    return total * len(numbers)\r\n\r\nassert round_and_sum([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50]) == 243\r\n```\r\n\r\nThe function `round_and_sum` takes a list of numbers as input and iterates through each number in the list. For each number, it rounds it to the nearest integer using the `round()` function. The rounded numbers are then added to a variable `total`. Finally, the function returns the total multiplied by the length of the list. The `assert` statement checks if the function returns the expected output for the given input. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. Your code should satisfy the following assertion:\n```python\nassert round_and_sum([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50])==243\n```\n\n### Response:Here's the Python code to solve the problem:\r\n\r\n```python\r\ndef round_and_sum(numbers):\r\n    total = 0\r\n    for num in numbers:\r\n        total += round(num)\r\n    return total * len(numbers)\r\n\r\nassert round_and_sum([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50]) == 243\r\n```\r\n\r\nThe function `round_and_sum` takes a list of numbers as input and iterates through each number in the list. For each number, it rounds it to the nearest integer using the `round()` function. The rounded numbers are then added to a variable `total`. Finally, the function returns the total multiplied by the length of the list. The `assert` statement checks if the function returns the expected output for the given input. "}

{"task_id": "Mbpp/619", "completion": "Here's the Python function to move all the numbers to the end of the given string:\r\n\r\n```python\r\ndef move_num(string):\r\n    nums = []\r\n    non_nums = []\r\n    for char in string:\r\n        if char.isdigit():\r\n            nums.append(char)\r\n        else:\r\n            non_nums.append(char)\r\n    return ''.join(non_nums) + ''.join(nums)\r\n```\r\n\r\nExplanation:\r\n\r\n- We first initialize two empty lists, `nums` and `non_nums`, to store the numbers and non-numbers respectively.\r\n- We loop through each character in the input string using a `for` loop.\r\n- If the character is a digit, we append it to the `nums` list, else we append it to the `non_nums` list.\r\n- Finally, we join the `non_nums` list and the `nums` list using the `join()` method and return the result.\r\n\r\nThis function will return the expected output for the given assertion. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to move all the numbers to the end of the given string. Your code should satisfy the following assertion:\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\n### Response:Here's the Python function to move all the numbers to the end of the given string:\r\n\r\n```python\r\ndef move_num(string):\r\n    nums = []\r\n    non_nums = []\r\n    for char in string:\r\n        if char.isdigit():\r\n            nums.append(char)\r\n        else:\r\n            non_nums.append(char)\r\n    return ''.join(non_nums) + ''.join(nums)\r\n```\r\n\r\nExplanation:\r\n\r\n- We first initialize two empty lists, `nums` and `non_nums`, to store the numbers and non-numbers respectively.\r\n- We loop through each character in the input string using a `for` loop.\r\n- If the character is a digit, we append it to the `nums` list, else we append it to the `non_nums` list.\r\n- Finally, we join the `non_nums` list and the `nums` list using the `join()` method and return the result.\r\n\r\nThis function will return the expected output for the given assertion. "}

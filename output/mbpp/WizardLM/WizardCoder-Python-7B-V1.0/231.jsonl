{"task_id": "Mbpp/461", "completion": "Here's the Python function to count the upper case characters in a given string:\r\n\r\n```python\r\ndef upper_ctr(string):\r\n    count = 0\r\n    for char in string:\r\n        if char.isupper():\r\n            count += 1\r\n    return count\r\n```\r\n\r\nThis function takes a string as input and iterates through each character in the string. If the character is upper case, it increments the count variable. Finally, it returns the count of upper case characters in the string. \r\n\r\nWe can test this function with the following assertion:\r\n\r\n```python\r\nassert upper_ctr('PYthon') == 1\r\n```\r\n\r\nThis assertion checks if the function returns the correct count of upper case characters in the string 'PYthon'. If the function returns 1, the assertion will pass. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to count the upper case characters in a given string. Your code should satisfy the following assertion:\n```python\nassert upper_ctr('PYthon') == 1\n```\n\n### Response:Here's the Python function to count the upper case characters in a given string:\r\n\r\n```python\r\ndef upper_ctr(string):\r\n    count = 0\r\n    for char in string:\r\n        if char.isupper():\r\n            count += 1\r\n    return count\r\n```\r\n\r\nThis function takes a string as input and iterates through each character in the string. If the character is upper case, it increments the count variable. Finally, it returns the count of upper case characters in the string. \r\n\r\nWe can test this function with the following assertion:\r\n\r\n```python\r\nassert upper_ctr('PYthon') == 1\r\n```\r\n\r\nThis assertion checks if the function returns the correct count of upper case characters in the string 'PYthon'. If the function returns 1, the assertion will pass. "}

{"task_id": "Mbpp/294", "completion": "Here's a possible solution to the problem:\r\n\r\n```python\r\ndef max_val(lst):\r\n    max_val = lst[0]\r\n    for i in lst:\r\n        if type(i) == int and i > max_val:\r\n            max_val = i\r\n    return max_val\r\n```\r\n\r\nThis function takes a list as input and initializes `max_val` to the first element of the list. It then iterates over the list and checks if each element is an integer. If it is, and if it is greater than the current `max_val`, it updates `max_val` to that element. Finally, it returns `max_val`. This function assumes that the list contains at least one integer, and that all other elements are comparable to integers. If this is not the case, it may not work as expected. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the maximum value in a given heterogeneous list. Your code should satisfy the following assertion:\n```python\nassert max_val(['Python', 3, 2, 4, 5, 'version'])==5\n```\n\n### Response:Here's a possible solution to the problem:\r\n\r\n```python\r\ndef max_val(lst):\r\n    max_val = lst[0]\r\n    for i in lst:\r\n        if type(i) == int and i > max_val:\r\n            max_val = i\r\n    return max_val\r\n```\r\n\r\nThis function takes a list as input and initializes `max_val` to the first element of the list. It then iterates over the list and checks if each element is an integer. If it is, and if it is greater than the current `max_val`, it updates `max_val` to that element. Finally, it returns `max_val`. This function assumes that the list contains at least one integer, and that all other elements are comparable to integers. If this is not the case, it may not work as expected. "}

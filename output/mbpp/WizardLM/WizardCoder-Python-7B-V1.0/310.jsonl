{"task_id": "Mbpp/630", "completion": "Here's the Python code to extract all the adjacent coordinates of a given coordinate tuple:\r\n\r\n```python\r\ndef get_coordinates(coord):\r\n    x, y = coord\r\n    coordinates = []\r\n    for i in range(x-1, x+2):\r\n        for j in range(y-1, y+2):\r\n            if i != x or j != y:\r\n                coordinates.append((i, j))\r\n    return coordinates\r\n```\r\n\r\nExplanation:\r\n- We define a function `get_coordinates` that takes a coordinate tuple `(x, y)` as input.\r\n- We initialize an empty list `coordinates` to store the adjacent coordinates.\r\n- We loop through all the possible values of `i` and `j` that are within the range of the input coordinate tuple `(x-1, x+2)` and `(y-1, y+2)` respectively.\r\n- We check if `i` and `j` are not equal to `x` and `y` respectively, to exclude the original coordinate from the list of adjacent coordinates.\r\n- If `i` and `j` are not equal to `x` and `y`, we append the tuple `(i, j)` to the `coordinates` list.\r\n- Finally, we return the `coordinates` list containing all the adjacent coordinates. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to extract all the adjacent coordinates of the given coordinate tuple. Your code should satisfy the following assertion:\n```python\nassert get_coordinates((3, 4)) == [[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]\n```\n\n### Response:Here's the Python code to extract all the adjacent coordinates of a given coordinate tuple:\r\n\r\n```python\r\ndef get_coordinates(coord):\r\n    x, y = coord\r\n    coordinates = []\r\n    for i in range(x-1, x+2):\r\n        for j in range(y-1, y+2):\r\n            if i != x or j != y:\r\n                coordinates.append((i, j))\r\n    return coordinates\r\n```\r\n\r\nExplanation:\r\n- We define a function `get_coordinates` that takes a coordinate tuple `(x, y)` as input.\r\n- We initialize an empty list `coordinates` to store the adjacent coordinates.\r\n- We loop through all the possible values of `i` and `j` that are within the range of the input coordinate tuple `(x-1, x+2)` and `(y-1, y+2)` respectively.\r\n- We check if `i` and `j` are not equal to `x` and `y` respectively, to exclude the original coordinate from the list of adjacent coordinates.\r\n- If `i` and `j` are not equal to `x` and `y`, we append the tuple `(i, j)` to the `coordinates` list.\r\n- Finally, we return the `coordinates` list containing all the adjacent coordinates. "}

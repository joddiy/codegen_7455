{"task_id": "Mbpp/630", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef get_coordinates(coordinate):\n    x, y = coordinate\n    adjacent_coordinates = [[x-1, y-1], [x-1, y], [x-1, y+1], [x, y-1], [x, y+1], [x+1, y-1], [x+1, y], [x+1, y+1]]\n    return adjacent_coordinates\n\nassert get_coordinates((3, 4)) == [[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]\n```\n\nThis script defines a function `get_coordinates` that takes a coordinate tuple as input and returns a list of all adjacent coordinates. The adjacent coordinates are calculated by subtracting 1 from the x-coordinate and y-coordinate, and adding 1 to the x-coordinate and y-coordinate. The function then checks if the returned list of coordinates matches the expected output.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to extract all the adjacent coordinates of the given coordinate tuple. Your code should satisfy the following assertion:\n```python\nassert get_coordinates((3, 4)) == [[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef get_coordinates(coordinate):\n    x, y = coordinate\n    adjacent_coordinates = [[x-1, y-1], [x-1, y], [x-1, y+1], [x, y-1], [x, y+1], [x+1, y-1], [x+1, y], [x+1, y+1]]\n    return adjacent_coordinates\n\nassert get_coordinates((3, 4)) == [[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]\n```\n\nThis script defines a function `get_coordinates` that takes a coordinate tuple as input and returns a list of all adjacent coordinates. The adjacent coordinates are calculated by subtracting 1 from the x-coordinate and y-coordinate, and adding 1 to the x-coordinate and y-coordinate. The function then checks if the returned list of coordinates matches the expected output."}

{"task_id": "Mbpp/805", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef max_sum_list(lst):\n    return max(lst, key=sum)\n\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\nThis script defines a function `max_sum_list` that takes a list of lists as an argument. It uses the built-in `max` function with the `key` parameter set to `sum` to find the list with the highest sum of elements. The `max` function returns the first item from the list that maximizes the function provided as the key. In this case, it returns the list with the highest sum of elements.\n\nThe assertion at the end checks if the function works correctly. If the function returns the correct list, the assertion will pass, otherwise it will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that returns the list in a list of lists whose sum of elements is the highest. Your code should satisfy the following assertion:\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef max_sum_list(lst):\n    return max(lst, key=sum)\n\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\nThis script defines a function `max_sum_list` that takes a list of lists as an argument. It uses the built-in `max` function with the `key` parameter set to `sum` to find the list with the highest sum of elements. The `max` function returns the first item from the list that maximizes the function provided as the key. In this case, it returns the list with the highest sum of elements.\n\nThe assertion at the end checks if the function works correctly. If the function returns the correct list, the assertion will pass, otherwise it will raise an `AssertionError`."}

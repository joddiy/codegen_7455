{"task_id": "Mbpp/442", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef positive_count(arr):\n    count = 0\n    total = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n        total += 1\n    return count / total\n\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]) == 0.54\n```\n\nThis script defines a function `positive_count` that takes an array of integers as input. It initializes two variables, `count` and `total`, to 0. It then iterates over each number in the array. If the number is positive, it increments `count`. It always increments `total`. After the loop, it returns the ratio of `count` to `total`.\n\nThe assertion at the end checks if the function returns the correct result for the given input. If the function is correct, this assertion will pass without any output. If the function is incorrect, this assertion will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the ration of positive numbers in an array of integers. Your code should satisfy the following assertion:\n```python\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.54\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef positive_count(arr):\n    count = 0\n    total = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n        total += 1\n    return count / total\n\nassert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]) == 0.54\n```\n\nThis script defines a function `positive_count` that takes an array of integers as input. It initializes two variables, `count` and `total`, to 0. It then iterates over each number in the array. If the number is positive, it increments `count`. It always increments `total`. After the loop, it returns the ratio of `count` to `total`.\n\nThe assertion at the end checks if the function returns the correct result for the given input. If the function is correct, this assertion will pass without any output. If the function is incorrect, this assertion will raise an `AssertionError`."}

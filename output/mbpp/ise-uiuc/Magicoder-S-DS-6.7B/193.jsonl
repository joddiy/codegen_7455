{"task_id": "Mbpp/415", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef max_Product(arr):\n    arr.sort()\n    return (arr[-1], arr[-2]) if arr[-1]*arr[-2] > arr[0]*arr[1] else (arr[0], arr[1])\n\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```\n\nThis function first sorts the array in ascending order. Then, it checks if the product of the last two elements is greater than the product of the first two elements. If it is, it returns the last two elements. Otherwise, it returns the first two elements.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, it will not raise any assertion error.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find a pair with highest product from a given array of integers. Your code should satisfy the following assertion:\n```python\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef max_Product(arr):\n    arr.sort()\n    return (arr[-1], arr[-2]) if arr[-1]*arr[-2] > arr[0]*arr[1] else (arr[0], arr[1])\n\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```\n\nThis function first sorts the array in ascending order. Then, it checks if the product of the last two elements is greater than the product of the first two elements. If it is, it returns the last two elements. Otherwise, it returns the first two elements.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, it will not raise any assertion error."}

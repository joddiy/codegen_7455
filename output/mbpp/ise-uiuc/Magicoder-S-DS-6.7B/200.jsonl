{"task_id": "Mbpp/425", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef count_element_in_list(lst, element):\n    count = 0\n    for sublist in lst:\n        if element in sublist:\n            count += 1\n    return count\n\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```\n\nThis script defines a function `count_element_in_list` that takes a list of lists and an element as arguments. It then iterates over each sublist in the list, and if the element is found in the sublist, it increments the count. Finally, it returns the count. The assert statement checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to count the number of sublists containing a particular element. Your code should satisfy the following assertion:\n```python\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef count_element_in_list(lst, element):\n    count = 0\n    for sublist in lst:\n        if element in sublist:\n            count += 1\n    return count\n\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```\n\nThis script defines a function `count_element_in_list` that takes a list of lists and an element as arguments. It then iterates over each sublist in the list, and if the element is found in the sublist, it increments the count. Finally, it returns the count. The assert statement checks if the function works as expected."}

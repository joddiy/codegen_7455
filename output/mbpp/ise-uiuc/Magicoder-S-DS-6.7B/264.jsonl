{"task_id": "Mbpp/576", "completion": "\nHere is a Python function that checks if a list is a sublist of another:\n\n```python\ndef is_Sub_Array(sub, main):\n    return sub in main\n```\n\nThis function uses the `in` operator to check if the `sub` list is found within the `main` list. If it is, the function returns `True`, otherwise it returns `False`.\n\nLet's test this function with the provided assertion:\n\n```python\nassert is_Sub_Array([1,4,3,5],[1,2]) == False\n```\n\nThis assertion should pass without any errors, as the list [1,4,3,5] is not a sublist of [1,2].", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to check whether a list is sublist of another or not. Your code should satisfy the following assertion:\n```python\nassert is_Sub_Array([1,4,3,5],[1,2]) == False\n```\n\n### Response:\nHere is a Python function that checks if a list is a sublist of another:\n\n```python\ndef is_Sub_Array(sub, main):\n    return sub in main\n```\n\nThis function uses the `in` operator to check if the `sub` list is found within the `main` list. If it is, the function returns `True`, otherwise it returns `False`.\n\nLet's test this function with the provided assertion:\n\n```python\nassert is_Sub_Array([1,4,3,5],[1,2]) == False\n```\n\nThis assertion should pass without any errors, as the list [1,4,3,5] is not a sublist of [1,2]."}

{"task_id": "Mbpp/447", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef cube_nums(lst):\n    return [i ** 3 for i in lst]\n\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```\n\nThis function uses a list comprehension to create a new list where each element is the cube of the corresponding element in the input list. The `assert` statement checks if the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find cubes of individual elements in a list. Your code should satisfy the following assertion:\n```python\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef cube_nums(lst):\n    return [i ** 3 for i in lst]\n\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```\n\nThis function uses a list comprehension to create a new list where each element is the cube of the corresponding element in the input list. The `assert` statement checks if the function is working correctly."}

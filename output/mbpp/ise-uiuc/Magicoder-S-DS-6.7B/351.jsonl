{"task_id": "Mbpp/753", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef min_k(tuples, k):\n    # Sort the tuples based on the second element of each tuple\n    sorted_tuples = sorted(tuples, key=lambda x: x[1])\n    # Return the first k elements\n    return sorted_tuples[:k]\n\n# Test the function\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\nIn this script, the function `min_k` takes a list of tuples and an integer `k` as input. It sorts the list of tuples based on the second element of each tuple (which is what the `key=lambda x: x[1]` part does). Then it returns the first `k` elements of the sorted list.\n\nThe assertion at the end tests the function with the given test case. If the function is implemented correctly, this assertion should pass without any error.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Your code should satisfy the following assertion:\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef min_k(tuples, k):\n    # Sort the tuples based on the second element of each tuple\n    sorted_tuples = sorted(tuples, key=lambda x: x[1])\n    # Return the first k elements\n    return sorted_tuples[:k]\n\n# Test the function\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\nIn this script, the function `min_k` takes a list of tuples and an integer `k` as input. It sorts the list of tuples based on the second element of each tuple (which is what the `key=lambda x: x[1]` part does). Then it returns the first `k` elements of the sorted list.\n\nThe assertion at the end tests the function with the given test case. If the function is implemented correctly, this assertion should pass without any error."}

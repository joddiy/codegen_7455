{"task_id": "Mbpp/58", "completion": "\nHere is a Python function that checks whether the given two integers have opposite sign or not:\n\n```python\ndef opposite_Signs(num1, num2):\n    return (num1 ^ num2) < 0\n```\n\nThis function works by using the XOR operator (^) to check if the two numbers have different signs. If they do, the XOR operation will result in a negative number, which is less than 0. If they have the same sign, the XOR operation will result in a positive number, which is greater than or equal to 0.\n\nYou can test the function with the provided assertion:\n\n```python\nassert opposite_Signs(1,-2) == True\n```\n\nThis assertion will pass if the function is implemented correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to check whether the given two integers have opposite sign or not. Your code should satisfy the following assertion:\n```python\nassert opposite_Signs(1,-2) == True\n```\n\n### Response:\nHere is a Python function that checks whether the given two integers have opposite sign or not:\n\n```python\ndef opposite_Signs(num1, num2):\n    return (num1 ^ num2) < 0\n```\n\nThis function works by using the XOR operator (^) to check if the two numbers have different signs. If they do, the XOR operation will result in a negative number, which is less than 0. If they have the same sign, the XOR operation will result in a positive number, which is greater than or equal to 0.\n\nYou can test the function with the provided assertion:\n\n```python\nassert opposite_Signs(1,-2) == True\n```\n\nThis assertion will pass if the function is implemented correctly."}

{"task_id": "Mbpp/294", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef max_val(lst):\n    max_val = None\n    for i in lst:\n        if isinstance(i, (int, float)):\n            if max_val is None or i > max_val:\n                max_val = i\n    return max_val\n\nassert max_val(['Python', 3, 2, 4, 5, 'version'])==5\n```\n\nThis script defines a function `max_val` that takes a list as an argument. It then iterates over each item in the list. If the item is an integer or a float, it checks if it is greater than the current maximum value. If it is, it updates the maximum value. Finally, it returns the maximum value.\n\nThe assertion at the end checks if the function works correctly. If the function returns 5 as expected, the assertion will pass. If not, it will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the maximum value in a given heterogeneous list. Your code should satisfy the following assertion:\n```python\nassert max_val(['Python', 3, 2, 4, 5, 'version'])==5\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef max_val(lst):\n    max_val = None\n    for i in lst:\n        if isinstance(i, (int, float)):\n            if max_val is None or i > max_val:\n                max_val = i\n    return max_val\n\nassert max_val(['Python', 3, 2, 4, 5, 'version'])==5\n```\n\nThis script defines a function `max_val` that takes a list as an argument. It then iterates over each item in the list. If the item is an integer or a float, it checks if it is greater than the current maximum value. If it is, it updates the maximum value. Finally, it returns the maximum value.\n\nThe assertion at the end checks if the function works correctly. If the function returns 5 as expected, the assertion will pass. If not, it will raise an AssertionError."}

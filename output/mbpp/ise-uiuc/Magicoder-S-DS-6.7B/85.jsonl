{"task_id": "Mbpp/139", "completion": "\nHere is a Python script that solves the problem:\n\n```python\nimport math\n\ndef circle_circumference(radius):\n    return 2 * math.pi * radius\n\n# Test the function\nassert math.isclose(circle_circumference(10), 62.830000000000005, rel_tol=0.001)\n```\n\nThis script defines a function `circle_circumference` that takes the radius of a circle as input and returns its circumference. The circumference of a circle is calculated as `2 * pi * radius`, where `pi` is a constant in the `math` module in Python.\n\nThe `assert` statement checks if the result of the function `circle_circumference` with the input `10` is approximately equal to `62.830000000000005` within a relative tolerance of `0.001`. If the result is not approximately equal, the `assert` statement will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the circumference of a circle. Your code should satisfy the following assertion:\n```python\nassert math.isclose(circle_circumference(10), 62.830000000000005, rel_tol=0.001)\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\nimport math\n\ndef circle_circumference(radius):\n    return 2 * math.pi * radius\n\n# Test the function\nassert math.isclose(circle_circumference(10), 62.830000000000005, rel_tol=0.001)\n```\n\nThis script defines a function `circle_circumference` that takes the radius of a circle as input and returns its circumference. The circumference of a circle is calculated as `2 * pi * radius`, where `pi` is a constant in the `math` module in Python.\n\nThe `assert` statement checks if the result of the function `circle_circumference` with the input `10` is approximately equal to `62.830000000000005` within a relative tolerance of `0.001`. If the result is not approximately equal, the `assert` statement will raise an `AssertionError`."}

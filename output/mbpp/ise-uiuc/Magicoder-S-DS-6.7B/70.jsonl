{"task_id": "Mbpp/120", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef max_product_tuple(lst):\n    max_product = float('-inf')\n    for tup in lst:\n        product = abs(tup[0] * tup[1])\n        if product > max_product:\n            max_product = product\n    return max_product\n\nassert max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)]) == 36\n```\n\nThis script defines a function `max_product_tuple` that iterates over each tuple in the input list. For each tuple, it calculates the absolute product of its elements and updates `max_product` if the calculated product is larger. Finally, it returns `max_product`. The assertion at the end verifies that the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Your code should satisfy the following assertion:\n```python\nassert max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef max_product_tuple(lst):\n    max_product = float('-inf')\n    for tup in lst:\n        product = abs(tup[0] * tup[1])\n        if product > max_product:\n            max_product = product\n    return max_product\n\nassert max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)]) == 36\n```\n\nThis script defines a function `max_product_tuple` that iterates over each tuple in the input list. For each tuple, it calculates the absolute product of its elements and updates `max_product` if the calculated product is larger. Finally, it returns `max_product`. The assertion at the end verifies that the function works correctly."}

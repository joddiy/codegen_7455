{"task_id": "Mbpp/270", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef sum_even_and_even_index(lst):\n    return sum(num for index, num in enumerate(lst) if index % 2 == 0 and num % 2 == 0)\n\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```\n\nThis function uses a generator expression to iterate over the list and its indices. It checks if the index is even and the number is even, and if both conditions are met, it adds the number to the sum. The `sum` function then adds up all the numbers in the generator expression.\n\nThe assertion at the end checks if the function works correctly. If the function returns 30, the assertion passes, otherwise it raises an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to find the sum of even numbers at even positions of a list. Your code should satisfy the following assertion:\n```python\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef sum_even_and_even_index(lst):\n    return sum(num for index, num in enumerate(lst) if index % 2 == 0 and num % 2 == 0)\n\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```\n\nThis function uses a generator expression to iterate over the list and its indices. It checks if the index is even and the number is even, and if both conditions are met, it adds the number to the sum. The `sum` function then adds up all the numbers in the generator expression.\n\nThe assertion at the end checks if the function works correctly. If the function returns 30, the assertion passes, otherwise it raises an AssertionError."}

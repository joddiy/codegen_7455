{"task_id": "Mbpp/102", "completion": "\nHere is a Python function that converts a snake case string to camel case string:\n\n```python\ndef snake_to_camel(snake_str):\n    components = snake_str.split('_')\n    return ''.join(x.title() for x in components)\n\nassert snake_to_camel('python_program')=='PythonProgram'\n```\n\nThis function works by splitting the input string into a list of words (components) using the underscore as a delimiter. Then it uses the `title()` method to capitalize the first letter of each word and join them together without any delimiter.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, it will not raise any error. If not, it will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to convert a snake case string to camel case string. Your code should satisfy the following assertion:\n```python\nassert snake_to_camel('python_program')=='PythonProgram'\n```\n\n### Response:\nHere is a Python function that converts a snake case string to camel case string:\n\n```python\ndef snake_to_camel(snake_str):\n    components = snake_str.split('_')\n    return ''.join(x.title() for x in components)\n\nassert snake_to_camel('python_program')=='PythonProgram'\n```\n\nThis function works by splitting the input string into a list of words (components) using the underscore as a delimiter. Then it uses the `title()` method to capitalize the first letter of each word and join them together without any delimiter.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, it will not raise any error. If not, it will raise an AssertionError."}

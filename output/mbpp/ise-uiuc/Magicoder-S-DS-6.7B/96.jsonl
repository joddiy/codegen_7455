{"task_id": "Mbpp/166", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef find_even_pair(lst):\n    count = 0\n    for i in range(len(lst)):\n        for j in range(i+1, len(lst)):\n            if (lst[i] ^ lst[j]) % 2 == 0:\n                count += 1\n    return count\n\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\nIn this script, we use a double loop to iterate over all pairs of integers in the list. For each pair, we calculate the xor of the two numbers and check if the result is even. If it is, we increment the count. Finally, we return the count.\n\nThe assertion at the end checks if the function works correctly for the given example.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that counts the number of pairs of integers in a list that xor to an even number. Your code should satisfy the following assertion:\n```python\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef find_even_pair(lst):\n    count = 0\n    for i in range(len(lst)):\n        for j in range(i+1, len(lst)):\n            if (lst[i] ^ lst[j]) % 2 == 0:\n                count += 1\n    return count\n\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\nIn this script, we use a double loop to iterate over all pairs of integers in the list. For each pair, we calculate the xor of the two numbers and check if the result is even. If it is, we increment the count. Finally, we return the count.\n\nThe assertion at the end checks if the function works correctly for the given example."}

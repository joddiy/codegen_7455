{"task_id": "Mbpp/222", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef check_type(tup):\n    return all(isinstance(item, type(tup[0])) for item in tup)\n\nassert check_type((5, 6, 7, 3, 5, 6)) == True\n```\n\nIn this script, the function `check_type` takes a tuple as an argument. It uses a generator expression to check if all items in the tuple are of the same type as the first item in the tuple. The `all` function returns `True` if all elements in the generator expression are `True`. If all elements are of the same type, the `isinstance` function will return `True` for all items. If not, it will return `False` for at least one item.\n\nThe assertion at the end checks if the function works correctly. If the function returns `True` for the given tuple, the assertion will pass. If the function returns `False` or raises an error, the assertion will fail.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check if all the elements in tuple have same data type or not. Your code should satisfy the following assertion:\n```python\nassert check_type((5, 6, 7, 3, 5, 6) ) == True\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef check_type(tup):\n    return all(isinstance(item, type(tup[0])) for item in tup)\n\nassert check_type((5, 6, 7, 3, 5, 6)) == True\n```\n\nIn this script, the function `check_type` takes a tuple as an argument. It uses a generator expression to check if all items in the tuple are of the same type as the first item in the tuple. The `all` function returns `True` if all elements in the generator expression are `True`. If all elements are of the same type, the `isinstance` function will return `True` for all items. If not, it will return `False` for at least one item.\n\nThe assertion at the end checks if the function works correctly. If the function returns `True` for the given tuple, the assertion will pass. If the function returns `False` or raises an error, the assertion will fail."}

{"task_id": "Mbpp/475", "completion": "\nHere is a Python script that sorts a dictionary by value:\n\n```python\ndef sort_counter(d):\n    return sorted(d.items(), key=lambda x: x[1])\n\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```\n\nThe `sort_counter` function takes a dictionary `d` as input and returns a list of tuples, where each tuple is a key-value pair from the dictionary. The list is sorted in ascending order by value. The `lambda` function is used as the key for sorting, which specifies that the sorting should be based on the second element of each tuple (i.e., the values in the dictionary).\n\nThe assertion checks if the function is working as expected. If the function is correct, it will not raise any error. If not, it will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to sort a dictionary by value. Your code should satisfy the following assertion:\n```python\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```\n\n### Response:\nHere is a Python script that sorts a dictionary by value:\n\n```python\ndef sort_counter(d):\n    return sorted(d.items(), key=lambda x: x[1])\n\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```\n\nThe `sort_counter` function takes a dictionary `d` as input and returns a list of tuples, where each tuple is a key-value pair from the dictionary. The list is sorted in ascending order by value. The `lambda` function is used as the key for sorting, which specifies that the sorting should be based on the second element of each tuple (i.e., the values in the dictionary).\n\nThe assertion checks if the function is working as expected. If the function is correct, it will not raise any error. If not, it will raise an AssertionError."}

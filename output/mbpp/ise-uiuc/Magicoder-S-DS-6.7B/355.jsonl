{"task_id": "Mbpp/758", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef unique_sublists(lst):\n    count_dict = {}\n    for sublist in lst:\n        tuple_sublist = tuple(sublist)\n        if tuple_sublist in count_dict:\n            count_dict[tuple_sublist] += 1\n        else:\n            count_dict[tuple_sublist] = 1\n    return count_dict\n\nassert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]) == {(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n```\n\nThis script defines a function `unique_sublists` that takes a list of lists as input. It initializes an empty dictionary `count_dict`. It then iterates over each sublist in the input list. For each sublist, it converts it to a tuple and checks if this tuple is already in `count_dict`. If it is, it increments the count for that tuple. If it's not, it adds the tuple to `count_dict` with a count of 1. Finally, it returns `count_dict`. The assertion at the end checks if the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Your code should satisfy the following assertion:\n```python\nassert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]] )=={(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef unique_sublists(lst):\n    count_dict = {}\n    for sublist in lst:\n        tuple_sublist = tuple(sublist)\n        if tuple_sublist in count_dict:\n            count_dict[tuple_sublist] += 1\n        else:\n            count_dict[tuple_sublist] = 1\n    return count_dict\n\nassert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]) == {(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n```\n\nThis script defines a function `unique_sublists` that takes a list of lists as input. It initializes an empty dictionary `count_dict`. It then iterates over each sublist in the input list. For each sublist, it converts it to a tuple and checks if this tuple is already in `count_dict`. If it is, it increments the count for that tuple. If it's not, it adds the tuple to `count_dict` with a count of 1. Finally, it returns `count_dict`. The assertion at the end checks if the function works correctly."}

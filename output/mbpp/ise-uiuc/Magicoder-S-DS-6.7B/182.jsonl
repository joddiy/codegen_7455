{"task_id": "Mbpp/398", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef sum_of_digits(numbers):\n    return sum(int(digit) for number in numbers for digit in str(number))\n\nassert sum_of_digits([10,2,56])==14\n```\n\nThis script defines a function `sum_of_digits` that takes a list of numbers as input. It uses a generator expression to iterate over each number in the list, and then over each digit in the number (converted to a string). The `int` function is used to convert each digit back to an integer, and the `sum` function adds up all the digits.\n\nThe `assert` statement checks if the function works correctly. If the function returns the expected result (14), the assertion passes. If it returns a different result, the assertion raises an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to compute the sum of digits of each number of a given list. Your code should satisfy the following assertion:\n```python\nassert sum_of_digits([10,2,56])==14\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef sum_of_digits(numbers):\n    return sum(int(digit) for number in numbers for digit in str(number))\n\nassert sum_of_digits([10,2,56])==14\n```\n\nThis script defines a function `sum_of_digits` that takes a list of numbers as input. It uses a generator expression to iterate over each number in the list, and then over each digit in the number (converted to a string). The `int` function is used to convert each digit back to an integer, and the `sum` function adds up all the digits.\n\nThe `assert` statement checks if the function works correctly. If the function returns the expected result (14), the assertion passes. If it returns a different result, the assertion raises an `AssertionError`."}

{"task_id": "Mbpp/723", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef count_same_pair(list1, list2):\n    return sum(1 for a, b in zip(list1, list2) if a == b)\n\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```\n\nIn this script, the function `count_same_pair` takes two lists as input. It uses the `zip` function to pair corresponding elements from the two lists. Then it counts the number of pairs where the elements are equal using a generator expression and the `sum` function. The `assert` statement checks if the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nThe input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Your code should satisfy the following assertion:\n```python\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef count_same_pair(list1, list2):\n    return sum(1 for a, b in zip(list1, list2) if a == b)\n\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```\n\nIn this script, the function `count_same_pair` takes two lists as input. It uses the `zip` function to pair corresponding elements from the two lists. Then it counts the number of pairs where the elements are equal using a generator expression and the `sum` function. The `assert` statement checks if the function is working correctly."}

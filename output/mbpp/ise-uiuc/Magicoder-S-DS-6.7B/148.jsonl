{"task_id": "Mbpp/280", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef sequential_search(array, element):\n    for i in range(len(array)):\n        if array[i] == element:\n            return (True, i)\n    return (False, -1)\n\nassert sequential_search([11,23,58,31,56,77,43,12,65,19],31) == (True, 3)\n```\n\nThis script defines a function `sequential_search` that takes in an array and an element. It then iterates over the array, checking each element to see if it matches the given element. If it does, it returns a tuple containing `True` and the index of the element. If it doesn't find the element after checking all elements, it returns a tuple containing `False` and `-1`. The assertion at the end checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found). Your code should satisfy the following assertion:\n```python\nassert sequential_search([11,23,58,31,56,77,43,12,65,19],31) == (True, 3)\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef sequential_search(array, element):\n    for i in range(len(array)):\n        if array[i] == element:\n            return (True, i)\n    return (False, -1)\n\nassert sequential_search([11,23,58,31,56,77,43,12,65,19],31) == (True, 3)\n```\n\nThis script defines a function `sequential_search` that takes in an array and an element. It then iterates over the array, checking each element to see if it matches the given element. If it does, it returns a tuple containing `True` and the index of the element. If it doesn't find the element after checking all elements, it returns a tuple containing `False` and `-1`. The assertion at the end checks if the function works as expected."}

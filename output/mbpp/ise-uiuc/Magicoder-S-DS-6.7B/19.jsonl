{"task_id": "Mbpp/61", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef count_Substrings(s):\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if sum(int(digit) for digit in s[i:j]) == j-i:\n                count += 1\n    return count\n```\n\nThis function works by iterating over all possible substrings of the input string `s`. For each substring, it checks if the sum of the digits in the substring is equal to the length of the substring. If it is, it increments the count. Finally, it returns the count.\n\nThe assertion `assert count_Substrings('112112') == 6` is satisfied by this function.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to count the number of substrings with the sum of digits equal to their length. Your code should satisfy the following assertion:\n```python\nassert count_Substrings('112112') == 6\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef count_Substrings(s):\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if sum(int(digit) for digit in s[i:j]) == j-i:\n                count += 1\n    return count\n```\n\nThis function works by iterating over all possible substrings of the input string `s`. For each substring, it checks if the sum of the digits in the substring is equal to the length of the substring. If it is, it increments the count. Finally, it returns the count.\n\nThe assertion `assert count_Substrings('112112') == 6` is satisfied by this function."}

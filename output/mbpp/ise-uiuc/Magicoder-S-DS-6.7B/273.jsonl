{"task_id": "Mbpp/586", "completion": "\nHere is a Python function that satisfies the given assertion:\n\n```python\ndef split_Arr(arr, n):\n    return arr[n:] + arr[:n]\n```\n\nThis function takes a list `arr` and an integer `n` as input. It uses list slicing to split the list at the `n`th element and then concatenates the second part (after the `n`th element) with the first part (before the `n`th element). The result is a new list where the first `n` elements have been moved to the end.\n\nYou can test this function with the given assertion:\n\n```python\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```\n\nThis assertion should pass without any error, indicating that the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to split a list at the nth eelment and add the first part to the end. Your code should satisfy the following assertion:\n```python\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```\n\n### Response:\nHere is a Python function that satisfies the given assertion:\n\n```python\ndef split_Arr(arr, n):\n    return arr[n:] + arr[:n]\n```\n\nThis function takes a list `arr` and an integer `n` as input. It uses list slicing to split the list at the `n`th element and then concatenates the second part (after the `n`th element) with the first part (before the `n`th element). The result is a new list where the first `n` elements have been moved to the end.\n\nYou can test this function with the given assertion:\n\n```python\nassert split_Arr([12,10,5,6,52,36],2) == [5,6,52,36,12,10]\n```\n\nThis assertion should pass without any error, indicating that the function is working correctly."}

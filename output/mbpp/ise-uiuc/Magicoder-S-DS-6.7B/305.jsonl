{"task_id": "Mbpp/623", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef nth_nums(nums, n):\n    return [num ** n for num in nums]\n\nassert nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```\n\nThis function uses list comprehension to create a new list where each element is the n-th power of the corresponding element in the input list. The `assert` statement checks if the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to compute the n-th power of each number in a list. Your code should satisfy the following assertion:\n```python\nassert nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef nth_nums(nums, n):\n    return [num ** n for num in nums]\n\nassert nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```\n\nThis function uses list comprehension to create a new list where each element is the n-th power of the corresponding element in the input list. The `assert` statement checks if the function works correctly."}

{"task_id": "Mbpp/305", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef start_withp(words):\n    for word in words:\n        words_list = word.split()\n        for w in words_list:\n            if w.lower().startswith('p'):\n                return w, w\n    return None\n\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```\n\nThis script defines a function `start_withp` that takes a list of words as input. It then iterates over each word in the list and splits it into individual words. For each word, it checks if it starts with the letter 'p' (case-insensitive). If it does, it returns the word. If no words start with 'p', it returns `None`. The assertion at the end checks if the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to return two words from a list of words starting with letter 'p'. Your code should satisfy the following assertion:\n```python\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef start_withp(words):\n    for word in words:\n        words_list = word.split()\n        for w in words_list:\n            if w.lower().startswith('p'):\n                return w, w\n    return None\n\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```\n\nThis script defines a function `start_withp` that takes a list of words as input. It then iterates over each word in the list and splits it into individual words. For each word, it checks if it starts with the letter 'p' (case-insensitive). If it does, it returns the word. If no words start with 'p', it returns `None`. The assertion at the end checks if the function works correctly."}

{"task_id": "Mbpp/803", "completion": "\nHere is a Python script that checks whether a given number is a perfect square or not:\n\n```python\nimport math\n\ndef is_perfect_square(n):\n    if n < 0:\n        return False\n    root = math.sqrt(n)\n    return int(root + 0.5) ** 2 == n\n\nassert not is_perfect_square(10)\n```\n\nThis script uses the `math.sqrt()` function to calculate the square root of the given number. It then checks if the square of the integer part of the square root (`int(root + 0.5) ** 2`) equals the original number. If it does, then the number is a perfect square, and the function returns `True`. Otherwise, it returns `False`.\n\nThe `assert` statement checks if the function `is_perfect_square(10)` returns `False`. If it does, the test passes. If it doesn't, the test fails.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/. Your code should satisfy the following assertion:\n```python\nassert not is_perfect_square(10)\n```\n\n### Response:\nHere is a Python script that checks whether a given number is a perfect square or not:\n\n```python\nimport math\n\ndef is_perfect_square(n):\n    if n < 0:\n        return False\n    root = math.sqrt(n)\n    return int(root + 0.5) ** 2 == n\n\nassert not is_perfect_square(10)\n```\n\nThis script uses the `math.sqrt()` function to calculate the square root of the given number. It then checks if the square of the integer part of the square root (`int(root + 0.5) ** 2`) equals the original number. If it does, then the number is a perfect square, and the function returns `True`. Otherwise, it returns `False`.\n\nThe `assert` statement checks if the function `is_perfect_square(10)` returns `False`. If it does, the test passes. If it doesn't, the test fails."}

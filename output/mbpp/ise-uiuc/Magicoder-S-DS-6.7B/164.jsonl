{"task_id": "Mbpp/300", "completion": "\nHere is a Python script that solves the problem using dynamic programming. The idea is to create a 2D array dp where dp[i][j] represents the count of binary sequences of length 2i such that the sum of first i bits is equal to the sum of last i bits.\n\n```python\nimport math\n\ndef count_binary_seq(n):\n    dp = [[0] * (2*n+1) for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        for j in range(2*i+1):\n            if j > 0:\n                dp[i][j] += dp[i-1][j-1]\n            if j < 2*i:\n                dp[i][j] += dp[i-1][j+1]\n    return dp[n][n]\n\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```\n\nThis script initializes a 2D array dp with all elements set to 0. It then iterates through each element of the array, updating the count of binary sequences based on the previous elements. The count of binary sequences of length 2i such that the sum of first i bits is equal to the sum of last i bits is stored in dp[i][i]. The function finally returns the count of binary sequences of length 2n such that the sum of first n bits is equal to the sum of last n bits.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. Your code should satisfy the following assertion:\n```python\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```\n\n### Response:\nHere is a Python script that solves the problem using dynamic programming. The idea is to create a 2D array dp where dp[i][j] represents the count of binary sequences of length 2i such that the sum of first i bits is equal to the sum of last i bits.\n\n```python\nimport math\n\ndef count_binary_seq(n):\n    dp = [[0] * (2*n+1) for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        for j in range(2*i+1):\n            if j > 0:\n                dp[i][j] += dp[i-1][j-1]\n            if j < 2*i:\n                dp[i][j] += dp[i-1][j+1]\n    return dp[n][n]\n\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```\n\nThis script initializes a 2D array dp with all elements set to 0. It then iterates through each element of the array, updating the count of binary sequences based on the previous elements. The count of binary sequences of length 2i such that the sum of first i bits is equal to the sum of last i bits is stored in dp[i][i]. The function finally returns the count of binary sequences of length 2n such that the sum of first n bits is equal to the sum of last n bits."}

{"task_id": "Mbpp/394", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef check_distinct(tup):\n    return len(tup) == len(set(tup))\n\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\nThis script uses the built-in `set` function in Python, which removes duplicates from a list. If the length of the tuple is equal to the length of the set of the tuple, it means that there were no duplicates in the tuple, so the function returns `True`. If not, it returns `False`. The `assert` statement checks if the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to check if given tuple contains no duplicates. Your code should satisfy the following assertion:\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef check_distinct(tup):\n    return len(tup) == len(set(tup))\n\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\nThis script uses the built-in `set` function in Python, which removes duplicates from a list. If the length of the tuple is equal to the length of the set of the tuple, it means that there were no duplicates in the tuple, so the function returns `True`. If not, it returns `False`. The `assert` statement checks if the function works correctly."}

{"task_id": "Mbpp/632", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef move_zero(lst):\n    return [i for i in lst if i != 0] + [0] * lst.count(0)\n```\n\nThis function uses list comprehension to create a new list that includes all non-zero elements from the original list, followed by all zero elements. The `count(0)` method is used to determine the number of zeroes in the original list and then multiplies it by `[0]` to create a list of zeroes.\n\nYou can test the function with the provided assertion:\n\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\nIf the assertion passes, it means the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a python function to move all zeroes to the end of the given list. Your code should satisfy the following assertion:\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef move_zero(lst):\n    return [i for i in lst if i != 0] + [0] * lst.count(0)\n```\n\nThis function uses list comprehension to create a new list that includes all non-zero elements from the original list, followed by all zero elements. The `count(0)` method is used to determine the number of zeroes in the original list and then multiplies it by `[0]` to create a list of zeroes.\n\nYou can test the function with the provided assertion:\n\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\nIf the assertion passes, it means the function is working correctly."}

{"task_id": "Mbpp/448", "completion": "\nHere is a Python script that calculates the sum of the first n Perrin numbers.\n\n```python\ndef cal_sum(n):\n    # Initialize the first three Perrin numbers\n    a, b, c = 3, 0, 2\n    # Initialize the sum\n    sum_perrin = 0\n    # Calculate the sum of the first n Perrin numbers\n    for _ in range(n):\n        sum_perrin += a\n        a, b, c = b, c, a + b\n    return sum_perrin\n\n# Test the function\nassert cal_sum(9) == 49\n```\n\nThis script uses a for loop to iterate n times, each time updating the Perrin numbers and adding the current a to the sum. The first three Perrin numbers are initialized as 3, 0, 2. The function then returns the sum of the first n Perrin numbers. The assertion at the end checks if the function works correctly for n = 9.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to calculate the sum of perrin numbers. Your code should satisfy the following assertion:\n```python\nassert cal_sum(9) == 49\n```\n\n### Response:\nHere is a Python script that calculates the sum of the first n Perrin numbers.\n\n```python\ndef cal_sum(n):\n    # Initialize the first three Perrin numbers\n    a, b, c = 3, 0, 2\n    # Initialize the sum\n    sum_perrin = 0\n    # Calculate the sum of the first n Perrin numbers\n    for _ in range(n):\n        sum_perrin += a\n        a, b, c = b, c, a + b\n    return sum_perrin\n\n# Test the function\nassert cal_sum(9) == 49\n```\n\nThis script uses a for loop to iterate n times, each time updating the Perrin numbers and adding the current a to the sum. The first three Perrin numbers are initialized as 3, 0, 2. The function then returns the sum of the first n Perrin numbers. The assertion at the end checks if the function works correctly for n = 9."}

{"task_id": "Mbpp/594", "completion": "\nHere is a Python function that solves the problem:\n\n```python\ndef diff_even_odd(lst):\n    even = next((x for x in lst if x % 2 == 0), None)\n    odd = next((x for x in lst if x % 2 != 0), None)\n    return even - odd if even and odd else None\n\nassert diff_even_odd([1,3,5,7,4,1,6,8]) == 3\n```\n\nIn this function, we use Python's `next` function to find the first even and odd number in the list. If no such number exists, `next` returns `None`. Then we return the difference of the first even and odd number if they exist, otherwise `None`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to find the difference of the first even and first odd number of a given list. Your code should satisfy the following assertion:\n```python\nassert diff_even_odd([1,3,5,7,4,1,6,8])==3\n```\n\n### Response:\nHere is a Python function that solves the problem:\n\n```python\ndef diff_even_odd(lst):\n    even = next((x for x in lst if x % 2 == 0), None)\n    odd = next((x for x in lst if x % 2 != 0), None)\n    return even - odd if even and odd else None\n\nassert diff_even_odd([1,3,5,7,4,1,6,8]) == 3\n```\n\nIn this function, we use Python's `next` function to find the first even and odd number in the list. If no such number exists, `next` returns `None`. Then we return the difference of the first even and odd number if they exist, otherwise `None`."}

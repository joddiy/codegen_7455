{"task_id": "Mbpp/229", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef re_arrange_array(arr, n):\n    # Separate negative and positive numbers\n    neg_nums = [num for num in arr[:n] if num < 0]\n    pos_nums = [num for num in arr[:n] if num >= 0]\n\n    # Combine negative and positive numbers\n    result = neg_nums + pos_nums\n\n    # Append the rest of the array\n    result += arr[n:]\n\n    return result\n\n# Test the function\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```\n\nThis script works by first separating the negative and positive numbers from the first n elements of the array. Then, it combines these two lists while preserving the original order of the negative and positive numbers. Finally, it appends the rest of the array to the result.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved. Your code should satisfy the following assertion:\n```python\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef re_arrange_array(arr, n):\n    # Separate negative and positive numbers\n    neg_nums = [num for num in arr[:n] if num < 0]\n    pos_nums = [num for num in arr[:n] if num >= 0]\n\n    # Combine negative and positive numbers\n    result = neg_nums + pos_nums\n\n    # Append the rest of the array\n    result += arr[n:]\n\n    return result\n\n# Test the function\nassert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]\n```\n\nThis script works by first separating the negative and positive numbers from the first n elements of the array. Then, it combines these two lists while preserving the original order of the negative and positive numbers. Finally, it appends the rest of the array to the result."}

{"task_id": "Mbpp/265", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef list_split(lst, n):\n    return [lst[i:i+n] for i in range(0, len(lst), n)]\n\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\nThis script uses a list comprehension to create a new list that contains sublists of every nth element from the original list. The range function is used to generate the indices for the sublists, with a step of n to get every nth element. The assert statement checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Your code should satisfy the following assertion:\n```python\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef list_split(lst, n):\n    return [lst[i:i+n] for i in range(0, len(lst), n)]\n\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\nThis script uses a list comprehension to create a new list that contains sublists of every nth element from the original list. The range function is used to generate the indices for the sublists, with a step of n to get every nth element. The assert statement checks if the function works as expected."}

{"task_id": "Mbpp/743", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef rotate_right(lst, n):\n    return lst[-n:] + lst[:-n]\n\nassert rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3)==[8, 9, 10, 1, 2, 3, 4, 5, 6, 7]\n```\n\nThis script defines a function `rotate_right` that takes a list `lst` and a number `n`. It returns a new list that is the result of rotating `lst` to the right by `n` items. The rotation is achieved by slicing the list into two parts at the `n`th item from the end (`lst[-n:]`) and the rest of the list (`lst[:-n]`), and then concatenating these two parts in reversed order.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, the assertion will not raise any errors. If the function does not work correctly, the assertion will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/. Your code should satisfy the following assertion:\n```python\nassert rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3)==[8, 9, 10, 1, 2, 3, 4, 5, 6, 7]\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef rotate_right(lst, n):\n    return lst[-n:] + lst[:-n]\n\nassert rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3)==[8, 9, 10, 1, 2, 3, 4, 5, 6, 7]\n```\n\nThis script defines a function `rotate_right` that takes a list `lst` and a number `n`. It returns a new list that is the result of rotating `lst` to the right by `n` items. The rotation is achieved by slicing the list into two parts at the `n`th item from the end (`lst[-n:]`) and the rest of the list (`lst[:-n]`), and then concatenating these two parts in reversed order.\n\nThe assertion at the end checks if the function works correctly. If the function works correctly, the assertion will not raise any errors. If the function does not work correctly, the assertion will raise an `AssertionError`."}

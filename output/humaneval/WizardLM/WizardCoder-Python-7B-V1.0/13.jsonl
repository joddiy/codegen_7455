{"task_id": "HumanEval/13", "completion": "Here is a possible solution to the problem:\r\n\r\n```python\r\ndef greatest_common_divisor(a: int, b: int) -> int:\r\n    \"\"\"Return the greatest common divisor of two integers a and b\"\"\"\r\n    if a == 0:\r\n        return b\r\n    elif b == 0:\r\n        return a\r\n    else:\r\n        return greatest_common_divisor(b, a % b)\r\n```\r\n\r\nThis solution uses the Euclidean algorithm, which is a simple and efficient algorithm to find the greatest common divisor of two integers. The algorithm works by repeatedly dividing the larger number by the smaller number until the remainder is 0, and then returning the smaller number. The last non-zero remainder is the greatest common divisor. The function is recursive, so it keeps calling itself with the smaller number and the remainder until it reaches a remainder of 0, at which point it returns the current value of the smaller number. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n```\n\n### Response:Here is a possible solution to the problem:\r\n\r\n```python\r\ndef greatest_common_divisor(a: int, b: int) -> int:\r\n    \"\"\"Return the greatest common divisor of two integers a and b\"\"\"\r\n    if a == 0:\r\n        return b\r\n    elif b == 0:\r\n        return a\r\n    else:\r\n        return greatest_common_divisor(b, a % b)\r\n```\r\n\r\nThis solution uses the Euclidean algorithm, which is a simple and efficient algorithm to find the greatest common divisor of two integers. The algorithm works by repeatedly dividing the larger number by the smaller number until the remainder is 0, and then returning the smaller number. The last non-zero remainder is the greatest common divisor. The function is recursive, so it keeps calling itself with the smaller number and the remainder until it reaches a remainder of 0, at which point it returns the current value of the smaller number. "}

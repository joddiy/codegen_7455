{"task_id": "HumanEval/57", "completion": "Here's a possible solution to the problem:\r\n\r\n```python\r\ndef monotonic(l: list):\r\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\"\"\"\r\n    if len(l) <= 1:\r\n        return True\r\n    \r\n    increasing = True\r\n    decreasing = True\r\n    \r\n    for i in range(1, len(l)):\r\n        if l[i] < l[i-1]:\r\n            increasing = False\r\n        elif l[i] > l[i-1]:\r\n            decreasing = False\r\n        \r\n        if not increasing and not decreasing:\r\n            return False\r\n    \r\n    return increasing or decreasing\r\n```\r\n\r\nExplanation:\r\n\r\nThe function takes a list `l` as input and returns `True` if the elements in the list are monotonically increasing or decreasing. If the list has only one element, it is considered monotonic by definition, so we return `True` in that case. Otherwise, we initialize two boolean variables `increasing` and `decreasing` to `True`. We iterate over the list and check if each element is greater than or less than the previous element. If we find an element that violates this condition, we set the corresponding boolean variable to `False`. If we reach the end of the list and both variables are still `True`, then the list is monotonic. Otherwise, we return `False`. Note that we can't return `True` immediately if we find an increasing sequence, because there could be a decreasing sequence later in the list. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n```\n\n### Response:Here's a possible solution to the problem:\r\n\r\n```python\r\ndef monotonic(l: list):\r\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\"\"\"\r\n    if len(l) <= 1:\r\n        return True\r\n    \r\n    increasing = True\r\n    decreasing = True\r\n    \r\n    for i in range(1, len(l)):\r\n        if l[i] < l[i-1]:\r\n            increasing = False\r\n        elif l[i] > l[i-1]:\r\n            decreasing = False\r\n        \r\n        if not increasing and not decreasing:\r\n            return False\r\n    \r\n    return increasing or decreasing\r\n```\r\n\r\nExplanation:\r\n\r\nThe function takes a list `l` as input and returns `True` if the elements in the list are monotonically increasing or decreasing. If the list has only one element, it is considered monotonic by definition, so we return `True` in that case. Otherwise, we initialize two boolean variables `increasing` and `decreasing` to `True`. We iterate over the list and check if each element is greater than or less than the previous element. If we find an element that violates this condition, we set the corresponding boolean variable to `False`. If we reach the end of the list and both variables are still `True`, then the list is monotonic. Otherwise, we return `False`. Note that we can't return `True` immediately if we find an increasing sequence, because there could be a decreasing sequence later in the list. "}

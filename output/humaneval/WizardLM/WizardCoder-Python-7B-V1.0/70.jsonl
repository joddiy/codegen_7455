{"task_id": "HumanEval/70", "completion": "Here's one possible solution to the problem:\r\n\r\n```python\r\ndef strange_sort_list(lst):\r\n    if not lst:\r\n        return []\r\n    \r\n    min_val = min(lst)\r\n    max_val = max(lst)\r\n    result = [min_val]\r\n    \r\n    while lst:\r\n        lst.remove(min_val)\r\n        if lst:\r\n            max_val = max(lst)\r\n            result.append(max_val)\r\n            lst.remove(max_val)\r\n            min_val = min(lst)\r\n        else:\r\n            break\r\n    \r\n    result.extend(lst)\r\n    return result\r\n```\r\n\r\nThis solution first finds the minimum and maximum values in the list, and adds them to the result list. Then, it removes them from the original list and repeats the process until there are no more values left. Finally, it appends any remaining values to the end of the result list. This ensures that the list is sorted in a strange order. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n```\n\n### Response:Here's one possible solution to the problem:\r\n\r\n```python\r\ndef strange_sort_list(lst):\r\n    if not lst:\r\n        return []\r\n    \r\n    min_val = min(lst)\r\n    max_val = max(lst)\r\n    result = [min_val]\r\n    \r\n    while lst:\r\n        lst.remove(min_val)\r\n        if lst:\r\n            max_val = max(lst)\r\n            result.append(max_val)\r\n            lst.remove(max_val)\r\n            min_val = min(lst)\r\n        else:\r\n            break\r\n    \r\n    result.extend(lst)\r\n    return result\r\n```\r\n\r\nThis solution first finds the minimum and maximum values in the list, and adds them to the result list. Then, it removes them from the original list and repeats the process until there are no more values left. Finally, it appends any remaining values to the end of the result list. This ensures that the list is sorted in a strange order. "}

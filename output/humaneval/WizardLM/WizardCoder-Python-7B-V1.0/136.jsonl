{"task_id": "HumanEval/136", "completion": "Here's the solution to the problem:\r\n\r\n```python\r\ndef largest_smallest_integers(lst):\r\n    if not lst:\r\n        return (None, None)\r\n    \r\n    largest_negative = None\r\n    smallest_positive = None\r\n    \r\n    for num in lst:\r\n        if num < 0:\r\n            if largest_negative is None or num > largest_negative:\r\n                largest_negative = num\r\n        elif num > 0:\r\n            if smallest_positive is None or num < smallest_positive:\r\n                smallest_positive = num\r\n    \r\n    return (largest_negative, smallest_positive)\r\n```\r\n\r\nWe first check if the list is empty or contains only 0. If it is, we return (None, None) as there is no negative or positive integers.\r\n\r\nWe then initialize two variables, `largest_negative` and `smallest_positive`, to None. We iterate through the list and check if each number is negative or positive. If it is negative, we update `largest_negative` if it is None or if it is greater than the current `largest_negative`. If it is positive, we update `smallest_positive` if it is None or if it is less than the current `smallest_positive`.\r\n\r\nFinally, we return a tuple containing `largest_negative` and `smallest_positive`. If either of them is None, it means there is no negative or positive integers in the list, respectively. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef largest_smallest_integers(lst):\n    '''\n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a list.\n    If there is no negative or positive integers, return them as None.\n\n    Examples:\n    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n    largest_smallest_integers([]) == (None, None)\n    largest_smallest_integers([0]) == (None, None)\n    '''\n```\n\n### Response:Here's the solution to the problem:\r\n\r\n```python\r\ndef largest_smallest_integers(lst):\r\n    if not lst:\r\n        return (None, None)\r\n    \r\n    largest_negative = None\r\n    smallest_positive = None\r\n    \r\n    for num in lst:\r\n        if num < 0:\r\n            if largest_negative is None or num > largest_negative:\r\n                largest_negative = num\r\n        elif num > 0:\r\n            if smallest_positive is None or num < smallest_positive:\r\n                smallest_positive = num\r\n    \r\n    return (largest_negative, smallest_positive)\r\n```\r\n\r\nWe first check if the list is empty or contains only 0. If it is, we return (None, None) as there is no negative or positive integers.\r\n\r\nWe then initialize two variables, `largest_negative` and `smallest_positive`, to None. We iterate through the list and check if each number is negative or positive. If it is negative, we update `largest_negative` if it is None or if it is greater than the current `largest_negative`. If it is positive, we update `smallest_positive` if it is None or if it is less than the current `smallest_positive`.\r\n\r\nFinally, we return a tuple containing `largest_negative` and `smallest_positive`. If either of them is None, it means there is no negative or positive integers in the list, respectively. "}

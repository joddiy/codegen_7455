{"task_id": "HumanEval/18", "completion": "Here's a possible solution to the problem:\r\n\r\n```python\r\ndef how_many_times(string: str, substring: str) -> int:\r\n    count = 0\r\n    for i in range(len(string) - len(substring) + 1):\r\n        if string[i:i+len(substring)] == substring:\r\n            count += 1\r\n    return count\r\n```\r\n\r\nThis solution iterates through the original string and checks if the current substring of length `len(substring)` starting at index `i` matches the given substring. If it does, it increments the count. The function returns the final count. Note that this solution counts overlapping cases, so `'aaa'` and `'aa'` would both count as three times in `'aaaa'`. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n```\n\n### Response:Here's a possible solution to the problem:\r\n\r\n```python\r\ndef how_many_times(string: str, substring: str) -> int:\r\n    count = 0\r\n    for i in range(len(string) - len(substring) + 1):\r\n        if string[i:i+len(substring)] == substring:\r\n            count += 1\r\n    return count\r\n```\r\n\r\nThis solution iterates through the original string and checks if the current substring of length `len(substring)` starting at index `i` matches the given substring. If it does, it increments the count. The function returns the final count. Note that this solution counts overlapping cases, so `'aaa'` and `'aa'` would both count as three times in `'aaaa'`. "}

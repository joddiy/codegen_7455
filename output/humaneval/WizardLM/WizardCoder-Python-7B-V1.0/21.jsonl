{"task_id": "HumanEval/21", "completion": "Here's one possible solution:\r\n\r\n```python\r\nfrom typing import List\r\n\r\ndef rescale_to_unit(numbers: List[float]) -> List[float]:\r\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\r\n    such that the smallest number will become 0 and the largest will become 1\r\n    \"\"\"\r\n    if len(numbers) < 2:\r\n        raise ValueError(\"List must have at least two elements\")\r\n    \r\n    min_num = min(numbers)\r\n    max_num = max(numbers)\r\n    \r\n    if min_num == max_num:\r\n        return [0.0] * len(numbers)\r\n    \r\n    scale = 1 / (max_num - min_num)\r\n    \r\n    return [(num - min_num) * scale for num in numbers]\r\n```\r\n\r\nThis function first checks if the list has at least two elements, and raises a `ValueError` if it doesn't. Then, it finds the minimum and maximum values in the list using the `min` and `max` functions. If the minimum and maximum are the same, it returns a list of zeros of the same length as the input list. Otherwise, it calculates a scaling factor `scale` by dividing 1 by the difference between the maximum and minimum values. It then applies this scaling factor to each element in the input list by subtracting the minimum value and multiplying by the scaling factor. The resulting list is returned. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef rescale_to_unit(numbers: List[float]) -> List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\n    such that the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n```\n\n### Response:Here's one possible solution:\r\n\r\n```python\r\nfrom typing import List\r\n\r\ndef rescale_to_unit(numbers: List[float]) -> List[float]:\r\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\r\n    such that the smallest number will become 0 and the largest will become 1\r\n    \"\"\"\r\n    if len(numbers) < 2:\r\n        raise ValueError(\"List must have at least two elements\")\r\n    \r\n    min_num = min(numbers)\r\n    max_num = max(numbers)\r\n    \r\n    if min_num == max_num:\r\n        return [0.0] * len(numbers)\r\n    \r\n    scale = 1 / (max_num - min_num)\r\n    \r\n    return [(num - min_num) * scale for num in numbers]\r\n```\r\n\r\nThis function first checks if the list has at least two elements, and raises a `ValueError` if it doesn't. Then, it finds the minimum and maximum values in the list using the `min` and `max` functions. If the minimum and maximum are the same, it returns a list of zeros of the same length as the input list. Otherwise, it calculates a scaling factor `scale` by dividing 1 by the difference between the maximum and minimum values. It then applies this scaling factor to each element in the input list by subtracting the minimum value and multiplying by the scaling factor. The resulting list is returned. "}

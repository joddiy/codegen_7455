{"task_id": "HumanEval/79", "completion": "Here's the solution to the problem:\r\n\r\n```python\r\ndef decimal_to_binary(decimal):\r\n    binary = bin(decimal)[2:]\r\n    binary = 'db' + binary + 'db'\r\n    return binary\r\n```\r\n\r\nExplanation:\r\n\r\nWe can use the built-in `bin()` function in Python to convert decimal numbers to binary format. The `bin()` function returns a string with the prefix `0b` which we don't want in our output. So we use slicing to remove the prefix and add the extra characters `db` at the beginning and end of the binary string. ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef decimal_to_binary(decimal):\n    \"\"\"You will be given a number in decimal form and your task is to convert it to\n    binary format. The function should return a string, with each character representing a binary\n    number. Each character in the string will be '0' or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    The extra characters are there to help with the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\n```\n\n### Response:Here's the solution to the problem:\r\n\r\n```python\r\ndef decimal_to_binary(decimal):\r\n    binary = bin(decimal)[2:]\r\n    binary = 'db' + binary + 'db'\r\n    return binary\r\n```\r\n\r\nExplanation:\r\n\r\nWe can use the built-in `bin()` function in Python to convert decimal numbers to binary format. The `bin()` function returns a string with the prefix `0b` which we don't want in our output. So we use slicing to remove the prefix and add the extra characters `db` at the beginning and end of the binary string. "}

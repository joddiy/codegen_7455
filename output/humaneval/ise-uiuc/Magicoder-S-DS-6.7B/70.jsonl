{"task_id": "HumanEval/70", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef strange_sort_list(lst):\n    lst.sort()\n    result = []\n    while lst:\n        result.append(lst.pop(0))\n        if lst:\n            result.append(lst.pop())\n    return result\n```\n\nThis script first sorts the input list in ascending order. Then it pops the smallest and largest elements from the sorted list and appends them to the result list. This process is repeated until the input list is empty. The result list is then returned.\n\nFor example, if you call `strange_sort_list([1, 2, 3, 4])`, the script will return `[1, 4, 2, 3]`. If you call `strange_sort_list([5, 5, 5, 5])`, the script will return `[5, 5, 5, 5]`. If you call `strange_sort_list([])`, the script will return `[]`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef strange_sort_list(lst):\n    lst.sort()\n    result = []\n    while lst:\n        result.append(lst.pop(0))\n        if lst:\n            result.append(lst.pop())\n    return result\n```\n\nThis script first sorts the input list in ascending order. Then it pops the smallest and largest elements from the sorted list and appends them to the result list. This process is repeated until the input list is empty. The result list is then returned.\n\nFor example, if you call `strange_sort_list([1, 2, 3, 4])`, the script will return `[1, 4, 2, 3]`. If you call `strange_sort_list([5, 5, 5, 5])`, the script will return `[5, 5, 5, 5]`. If you call `strange_sort_list([])`, the script will return `[]`."}

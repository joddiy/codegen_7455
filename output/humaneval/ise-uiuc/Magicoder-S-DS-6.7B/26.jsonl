{"task_id": "HumanEval/26", "completion": "\nHere is a Python script that solves the problem:\n\n```python\nfrom typing import List\n\n\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\n    result = []\n    for num in numbers:\n        if num not in result:\n            result.append(num)\n    return result\n\n\nprint(remove_duplicates([1, 2, 3, 2, 4]))\n```\n\nThis script creates a new list, `result`, and iterates over the input list, `numbers`. For each number in `numbers`, it checks if the number is already in `result`. If the number is not in `result`, it appends the number to `result`. This ensures that all numbers in `result` are unique and in the same order as in `numbers`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\nfrom typing import List\n\n\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\n    result = []\n    for num in numbers:\n        if num not in result:\n            result.append(num)\n    return result\n\n\nprint(remove_duplicates([1, 2, 3, 2, 4]))\n```\n\nThis script creates a new list, `result`, and iterates over the input list, `numbers`. For each number in `numbers`, it checks if the number is already in `result`. If the number is not in `result`, it appends the number to `result`. This ensures that all numbers in `result` are unique and in the same order as in `numbers`."}

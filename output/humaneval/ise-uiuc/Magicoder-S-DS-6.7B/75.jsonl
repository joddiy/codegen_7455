{"task_id": "HumanEval/75", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef is_prime(n):\n    \"\"\"Check if a number is prime\"\"\"\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef is_multiply_prime(a):\n    \"\"\"Check if a number is the multiplication of 3 prime numbers\"\"\"\n    if a <= 1:\n        return False\n    prime_factors = [i for i in range(2, a) if a % i == 0 and is_prime(i)]\n    if len(prime_factors) != 3:\n        return False\n    product = 1\n    for factor in prime_factors:\n        product *= factor\n    return product == a\n\n# Test the function\nprint(is_multiply_prime(30))  # True\nprint(is_multiply_prime(40))  # False\n```\n\nThis script first defines a helper function `is_prime(n)` to check if a number is prime. Then it defines the main function `is_multiply_prime(a)`. This function first checks if `a` is less than or equal to 1, in which case it returns False. It then finds all the prime factors of `a` and checks if there are exactly 3 of them. If there are not exactly 3, it returns False. If there are exactly 3, it calculates the product of these prime factors and checks if it equals `a`. If it does, it returns True; otherwise, it returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef is_prime(n):\n    \"\"\"Check if a number is prime\"\"\"\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef is_multiply_prime(a):\n    \"\"\"Check if a number is the multiplication of 3 prime numbers\"\"\"\n    if a <= 1:\n        return False\n    prime_factors = [i for i in range(2, a) if a % i == 0 and is_prime(i)]\n    if len(prime_factors) != 3:\n        return False\n    product = 1\n    for factor in prime_factors:\n        product *= factor\n    return product == a\n\n# Test the function\nprint(is_multiply_prime(30))  # True\nprint(is_multiply_prime(40))  # False\n```\n\nThis script first defines a helper function `is_prime(n)` to check if a number is prime. Then it defines the main function `is_multiply_prime(a)`. This function first checks if `a` is less than or equal to 1, in which case it returns False. It then finds all the prime factors of `a` and checks if there are exactly 3 of them. If there are not exactly 3, it returns False. If there are exactly 3, it calculates the product of these prime factors and checks if it equals `a`. If it does, it returns True; otherwise, it returns False."}

{"task_id": "HumanEval/145", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef order_by_points(nums):\n    return sorted(nums, key=lambda x: (sum(int(digit) for digit in str(abs(x))), nums.index(x)))\n```\n\nThis function uses the built-in `sorted` function in Python, which sorts the elements of a given iterable in a specific order. The `key` parameter of the `sorted` function is a function that computes a key value for each element in the iterable. In this case, the key is a tuple, where the first element is the sum of the digits of the absolute value of the number, and the second element is the index of the number in the original list.\n\nThe `lambda` function is a small anonymous function that computes the sum of the digits of the absolute value of a number. The `str(abs(x))` part converts the number to a string, and then `int(digit)` converts each digit back to an integer.\n\nThe `nums.index(x)` part is used to order the numbers with the same sum of digits by their original index in the list.\n\nThis solution assumes that the input list does not contain any non-integer values. If the input list can contain non-integer values, the function should be modified to handle these cases appropriately.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef order_by_points(nums):\n    return sorted(nums, key=lambda x: (sum(int(digit) for digit in str(abs(x))), nums.index(x)))\n```\n\nThis function uses the built-in `sorted` function in Python, which sorts the elements of a given iterable in a specific order. The `key` parameter of the `sorted` function is a function that computes a key value for each element in the iterable. In this case, the key is a tuple, where the first element is the sum of the digits of the absolute value of the number, and the second element is the index of the number in the original list.\n\nThe `lambda` function is a small anonymous function that computes the sum of the digits of the absolute value of a number. The `str(abs(x))` part converts the number to a string, and then `int(digit)` converts each digit back to an integer.\n\nThe `nums.index(x)` part is used to order the numbers with the same sum of digits by their original index in the list.\n\nThis solution assumes that the input list does not contain any non-integer values. If the input list can contain non-integer values, the function should be modified to handle these cases appropriately."}

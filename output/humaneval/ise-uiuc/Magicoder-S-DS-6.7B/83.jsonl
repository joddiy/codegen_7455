{"task_id": "HumanEval/83", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # If n is 1, there is only one number that starts or ends with 1\n    if n == 1:\n        return 2\n    # If n is greater than 1, there are 10^(n-1) numbers that start with 1\n    # and 10^(n-1) numbers that end with 1\n    else:\n        return 10**(n-1) * 2\n```\n\nThis script works by first checking if the input number is 1. If it is, there is only one number that starts or ends with 1, so it returns 2. If the input number is greater than 1, there are 10^(n-1) numbers that start with 1 and 10^(n-1) numbers that end with 1, so it returns 10^(n-1) * 2.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # If n is 1, there is only one number that starts or ends with 1\n    if n == 1:\n        return 2\n    # If n is greater than 1, there are 10^(n-1) numbers that start with 1\n    # and 10^(n-1) numbers that end with 1\n    else:\n        return 10**(n-1) * 2\n```\n\nThis script works by first checking if the input number is 1. If it is, there is only one number that starts or ends with 1, so it returns 2. If the input number is greater than 1, there are 10^(n-1) numbers that start with 1 and 10^(n-1) numbers that end with 1, so it returns 10^(n-1) * 2."}

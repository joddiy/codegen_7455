{"task_id": "HumanEval/18", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    count = start = 0\n    while start < len(string):\n        pos = string.find(substring, start)\n        if pos != -1:\n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count\n```\n\nThis script uses the `find` method of the string to find the first occurrence of the substring. If the substring is found, it increments the count and starts the search from the next position. If the substring is not found, it breaks the loop. The function returns the count of occurrences.\n\nYou can test the function with the following code:\n\n```python\nprint(how_many_times('', 'a'))  # Output: 0\nprint(how_many_times('aaa', 'a'))  # Output: 3\nprint(how_many_times('aaaa', 'aa'))  # Output: 3\n```\n\nThis will print the expected output for the given test cases.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    count = start = 0\n    while start < len(string):\n        pos = string.find(substring, start)\n        if pos != -1:\n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count\n```\n\nThis script uses the `find` method of the string to find the first occurrence of the substring. If the substring is found, it increments the count and starts the search from the next position. If the substring is not found, it breaks the loop. The function returns the count of occurrences.\n\nYou can test the function with the following code:\n\n```python\nprint(how_many_times('', 'a'))  # Output: 0\nprint(how_many_times('aaa', 'a'))  # Output: 3\nprint(how_many_times('aaaa', 'aa'))  # Output: 3\n```\n\nThis will print the expected output for the given test cases."}

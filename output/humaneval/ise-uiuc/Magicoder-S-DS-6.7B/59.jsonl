{"task_id": "HumanEval/59", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef largest_prime_factor(n: int):\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n\nprint(largest_prime_factor(13195))\nprint(largest_prime_factor(2048))\n```\n\nThis script works by dividing the input number by the smallest prime number (2) and then checking if the result is divisible by the same prime number. If it is, the script divides the number by the prime number and continues the process until the number is no longer divisible by the prime number. The prime number at this point is the largest prime factor of the original number.\n\nThe script then prints the largest prime factor of 13195 and 2048.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef largest_prime_factor(n: int):\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n\nprint(largest_prime_factor(13195))\nprint(largest_prime_factor(2048))\n```\n\nThis script works by dividing the input number by the smallest prime number (2) and then checking if the result is divisible by the same prime number. If it is, the script divides the number by the prime number and continues the process until the number is no longer divisible by the prime number. The prime number at this point is the largest prime factor of the original number.\n\nThe script then prints the largest prime factor of 13195 and 2048."}

{"task_id": "HumanEval/99", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef closest_integer(value):\n    num = float(value)\n    if num >= 0:\n        return int(num + 0.5)\n    else:\n        return int(num - 0.5)\n```\n\nThis function works by converting the input string to a float, then adding or subtracting 0.5 depending on whether the number is positive or negative. This gives us the number rounded to the nearest integer, and if the number is equidistant from two integers, it rounds away from zero.\n\nFor example, `closest_integer(\"10\")` returns `10`, and `closest_integer(\"15.3\")` returns `15`. `closest_integer(\"14.5\")` returns `15` and `closest_integer(\"-14.5\")` returns `-15`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef closest_integer(value):\n    num = float(value)\n    if num >= 0:\n        return int(num + 0.5)\n    else:\n        return int(num - 0.5)\n```\n\nThis function works by converting the input string to a float, then adding or subtracting 0.5 depending on whether the number is positive or negative. This gives us the number rounded to the nearest integer, and if the number is equidistant from two integers, it rounds away from zero.\n\nFor example, `closest_integer(\"10\")` returns `10`, and `closest_integer(\"15.3\")` returns `15`. `closest_integer(\"14.5\")` returns `15` and `closest_integer(\"-14.5\")` returns `-15`."}

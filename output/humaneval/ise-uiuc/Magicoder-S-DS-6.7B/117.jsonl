{"task_id": "HumanEval/117", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef select_words(s, n):\n    vowels = 'aeiou'\n    words = s.split()\n    result = []\n    for word in words:\n        count = 0\n        for letter in word:\n            if letter.lower() not in vowels:\n                count += 1\n        if count == n:\n            result.append(word)\n    return result\n```\n\nThis script works by first splitting the input string into a list of words. Then it iterates over each word in the list. For each word, it counts the number of consonants by checking each letter. If the count is equal to the input number n, the word is added to the result list. Finally, the function returns the result list.\n\nHere are some test cases to validate the function:\n\n```python\nprint(select_words(\"Mary had a little lamb\", 4))  # Output: ['little']\nprint(select_words(\"Mary had a little lamb\", 3))  # Output: ['Mary', 'lamb']\nprint(select_words(\"simple white space\", 2))  # Output: []\nprint(select_words(\"Hello world\", 4))  # Output: ['world']\nprint(select_words(\"Uncle sam\", 3))  # Output: ['Uncle']\n```\n\nThe function should return the expected results for each test case.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef select_words(s, n):\n    \"\"\"Given a string s and a natural number n, you have been tasked to implement \n    a function that returns a list of all words from string s that contain exactly \n    n consonants, in order these words appear in the string s.\n    If the string s is empty then the function should return an empty list.\n    Note: you may assume the input string contains only letters and spaces.\n    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef select_words(s, n):\n    vowels = 'aeiou'\n    words = s.split()\n    result = []\n    for word in words:\n        count = 0\n        for letter in word:\n            if letter.lower() not in vowels:\n                count += 1\n        if count == n:\n            result.append(word)\n    return result\n```\n\nThis script works by first splitting the input string into a list of words. Then it iterates over each word in the list. For each word, it counts the number of consonants by checking each letter. If the count is equal to the input number n, the word is added to the result list. Finally, the function returns the result list.\n\nHere are some test cases to validate the function:\n\n```python\nprint(select_words(\"Mary had a little lamb\", 4))  # Output: ['little']\nprint(select_words(\"Mary had a little lamb\", 3))  # Output: ['Mary', 'lamb']\nprint(select_words(\"simple white space\", 2))  # Output: []\nprint(select_words(\"Hello world\", 4))  # Output: ['world']\nprint(select_words(\"Uncle sam\", 3))  # Output: ['Uncle']\n```\n\nThe function should return the expected results for each test case."}

{"task_id": "HumanEval/4", "completion": "\nHere is a Python script that calculates the Mean Absolute Deviation:\n\n```python\nfrom typing import List\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    mean = sum(numbers) / len(numbers)\n    mad = sum(abs(num - mean) for num in numbers) / len(numbers)\n    return mad\n\nprint(mean_absolute_deviation([1.0, 2.0, 3.0, 4.0]))\n```\n\nThis script first calculates the mean of the numbers. Then, it calculates the absolute difference between each number and the mean, sums these differences, and divides by the number of elements to get the Mean Absolute Deviation (MAD).", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n    Mean Absolute Deviation is the average absolute difference between each\n    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that calculates the Mean Absolute Deviation:\n\n```python\nfrom typing import List\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    mean = sum(numbers) / len(numbers)\n    mad = sum(abs(num - mean) for num in numbers) / len(numbers)\n    return mad\n\nprint(mean_absolute_deviation([1.0, 2.0, 3.0, 4.0]))\n```\n\nThis script first calculates the mean of the numbers. Then, it calculates the absolute difference between each number and the mean, sums these differences, and divides by the number of elements to get the Mean Absolute Deviation (MAD)."}

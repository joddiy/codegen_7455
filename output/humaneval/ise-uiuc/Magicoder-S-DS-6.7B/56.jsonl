{"task_id": "HumanEval/56", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef correct_bracketing(brackets: str):\n    stack = []\n    for bracket in brackets:\n        if bracket == \"<\":\n            stack.append(bracket)\n        elif bracket == \">\":\n            if len(stack) == 0 or stack[-1] != \"<\":\n                return False\n            stack.pop()\n    return len(stack) == 0\n\nprint(correct_bracketing(\"<\"))  # False\nprint(correct_bracketing(\"<>\"))  # True\nprint(correct_bracketing(\"<<><>>\"))  # True\nprint(correct_bracketing(\"><<>\"))  # False\n```\n\nThis script uses a stack to keep track of the opening brackets. When it encounters a closing bracket, it checks if the top of the stack is an opening bracket. If it is, it pops the opening bracket from the stack. If it is not, it returns False. If the stack is empty at the end, it returns True. Otherwise, it returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef correct_bracketing(brackets: str):\n    \"\"\" brackets is a string of \"<\" and \">\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"<\")\n    False\n    >>> correct_bracketing(\"<>\")\n    True\n    >>> correct_bracketing(\"<<><>>\")\n    True\n    >>> correct_bracketing(\"><<>\")\n    False\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef correct_bracketing(brackets: str):\n    stack = []\n    for bracket in brackets:\n        if bracket == \"<\":\n            stack.append(bracket)\n        elif bracket == \">\":\n            if len(stack) == 0 or stack[-1] != \"<\":\n                return False\n            stack.pop()\n    return len(stack) == 0\n\nprint(correct_bracketing(\"<\"))  # False\nprint(correct_bracketing(\"<>\"))  # True\nprint(correct_bracketing(\"<<><>>\"))  # True\nprint(correct_bracketing(\"><<>\"))  # False\n```\n\nThis script uses a stack to keep track of the opening brackets. When it encounters a closing bracket, it checks if the top of the stack is an opening bracket. If it is, it pops the opening bracket from the stack. If it is not, it returns False. If the stack is empty at the end, it returns True. Otherwise, it returns False."}

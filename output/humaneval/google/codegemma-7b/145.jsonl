{"task_id": "HumanEval/145", "completion": "\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n    # Create a dictionary to store the sum of digits for each number\n    sums = {}\n    for i, num in enumerate(nums):\n        # Calculate the sum of digits for the current number\n        sum = 0\n        for digit in str(num):\n            sum += int(digit)\n        # Add the sum to the dictionary with the original index as the key\n        sums[i] = sum\n\n    # Sort the list based on the sum of digits and the original index\n    sorted_nums = sorted(nums, key=lambda x: (sums[nums.index(x)], nums.index(x)))\n\n    return sorted_nums\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n```\n\n### Response:\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n    # Create a dictionary to store the sum of digits for each number\n    sums = {}\n    for i, num in enumerate(nums):\n        # Calculate the sum of digits for the current number\n        sum = 0\n        for digit in str(num):\n            sum += int(digit)\n        # Add the sum to the dictionary with the original index as the key\n        sums[i] = sum\n\n    # Sort the list based on the sum of digits and the original index\n    sorted_nums = sorted(nums, key=lambda x: (sums[nums.index(x)], nums.index(x)))\n\n    return sorted_nums\n```\n"}

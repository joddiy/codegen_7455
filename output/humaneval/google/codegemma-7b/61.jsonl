{"task_id": "HumanEval/61", "completion": "\n```python\ndef correct_bracketing(brackets: str):\n    \"\"\" brackets is a string of \"(\" and \")\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"(\")\n    False\n    >>> correct_bracketing(\"()\")\n    True\n    >>> correct_bracketing(\"(()())\")\n    True\n    >>> correct_bracketing(\")(()\")\n    False\n    \"\"\"\n    # Initialize a variable to keep track of the number of opening brackets.\n    open_brackets = 0\n    # Initialize a variable to keep track of the number of closing brackets.\n    close_brackets = 0\n    # Loop through each character in the string.\n    for char in brackets:\n        # If the character is an opening bracket, increment the number of opening brackets.\n        if char == \"(\":\n            open_brackets += 1\n        # If the character is a closing bracket, increment the number of closing brackets.\n        elif char == \")\":\n            close_brackets += 1\n        # If the number of closing brackets is greater than the number of opening brackets, return False.\n        if close_brackets > open_brackets:\n            return False\n    # If the number of opening brackets is not equal to the number of closing brackets, return False.\n    if open_brackets != close_brackets:\n        return False\n    # If all checks pass, return True.\n    return True\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef correct_bracketing(brackets: str):\n    \"\"\" brackets is a string of \"(\" and \")\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"(\")\n    False\n    >>> correct_bracketing(\"()\")\n    True\n    >>> correct_bracketing(\"(()())\")\n    True\n    >>> correct_bracketing(\")(()\")\n    False\n    \"\"\"\n```\n\n### Response:\n```python\ndef correct_bracketing(brackets: str):\n    \"\"\" brackets is a string of \"(\" and \")\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"(\")\n    False\n    >>> correct_bracketing(\"()\")\n    True\n    >>> correct_bracketing(\"(()())\")\n    True\n    >>> correct_bracketing(\")(()\")\n    False\n    \"\"\"\n    # Initialize a variable to keep track of the number of opening brackets.\n    open_brackets = 0\n    # Initialize a variable to keep track of the number of closing brackets.\n    close_brackets = 0\n    # Loop through each character in the string.\n    for char in brackets:\n        # If the character is an opening bracket, increment the number of opening brackets.\n        if char == \"(\":\n            open_brackets += 1\n        # If the character is a closing bracket, increment the number of closing brackets.\n        elif char == \")\":\n            close_brackets += 1\n        # If the number of closing brackets is greater than the number of opening brackets, return False.\n        if close_brackets > open_brackets:\n            return False\n    # If the number of opening brackets is not equal to the number of closing brackets, return False.\n    if open_brackets != close_brackets:\n        return False\n    # If all checks pass, return True.\n    return True\n```\n"}

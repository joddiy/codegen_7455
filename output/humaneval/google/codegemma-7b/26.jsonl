{"task_id": "HumanEval/26", "completion": "\n```python\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\n    # Create a dictionary to store the count of each element\n    counts = {}\n    # Iterate over the input list\n    for num in numbers:\n        # If the element is already in the dictionary, increment its count\n        if num in counts:\n            counts[num] += 1\n        # Otherwise, add it to the dictionary with a count of 1\n        else:\n            counts[num] = 1\n    # Create a new list to store the unique elements\n    unique_numbers = []\n    # Iterate over the input list again\n    for num in numbers:\n        # If the element has a count of 1, add it to the new list\n        if counts[num] == 1:\n            unique_numbers.append(num)\n    # Return the new list\n    return unique_numbers\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\n```\n\n### Response:\n```python\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\n    # Create a dictionary to store the count of each element\n    counts = {}\n    # Iterate over the input list\n    for num in numbers:\n        # If the element is already in the dictionary, increment its count\n        if num in counts:\n            counts[num] += 1\n        # Otherwise, add it to the dictionary with a count of 1\n        else:\n            counts[num] = 1\n    # Create a new list to store the unique elements\n    unique_numbers = []\n    # Iterate over the input list again\n    for num in numbers:\n        # If the element has a count of 1, add it to the new list\n        if counts[num] == 1:\n            unique_numbers.append(num)\n    # Return the new list\n    return unique_numbers\n```\n"}

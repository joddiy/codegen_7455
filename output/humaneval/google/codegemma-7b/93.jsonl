{"task_id": "HumanEval/93", "completion": "\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Create a dictionary of vowels and their corresponding 2-letter ahead letter\n    vowels = {'a': 'c', 'e': 'g', 'i': 'k', 'o': 'q', 'u': 's', 'y': 'w'}\n    \n    # Initialize an empty string to store the encoded message\n    encoded_message = ''\n    \n    # Iterate through each character in the message\n    for char in message:\n        # Check if the character is a letter\n        if char.isalpha():\n            # Check if the character is a vowel\n            if char.lower() in vowels:\n                # Replace the vowel with the corresponding 2-letter ahead letter\n                encoded_message += vowels[char.lower()]\n            else:\n                # Swap the case of the letter\n                if char.islower():\n                    encoded_message += char.upper()\n                else:\n                    encoded_message += char.lower()\n        else:\n            # If the character is not a letter, leave it as is\n            encoded_message += char\n    \n    # Return the encoded message\n    return encoded_message\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n```\n\n### Response:\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Create a dictionary of vowels and their corresponding 2-letter ahead letter\n    vowels = {'a': 'c', 'e': 'g', 'i': 'k', 'o': 'q', 'u': 's', 'y': 'w'}\n    \n    # Initialize an empty string to store the encoded message\n    encoded_message = ''\n    \n    # Iterate through each character in the message\n    for char in message:\n        # Check if the character is a letter\n        if char.isalpha():\n            # Check if the character is a vowel\n            if char.lower() in vowels:\n                # Replace the vowel with the corresponding 2-letter ahead letter\n                encoded_message += vowels[char.lower()]\n            else:\n                # Swap the case of the letter\n                if char.islower():\n                    encoded_message += char.upper()\n                else:\n                    encoded_message += char.lower()\n        else:\n            # If the character is not a letter, leave it as is\n            encoded_message += char\n    \n    # Return the encoded message\n    return encoded_message\n```\n"}

{"task_id": "HumanEval/36", "completion": "\nHere is the Python script for the problem:\n\n```python\ndef fizz_buzz(n: int) -> int:\n    count = 0\n    for i in range(1, n):\n        if i % 11 == 0 or i % 13 == 0:\n            count += str(i).count('7')\n    return count\n\nprint(fizz_buzz(50))  # Output: 0\nprint(fizz_buzz(78))  # Output: 2\nprint(fizz_buzz(79))  # Output: 3\n```\n\nThis script works by iterating over all integers less than `n`. If the current integer is divisible by 11 or 13, it converts the integer to a string and counts the number of times the digit 7 appears in the string. The count is then added to a running total. Finally, the total count is returned.\n\nPlease note that the function `fizz_buzz(n: int)` is defined to return an integer, so the print statements should also return integers.\n\nAlso, the function `fizz_buzz(n: int)` is defined to return the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13. So, for example, if `n` is 78, it checks numbers less than 78 which are divisible by 11 or 13, and counts the number of times the digit 7 appears in these numbers.\n\nThe function `fizz_buzz(n: int)` is defined to return the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13. So, for example, if `n` is 79, it checks numbers less than 79 which are divisible by 11 or 13, and counts the number of times the digit 7 appears in these numbers.\n\nPlease note that the function `fizz_buzz(n: int)` is defined to return an integer, so the print statements should also return integers.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n```\n\n### Response:\nHere is the Python script for the problem:\n\n```python\ndef fizz_buzz(n: int) -> int:\n    count = 0\n    for i in range(1, n):\n        if i % 11 == 0 or i % 13 == 0:\n            count += str(i).count('7')\n    return count\n\nprint(fizz_buzz(50))  # Output: 0\nprint(fizz_buzz(78))  # Output: 2\nprint(fizz_buzz(79))  # Output: 3\n```\n\nThis script works by iterating over all integers less than `n`. If the current integer is divisible by 11 or 13, it converts the integer to a string and counts the number of times the digit 7 appears in the string. The count is then added to a running total. Finally, the total count is returned.\n\nPlease note that the function `fizz_buzz(n: int)` is defined to return an integer, so the print statements should also return integers.\n\nAlso, the function `fizz_buzz(n: int)` is defined to return the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13. So, for example, if `n` is 78, it checks numbers less than 78 which are divisible by 11 or 13, and counts the number of times the digit 7 appears in these numbers.\n\nThe function `fizz_buzz(n: int)` is defined to return the number of times the digit 7 appears in integers less than `n` which are divisible by 11 or 13. So, for example, if `n` is 79, it checks numbers less than 79 which are divisible by 11 or 13, and counts the number of times the digit 7 appears in these numbers.\n\nPlease note that the function `fizz_buzz(n: int)` is defined to return an integer, so the print statements should also return integers.\n"}

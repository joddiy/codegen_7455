{"task_id": "HumanEval/82", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef prime_length(string):\n    length = len(string)\n    if length < 2:\n        return False\n    for i in range(2, int(length ** 0.5) + 1):\n        if length % i == 0:\n            return False\n    return True\n\nprint(prime_length('Hello'))  # True\nprint(prime_length('abcdcba'))  # True\nprint(prime_length('kittens'))  # True\nprint(prime_length('orange'))  # False\n```\n\nThis script defines a function `prime_length` that takes a string as input. It calculates the length of the string and checks if it is a prime number. If the length is less than 2, it returns False. Then it checks if the length is divisible by any number from 2 to the square root of the length. If it is, it returns False. If it is not divisible by any of these numbers, it returns True, indicating that the length is a prime number.\n\nThe last four lines are test cases that check the function with different strings.\n\nNote: This function assumes that the input is a string. If the input can be a number or a list, additional error checking should be added.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef prime_length(string):\n    \"\"\"Write a function that takes a string and returns True if the string\n    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello') == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') == True\n    prime_length('orange') == False\n    \"\"\"\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef prime_length(string):\n    length = len(string)\n    if length < 2:\n        return False\n    for i in range(2, int(length ** 0.5) + 1):\n        if length % i == 0:\n            return False\n    return True\n\nprint(prime_length('Hello'))  # True\nprint(prime_length('abcdcba'))  # True\nprint(prime_length('kittens'))  # True\nprint(prime_length('orange'))  # False\n```\n\nThis script defines a function `prime_length` that takes a string as input. It calculates the length of the string and checks if it is a prime number. If the length is less than 2, it returns False. Then it checks if the length is divisible by any number from 2 to the square root of the length. If it is, it returns False. If it is not divisible by any of these numbers, it returns True, indicating that the length is a prime number.\n\nThe last four lines are test cases that check the function with different strings.\n\nNote: This function assumes that the input is a string. If the input can be a number or a list, additional error checking should be added.\n"}

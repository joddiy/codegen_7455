{"task_id": "HumanEval/95", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef check_dict_case(d):\n    if not d:\n        return False\n    keys_lower = [k for k in d.keys() if isinstance(k, str) and k.islower()]\n    keys_upper = [k for k in d.keys() if isinstance(k, str) and k.isupper()]\n    return len(keys_lower) == len(d) or len(keys_upper) == len(d)\n\n# Test cases\nprint(check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}))  # True\nprint(check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}))  # False\nprint(check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}))  # False\nprint(check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}))  # False\nprint(check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }))  # True\n```\n\nThis script works by first checking if the dictionary is empty. If it is, the function returns `False`. Then it creates two lists: `keys_lower` and `keys_upper`, which contain the keys of the dictionary that are strings in lower case and upper case, respectively. The function then checks if the length of either `keys_lower` or `keys_upper` is equal to the length of the dictionary. If it is, this means that all keys in the dictionary are either all lower case or all upper case, and the function returns `True`. Otherwise, it returns `False`.\n\nThe test cases at the end of the script demonstrate the function with different inputs.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n    \"\"\"\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef check_dict_case(d):\n    if not d:\n        return False\n    keys_lower = [k for k in d.keys() if isinstance(k, str) and k.islower()]\n    keys_upper = [k for k in d.keys() if isinstance(k, str) and k.isupper()]\n    return len(keys_lower) == len(d) or len(keys_upper) == len(d)\n\n# Test cases\nprint(check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}))  # True\nprint(check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}))  # False\nprint(check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}))  # False\nprint(check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}))  # False\nprint(check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }))  # True\n```\n\nThis script works by first checking if the dictionary is empty. If it is, the function returns `False`. Then it creates two lists: `keys_lower` and `keys_upper`, which contain the keys of the dictionary that are strings in lower case and upper case, respectively. The function then checks if the length of either `keys_lower` or `keys_upper` is equal to the length of the dictionary. If it is, this means that all keys in the dictionary are either all lower case or all upper case, and the function returns `True`. Otherwise, it returns `False`.\n\nThe test cases at the end of the script demonstrate the function with different inputs.\n"}

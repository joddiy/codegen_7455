{"task_id": "HumanEval/103", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n\nprint(rounded_avg(1, 5))  # \"0b11\"\nprint(rounded_avg(7, 5))  # -1\nprint(rounded_avg(10, 20))  # \"0b1111\"\nprint(rounded_avg(20, 33))  # \"0b11010\"\n```\n\nThis script first checks if `n` is greater than `m`. If it is, it returns `-1`. If not, it calculates the average of `n` and `m`, rounds it to the nearest integer, and converts it to binary using Python's built-in `bin` function.\n\nThe `bin` function returns a string that starts with \"0b\" to indicate that it's a binary number, so the output of the script will be a string starting with \"0b\".\n\nThe `round` function is used to round the average to the nearest integer. The `/` operator is used to calculate the average, and the `+` operator is used to add `n` and `m`.\n\nThe script then tests the function with the examples provided in the problem statement.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef rounded_avg(n, m):\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\n    average of the integers from n through m (including n and m). \n    Round the answer to the nearest integer and convert that to binary.\n    If n is greater than m, return -1.\n    Example:\n    rounded_avg(1, 5) => \"0b11\"\n    rounded_avg(7, 5) => -1\n    rounded_avg(10, 20) => \"0b1111\"\n    rounded_avg(20, 33) => \"0b11010\"\n    \"\"\"\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = round((n + m) / 2)\n    return bin(avg)\n\nprint(rounded_avg(1, 5))  # \"0b11\"\nprint(rounded_avg(7, 5))  # -1\nprint(rounded_avg(10, 20))  # \"0b1111\"\nprint(rounded_avg(20, 33))  # \"0b11010\"\n```\n\nThis script first checks if `n` is greater than `m`. If it is, it returns `-1`. If not, it calculates the average of `n` and `m`, rounds it to the nearest integer, and converts it to binary using Python's built-in `bin` function.\n\nThe `bin` function returns a string that starts with \"0b\" to indicate that it's a binary number, so the output of the script will be a string starting with \"0b\".\n\nThe `round` function is used to round the average to the nearest integer. The `/` operator is used to calculate the average, and the `+` operator is used to add `n` and `m`.\n\nThe script then tests the function with the examples provided in the problem statement.\n"}

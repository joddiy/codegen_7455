{"task_id": "HumanEval/13", "completion": "\nHere is a Python solution using the Euclidean algorithm to find the greatest common divisor (GCD) of two numbers:\n\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    while b != 0:\n        a, b = b, a % b\n    return a\n```\n\nThis function works by repeatedly replacing `a` with `b` and `b` with the remainder of `a` divided by `b` until `b` is 0. At that point, `a` is the greatest common divisor of the original `a` and `b`.\n\nYou can test this function with the provided examples:\n\n```python\nprint(greatest_common_divisor(3, 5))  # Output: 1\nprint(greatest_common_divisor(25, 15))  # Output: 5\n```\n\nThis will output `1` and `5` respectively, which are the greatest common divisors of `3` and `5`, and `25` and `15`.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n```\n\n### Response:\nHere is a Python solution using the Euclidean algorithm to find the greatest common divisor (GCD) of two numbers:\n\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    while b != 0:\n        a, b = b, a % b\n    return a\n```\n\nThis function works by repeatedly replacing `a` with `b` and `b` with the remainder of `a` divided by `b` until `b` is 0. At that point, `a` is the greatest common divisor of the original `a` and `b`.\n\nYou can test this function with the provided examples:\n\n```python\nprint(greatest_common_divisor(3, 5))  # Output: 1\nprint(greatest_common_divisor(25, 15))  # Output: 5\n```\n\nThis will output `1` and `5` respectively, which are the greatest common divisors of `3` and `5`, and `25` and `15`.\n"}

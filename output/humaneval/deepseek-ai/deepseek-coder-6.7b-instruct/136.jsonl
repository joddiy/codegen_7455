{"task_id": "HumanEval/136", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef largest_smallest_integers(lst):\n    largest_negative = None\n    smallest_positive = None\n\n    for num in lst:\n        if num < 0 and (largest_negative is None or num > largest_negative):\n            largest_negative = num\n        elif num > 0 and (smallest_positive is None or num < smallest_positive):\n            smallest_positive = num\n\n    return largest_negative, smallest_positive\n\n\n# Test cases\nprint(largest_smallest_integers([2, 4, 1, 3, 5, 7]))  # (None, 1)\nprint(largest_smallest_integers([]))  # (None, None)\nprint(largest_smallest_integers([0]))  # (None, None)\n```\n\nThis script works by iterating over each number in the list. If the number is negative and it's larger than the current largest negative number, it's set as the new largest negative number. If the number is positive and it's smaller than the current smallest positive number, it's set as the new smallest positive number. If no negative or positive numbers are found, the respective variables remain as None. The function then returns these two values as a tuple.\n\nThe test cases at the end of the script demonstrate that the function works as expected.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef largest_smallest_integers(lst):\n    '''\n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a list.\n    If there is no negative or positive integers, return them as None.\n\n    Examples:\n    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n    largest_smallest_integers([]) == (None, None)\n    largest_smallest_integers([0]) == (None, None)\n    '''\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef largest_smallest_integers(lst):\n    largest_negative = None\n    smallest_positive = None\n\n    for num in lst:\n        if num < 0 and (largest_negative is None or num > largest_negative):\n            largest_negative = num\n        elif num > 0 and (smallest_positive is None or num < smallest_positive):\n            smallest_positive = num\n\n    return largest_negative, smallest_positive\n\n\n# Test cases\nprint(largest_smallest_integers([2, 4, 1, 3, 5, 7]))  # (None, 1)\nprint(largest_smallest_integers([]))  # (None, None)\nprint(largest_smallest_integers([0]))  # (None, None)\n```\n\nThis script works by iterating over each number in the list. If the number is negative and it's larger than the current largest negative number, it's set as the new largest negative number. If the number is positive and it's smaller than the current smallest positive number, it's set as the new smallest positive number. If no negative or positive numbers are found, the respective variables remain as None. The function then returns these two values as a tuple.\n\nThe test cases at the end of the script demonstrate that the function works as expected.\n"}

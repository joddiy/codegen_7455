{"task_id": "HumanEval/55", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef fib(n: int):\n    if n <= 0:\n        return \"Input should be positive integer\"\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n\n# Test cases\nprint(fib(10))  # 55\nprint(fib(1))   # 1\nprint(fib(8))   # 21\n```\n\nThis script uses a loop to calculate the n-th Fibonacci number. The loop starts from the third Fibonacci number (1 and 1) and continues until it reaches the n-th Fibonacci number. In each iteration, it updates the two variables `a` and `b` to hold the last two Fibonacci numbers. The n-th Fibonacci number is then returned.\n\nPlease note that the indexing starts from 1, so `fib(1)` returns the first Fibonacci number, `fib(2)` returns the second Fibonacci number, and so on.\n\nAlso, the function checks if the input is a positive integer. If not, it returns an error message.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef fib(n: int):\n    if n <= 0:\n        return \"Input should be positive integer\"\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n\n# Test cases\nprint(fib(10))  # 55\nprint(fib(1))   # 1\nprint(fib(8))   # 21\n```\n\nThis script uses a loop to calculate the n-th Fibonacci number. The loop starts from the third Fibonacci number (1 and 1) and continues until it reaches the n-th Fibonacci number. In each iteration, it updates the two variables `a` and `b` to hold the last two Fibonacci numbers. The n-th Fibonacci number is then returned.\n\nPlease note that the indexing starts from 1, so `fib(1)` returns the first Fibonacci number, `fib(2)` returns the second Fibonacci number, and so on.\n\nAlso, the function checks if the input is a positive integer. If not, it returns an error message.\n"}

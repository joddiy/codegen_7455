{"task_id": "HumanEval/93", "completion": "\nHere is a Python solution for the problem:\n\n```python\ndef encode(message):\n    vowels = 'aeiou'\n    encoded_message = ''\n    for char in message:\n        if char.isalpha():\n            if char.lower() in vowels:\n                encoded_char = chr((ord(char) + 2) % 26 + ord('A') if char.isupper() else chr((ord(char) + 2) % 26 + ord('a')))\n            else:\n                encoded_char = chr((ord(char) - 32) % 26 + ord('A') if char.isupper() else chr((ord(char) - 32) % 26 + ord('a')))\n            encoded_message += encoded_char\n        else:\n            encoded_message += char\n    return encoded_message\n```\n\nThis script works by iterating over each character in the input message. If the character is a letter, it checks if it is a vowel. If it is, it replaces it with the letter that appears 2 places ahead of it in the English alphabet (wrapping around to the start of the alphabet if necessary). If it is not a vowel, it swaps the case of the letter. If the character is not a letter, it is added to the encoded message as is.\n\nThe `ord` function is used to get the ASCII value of a character, and the `chr` function is used to get the character that corresponds to a specific ASCII value. The `% 26` operation is used to wrap around to the start of the alphabet if necessary. The `+ ord('A')` or `+ ord('a')` operation is used to shift the ASCII value of the character to the correct case.\n\nThe `isalpha` method is used to check if a character is a letter. If it is not a letter, it is added to the encoded message as is.\n\nThe `isupper` method is used to check if a character is uppercase. If it is, the ASCII value of 'A' is added to the ASCII value of the character, otherwise the ASCII value of 'a' is added.\n\nThe encoded message is returned as the result.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n```\n\n### Response:\nHere is a Python solution for the problem:\n\n```python\ndef encode(message):\n    vowels = 'aeiou'\n    encoded_message = ''\n    for char in message:\n        if char.isalpha():\n            if char.lower() in vowels:\n                encoded_char = chr((ord(char) + 2) % 26 + ord('A') if char.isupper() else chr((ord(char) + 2) % 26 + ord('a')))\n            else:\n                encoded_char = chr((ord(char) - 32) % 26 + ord('A') if char.isupper() else chr((ord(char) - 32) % 26 + ord('a')))\n            encoded_message += encoded_char\n        else:\n            encoded_message += char\n    return encoded_message\n```\n\nThis script works by iterating over each character in the input message. If the character is a letter, it checks if it is a vowel. If it is, it replaces it with the letter that appears 2 places ahead of it in the English alphabet (wrapping around to the start of the alphabet if necessary). If it is not a vowel, it swaps the case of the letter. If the character is not a letter, it is added to the encoded message as is.\n\nThe `ord` function is used to get the ASCII value of a character, and the `chr` function is used to get the character that corresponds to a specific ASCII value. The `% 26` operation is used to wrap around to the start of the alphabet if necessary. The `+ ord('A')` or `+ ord('a')` operation is used to shift the ASCII value of the character to the correct case.\n\nThe `isalpha` method is used to check if a character is a letter. If it is not a letter, it is added to the encoded message as is.\n\nThe `isupper` method is used to check if a character is uppercase. If it is, the ASCII value of 'A' is added to the ASCII value of the character, otherwise the ASCII value of 'a' is added.\n\nThe encoded message is returned as the result.\n"}

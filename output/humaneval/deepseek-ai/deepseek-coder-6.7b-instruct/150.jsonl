{"task_id": "HumanEval/150", "completion": "\nHere is a Python script that solves the problem:\n\n```python\ndef is_prime(n):\n    \"\"\"Check if a number is prime.\"\"\"\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef x_or_y(n, x, y):\n    \"\"\"Return the value of x if n is a prime number, otherwise return the value of y.\"\"\"\n    return x if is_prime(n) else y\n```\n\nThe `is_prime` function checks if a number is prime. It returns `False` if the number is less than or equal to 1, `True` if the number is less than or equal to 3, and `False` if the number is divisible by 2 or 3. If none of these conditions are met, it checks if the number is divisible by any number in the range from 5 to the square root of the number. If it is divisible, it returns `False`. If it is not divisible by any of these numbers, it returns `True`.\n\nThe `x_or_y` function uses the `is_prime` function to check if `n` is prime. If it is, it returns `x`. Otherwise, it returns `y`.\n\nYou can test the function with the following code:\n\n```python\nprint(x_or_y(7, 34, 12))  # Output: 34\nprint(x_or_y(15, 8, 5))   # Output: 5\n```\n\nThis will print `34` and `5` respectively, which are the expected outputs.\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef x_or_y(n, x, y):\n    \"\"\"A simple program which should return the value of x if n is \n    a prime number and should return the value of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\"\n```\n\n### Response:\nHere is a Python script that solves the problem:\n\n```python\ndef is_prime(n):\n    \"\"\"Check if a number is prime.\"\"\"\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef x_or_y(n, x, y):\n    \"\"\"Return the value of x if n is a prime number, otherwise return the value of y.\"\"\"\n    return x if is_prime(n) else y\n```\n\nThe `is_prime` function checks if a number is prime. It returns `False` if the number is less than or equal to 1, `True` if the number is less than or equal to 3, and `False` if the number is divisible by 2 or 3. If none of these conditions are met, it checks if the number is divisible by any number in the range from 5 to the square root of the number. If it is divisible, it returns `False`. If it is not divisible by any of these numbers, it returns `True`.\n\nThe `x_or_y` function uses the `is_prime` function to check if `n` is prime. If it is, it returns `x`. Otherwise, it returns `y`.\n\nYou can test the function with the following code:\n\n```python\nprint(x_or_y(7, 34, 12))  # Output: 34\nprint(x_or_y(15, 8, 5))   # Output: 5\n```\n\nThis will print `34` and `5` respectively, which are the expected outputs.\n"}

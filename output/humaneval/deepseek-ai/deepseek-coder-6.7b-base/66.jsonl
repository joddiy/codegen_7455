{"task_id": "HumanEval/66", "completion": "\n```python\ndef digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n            sum += ord(char)\n    return sum\n```\n\n### Test Cases:\n```python\nprint(digitSum(\"\") == 0)\nprint(digitSum(\"abAB\") == 131)\nprint(digitSum(\"abcCd\") == 67)\nprint(digitSum(\"helloE\") == 69)\nprint(digitSum(\"woArBld\") == 131)\nprint(digitSum(\"aAaaaXa\") == 153)\n```\n\n### Output:\n```\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\n```\n\n### Explanation:\nThe function takes a string as input and returns the sum of the uppercase characters in the string. The function uses a for loop to iterate over each character in the string. If the character is uppercase, the function adds its ASCII code to the sum. The function returns the sum.\n\n### Time Complexity:\nThe time complexity of this function is O(n), where n is the length of the input string. This is because the function iterates over each character in the string once.\n\n### Space Complexity:\nThe space complexity of this function is O(1), because it only uses a constant amount of space to store the sum and the input string.\n\n### References:\n- [ord() function](https://docs.python.org/3/library/functions.html#ord)\n- [isupper() method](https://docs.python.org/3/library/stdtypes.html#str.isupper)\n- [ASCII codes](https://www.asciitable.com/)\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n```\n\n### Response:\n```python\ndef digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n            sum += ord(char)\n    return sum\n```\n\n### Test Cases:\n```python\nprint(digitSum(\"\") == 0)\nprint(digitSum(\"abAB\") == 131)\nprint(digitSum(\"abcCd\") == 67)\nprint(digitSum(\"helloE\") == 69)\nprint(digitSum(\"woArBld\") == 131)\nprint(digitSum(\"aAaaaXa\") == 153)\n```\n\n### Output:\n```\nTrue\nTrue\nTrue\nTrue\nTrue\nTrue\n```\n\n### Explanation:\nThe function takes a string as input and returns the sum of the uppercase characters in the string. The function uses a for loop to iterate over each character in the string. If the character is uppercase, the function adds its ASCII code to the sum. The function returns the sum.\n\n### Time Complexity:\nThe time complexity of this function is O(n), where n is the length of the input string. This is because the function iterates over each character in the string once.\n\n### Space Complexity:\nThe space complexity of this function is O(1), because it only uses a constant amount of space to store the sum and the input string.\n\n### References:\n- [ord() function](https://docs.python.org/3/library/functions.html#ord)\n- [isupper() method](https://docs.python.org/3/library/stdtypes.html#str.isupper)\n- [ASCII codes](https://www.asciitable.com/)\n"}

{"task_id": "HumanEval/93", "completion": "\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    \n    vowels = ['a', 'e', 'i', 'o', 'u']\n    \n    encoded_message = ''\n    \n    for letter in message:\n        if letter.isupper():\n            encoded_message += letter.lower()\n        else:\n            encoded_message += letter.upper()\n    \n    for vowel in vowels:\n        encoded_message = encoded_message.replace(vowel, chr(ord(vowel) + 2))\n    \n    return encoded_message\n```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n```\n\n### Response:\n```python\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    \n    vowels = ['a', 'e', 'i', 'o', 'u']\n    \n    encoded_message = ''\n    \n    for letter in message:\n        if letter.isupper():\n            encoded_message += letter.lower()\n        else:\n            encoded_message += letter.upper()\n    \n    for vowel in vowels:\n        encoded_message = encoded_message.replace(vowel, chr(ord(vowel) + 2))\n    \n    return encoded_message\n```\n"}

{"task_id": "HumanEval/85", "completion": "\n```python\ndef add(lst):\n    \"\"\"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n    \"\"\"\n    total = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n            total += lst[i]\n    return total\n```\n\n### Test Cases:\n```python\nassert add([4, 2, 6, 7]) == 2\nassert add([1, 2, 3, 4]) == 4\nassert add([1, 2, 3, 4, 5]) == 6\nassert add([1, 2, 3, 4, 5, 6]) == 12\nassert add([1, 2, 3, 4, 5, 6, 7]) == 12\nassert add([1, 2, 3, 4, 5, 6, 7, 8]) == 16\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 20\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 30\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == 30\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 42\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == 42\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == 56\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) == 56\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]) == 70\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]) == 70\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]) == 84\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 84\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef add(lst):\n    \"\"\"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n    \"\"\"\n```\n\n### Response:\n```python\ndef add(lst):\n    \"\"\"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n    \"\"\"\n    total = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n            total += lst[i]\n    return total\n```\n\n### Test Cases:\n```python\nassert add([4, 2, 6, 7]) == 2\nassert add([1, 2, 3, 4]) == 4\nassert add([1, 2, 3, 4, 5]) == 6\nassert add([1, 2, 3, 4, 5, 6]) == 12\nassert add([1, 2, 3, 4, 5, 6, 7]) == 12\nassert add([1, 2, 3, 4, 5, 6, 7, 8]) == 16\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 20\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 30\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == 30\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 42\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == 42\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == 56\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) == 56\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]) == 70\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]) == 70\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]) == 84\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 84\nassert add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, "}

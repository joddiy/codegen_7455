{"task_id": "HumanEval/88", "completion": "\n```python\ndef sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    new_array = array[:]\n    sum_of_first_and_last_index = array[0] + array[-1]\n    if sum_of_first_and_last_index % 2 == 0:\n        new_array.sort(reverse=True)\n    else:\n        new_array.sort()\n    return new_array\n```\n\n### Test Cases:\n```python\ndef test_sort_array():\n    assert sort_array([]) == []\n    assert sort_array([5]) == [5]\n    assert sort_array([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert sort_array([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n```\n\n### Test Results:\n```python\ndef test_sort_array():\n    assert sort_array([]) == []\n    assert sort_array([5]) == [5]\n    assert sort_array([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert sort_array([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n\n\ntest_sort_array()\n```\n\n### Output:\n```python\ntest_sort_array()\n```\n\n### Explanation:\nThe function `sort_array` takes an array as input and returns a new array sorted in ascending order if the sum of the first and last elements of the input array is odd, and in descending order if the sum is even. The function does not modify the input array.\n\nThe function uses the `sort` method of the list data type to sort the new array in ascending order if the sum of the first and last elements is odd, and in descending order if the sum is even. The `sort` method sorts the list in place, so the original array is not modified.\n\nThe function uses the `[:]` syntax to create a copy of the input array. This is", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n### Instruction:\nCreate a Python script for this problem:\nWrite a solution to the following problem:\n```python\ndef sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n```\n\n### Response:\n```python\ndef sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    new_array = array[:]\n    sum_of_first_and_last_index = array[0] + array[-1]\n    if sum_of_first_and_last_index % 2 == 0:\n        new_array.sort(reverse=True)\n    else:\n        new_array.sort()\n    return new_array\n```\n\n### Test Cases:\n```python\ndef test_sort_array():\n    assert sort_array([]) == []\n    assert sort_array([5]) == [5]\n    assert sort_array([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert sort_array([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n```\n\n### Test Results:\n```python\ndef test_sort_array():\n    assert sort_array([]) == []\n    assert sort_array([5]) == [5]\n    assert sort_array([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert sort_array([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n\n\ntest_sort_array()\n```\n\n### Output:\n```python\ntest_sort_array()\n```\n\n### Explanation:\nThe function `sort_array` takes an array as input and returns a new array sorted in ascending order if the sum of the first and last elements of the input array is odd, and in descending order if the sum is even. The function does not modify the input array.\n\nThe function uses the `sort` method of the list data type to sort the new array in ascending order if the sum of the first and last elements is odd, and in descending order if the sum is even. The `sort` method sorts the list in place, so the original array is not modified.\n\nThe function uses the `[:]` syntax to create a copy of the input array. This is"}

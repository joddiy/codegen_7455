{"task_id": "HumanEval/17", "completion": "\n```python\nfrom typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    notes = music_string.split()\n    parsed_music = []\n    for note in notes:\n        if note == 'o':\n            parsed_music.append(4)\n        elif note == 'o|':\n            parsed_music.append(2)\n        elif note == '.|':\n            parsed_music.append(1)\n    return parsed_music\n```\n\nThe `parse_music` function takes a string `music_string` as input and splits it into individual notes. It then iterates through each note, appending the corresponding number of beats to the `parsed_music` list. Finally, it returns the list of integers representing the duration of each note in beats.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"\n```\n\n    ### Response:\n```python\nfrom typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    notes = music_string.split()\n    parsed_music = []\n    for note in notes:\n        if note == 'o':\n            parsed_music.append(4)\n        elif note == 'o|':\n            parsed_music.append(2)\n        elif note == '.|':\n            parsed_music.append(1)\n    return parsed_music\n```\n\nThe `parse_music` function takes a string `music_string` as input and splits it into individual notes. It then iterates through each note, appending the corresponding number of beats to the `parsed_music` list. Finally, it returns the list of integers representing the duration of each note in beats."}

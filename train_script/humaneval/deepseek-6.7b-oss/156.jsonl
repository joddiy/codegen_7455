{"task_id": "HumanEval/156", "completion": "\n```python\ndef int_to_mini_roman(number):\n    \"\"\"\n    Given a positive integer, obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19) == 'xix'\n    >>> int_to_mini_roman(152) == 'clii'\n    >>> int_to_mini_roman(426) == 'cdxxvi'\n    \"\"\"\n    roman_numerals = {\n        1: 'i', 4: 'iv', 5: 'v', 9: 'ix',\n        10: 'x', 40: 'xl', 50: 'l', 90: 'xc',\n        100: 'c', 400: 'cd', 500: 'd', 900: 'cm',\n        1000: 'm'\n    }\n    result = ''\n    for value in sorted(roman_numerals.keys(), reverse=True):\n        while number >= value:\n            result += roman_numerals[value]\n            number -= value\n    return result.lower()\n```\n\nThe `int_to_mini_roman` function takes a positive integer `number` as input and returns its roman numeral equivalent as a string in lowercase. It uses a dictionary `roman_numerals` to map integer values to their corresponding roman numeral representations. The function iterates through the keys of the dictionary in descending order and appends the appropriate roman numeral to the result string while subtracting the corresponding value from the input number. Finally, it returns the resulting string in lowercase.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef int_to_mini_roman(number):\n    \"\"\"\n    Given a positive integer, obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19) == 'xix'\n    >>> int_to_mini_roman(152) == 'clii'\n    >>> int_to_mini_roman(426) == 'cdxxvi'\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef int_to_mini_roman(number):\n    \"\"\"\n    Given a positive integer, obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19) == 'xix'\n    >>> int_to_mini_roman(152) == 'clii'\n    >>> int_to_mini_roman(426) == 'cdxxvi'\n    \"\"\"\n    roman_numerals = {\n        1: 'i', 4: 'iv', 5: 'v', 9: 'ix',\n        10: 'x', 40: 'xl', 50: 'l', 90: 'xc',\n        100: 'c', 400: 'cd', 500: 'd', 900: 'cm',\n        1000: 'm'\n    }\n    result = ''\n    for value in sorted(roman_numerals.keys(), reverse=True):\n        while number >= value:\n            result += roman_numerals[value]\n            number -= value\n    return result.lower()\n```\n\nThe `int_to_mini_roman` function takes a positive integer `number` as input and returns its roman numeral equivalent as a string in lowercase. It uses a dictionary `roman_numerals` to map integer values to their corresponding roman numeral representations. The function iterates through the keys of the dictionary in descending order and appends the appropriate roman numeral to the result string while subtracting the corresponding value from the input number. Finally, it returns the resulting string in lowercase."}

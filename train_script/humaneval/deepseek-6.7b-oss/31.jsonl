{"task_id": "HumanEval/31", "completion": "\n```python\ndef is_prime(n):\n    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n```\n\nThe provided solution defines a function `is_prime` that takes a number `n` as input and returns `True` if the number is prime and `False` otherwise. It first checks if the number is less than or equal to 1, in which case it returns `False`. Then, it iterates through the numbers from 2 to the square root of `n` and checks if any of them divides `n` evenly. If it finds such a divisor, it returns `False`, indicating that the number is not prime. If no such divisor is found, it returns `True`, indicating that the number is prime.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef is_prime(n):\n    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef is_prime(n):\n    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n```\n\nThe provided solution defines a function `is_prime` that takes a number `n` as input and returns `True` if the number is prime and `False` otherwise. It first checks if the number is less than or equal to 1, in which case it returns `False`. Then, it iterates through the numbers from 2 to the square root of `n` and checks if any of them divides `n` evenly. If it finds such a divisor, it returns `False`, indicating that the number is not prime. If no such divisor is found, it returns `True`, indicating that the number is prime."}

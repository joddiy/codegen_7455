{"task_id": "HumanEval/18", "completion": "\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    start = 0\n    while True:\n        start = string.find(substring, start)\n        if start == -1:\n            break\n        count += 1\n        start += 1\n    return count\n```\n\nThe solution defines a function `how_many_times` that takes two string arguments: `string` and `substring`. It initializes a count variable to 0 and a start variable to 0. It then enters a while loop that uses the `find` method to find the next occurrence of the substring in the string. If the substring is found, the count is incremented, and the start index is updated to search for the next occurrence after the current one. If no more occurrences are found, the loop breaks, and the final count is returned.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    start = 0\n    while True:\n        start = string.find(substring, start)\n        if start == -1:\n            break\n        count += 1\n        start += 1\n    return count\n```\n\nThe solution defines a function `how_many_times` that takes two string arguments: `string` and `substring`. It initializes a count variable to 0 and a start variable to 0. It then enters a while loop that uses the `find` method to find the next occurrence of the substring in the string. If the substring is found, the count is incremented, and the start index is updated to search for the next occurrence after the current one. If no more occurrences are found, the loop breaks, and the final count is returned."}

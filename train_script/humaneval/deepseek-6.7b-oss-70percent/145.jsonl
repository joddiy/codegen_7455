{"task_id": "HumanEval/145", "completion": "\n```python\ndef order_by_points(nums):\n    def sum_of_digits(num):\n        return sum(int(digit) for digit in str(abs(num)))\n\n    return sorted(nums, key=lambda num: (sum_of_digits(num), nums.index(num)))\n```\n\nThe `order_by_points` function first defines a helper function `sum_of_digits` to calculate the sum of digits of a number. Then, it uses the `sorted` function with a custom key function to sort the list of numbers based on the sum of their digits and their index in the original list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef order_by_points(nums):\n    def sum_of_digits(num):\n        return sum(int(digit) for digit in str(abs(num)))\n\n    return sorted(nums, key=lambda num: (sum_of_digits(num), nums.index(num)))\n```\n\nThe `order_by_points` function first defines a helper function `sum_of_digits` to calculate the sum of digits of a number. Then, it uses the `sorted` function with a custom key function to sort the list of numbers based on the sum of their digits and their index in the original list."}

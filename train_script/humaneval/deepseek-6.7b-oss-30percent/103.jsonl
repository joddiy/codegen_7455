{"task_id": "HumanEval/103", "completion": "\n```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    else:\n        avg = (n + m) / 2\n        rounded_avg = round(avg)\n        binary_avg = bin(rounded_avg)\n        return binary_avg\n```\nThe `rounded_avg` function first checks if `n` is greater than `m`. If so, it returns -1. Otherwise, it calculates the average of the integers from `n` through `m`, rounds it to the nearest integer, converts it to binary, and returns the result.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef rounded_avg(n, m):\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\n    average of the integers from n through m (including n and m). \n    Round the answer to the nearest integer and convert that to binary.\n    If n is greater than m, return -1.\n    Example:\n    rounded_avg(1, 5) => \"0b11\"\n    rounded_avg(7, 5) => -1\n    rounded_avg(10, 20) => \"0b1111\"\n    rounded_avg(20, 33) => \"0b11010\"\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef rounded_avg(n, m):\n    if n > m:\n        return -1\n    else:\n        avg = (n + m) / 2\n        rounded_avg = round(avg)\n        binary_avg = bin(rounded_avg)\n        return binary_avg\n```\nThe `rounded_avg` function first checks if `n` is greater than `m`. If so, it returns -1. Otherwise, it calculates the average of the integers from `n` through `m`, rounds it to the nearest integer, converts it to binary, and returns the result."}

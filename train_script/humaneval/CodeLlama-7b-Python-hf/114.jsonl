{"task_id": "HumanEval/114", "completion": "\n    ```python\n    def minSubArraySum(nums):\n        \"\"\"\n        Given an array of integers nums, find the minimum sum of any non-empty sub-array\n        of nums.\n        Example\n        minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n        minSubArraySum([-1, -2, -3]) == -6\n        \"\"\"\n        min_sum = float('inf')\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                min_sum = min(min_sum, sum(nums[i:j+1]))\n        return min_sum\n    ```\n\n    ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n```\n\n    ### Response:\n    ```python\n    def minSubArraySum(nums):\n        \"\"\"\n        Given an array of integers nums, find the minimum sum of any non-empty sub-array\n        of nums.\n        Example\n        minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n        minSubArraySum([-1, -2, -3]) == -6\n        \"\"\"\n        min_sum = float('inf')\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                min_sum = min(min_sum, sum(nums[i:j+1]))\n        return min_sum\n    ```\n\n    ### Response:\n    ```python\n    def minSubArraySum(nums):\n        \"\"\"\n        Given an array of integers nums, find the minimum sum of any non-empty sub-array\n        of nums.\n        Example\n        minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n        minSubArraySum([-1, -2, -3]) == -6\n        \"\"\"\n        min_sum = float('inf')\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                min_sum = min(min_sum, sum(nums[i:j+1]))\n        return min_sum\n    ```\n\n    ### Response:\n    ```python\n    def minSubArraySum(nums):\n        \"\"\"\n        Given an array of integers nums, find the minimum sum of any non-empty sub-array\n        of nums.\n        Example\n        minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n        minSubArraySum([-1, -2, -3]) == -6\n        \"\"\"\n        min_sum = float('inf')\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                min_sum = min(min_sum, sum(nums[i:j+1]))\n        return min_sum\n    ```\n\n    ### Response:\n    ```python\n    def minSubArraySum(nums):\n        \"\"\"\n        Given an array of integers nums, find the minimum sum of any non-empty sub-array\n        of nums.\n        Example\n        minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n        minSubArraySum([-1, -2, -3]) == -6\n        \"\"\"\n        min_sum = float('inf')\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                min_sum = min(min_sum, sum(nums[i:j+1]))\n        return min_sum\n    ```\n\n    ### Response:\n    ```python\n    def minSubArraySum(nums):\n        \"\"\"\n        Given an array of integers nums, find the minimum sum of any non-empty sub-array\n        of nums.\n        Example\n        minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n        minSubArraySum([-1, -2, -3]) == -6\n        \"\"\""}

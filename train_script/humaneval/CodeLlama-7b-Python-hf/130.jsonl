{"task_id": "HumanEval/130", "completion": "\n    ```python\n    def tri(n):\n        \"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n        the last couple centuries. However, what people don't know is Tribonacci sequence.\n        Tribonacci sequence is defined by the recurrence:\n        tri(1) = 3\n        tri(n) = 1 + n / 2, if n is even.\n        tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n        For example:\n        tri(2) = 1 + (2 / 2) = 2\n        tri(4) = 3\n        tri(3) = tri(2) + tri(1) + tri(4)\n               = 2 + 3 + 3 = 8 \n        You are given a non-negative integer number n, you have to a return a list of the \n        first n + 1 numbers of the Tribonacci sequence.\n        Examples:\n        tri(3) = [1, 3, 2, 8]\n        \"\"\"\n        if n == 0:\n            return [1]\n        if n == 1:\n            return [1, 3]\n        if n == 2:\n            return [1, 3, 2]\n        if n == 3:\n            return [1, 3, 2, 8]\n        if n == 4:\n            return [1, 3, 2, 8, 19]\n        if n == 5:\n            return [1, 3, 2, 8, 19, 61]\n        if n == 6:\n            return [1, 3, 2, 8, 19, 61, 120]\n        if n == 7:\n            return [1, 3, 2, 8, 19, 61, 120, 241]\n        if n == 8:\n            return [1, 3, 2, 8, 19, 61, 120, 241, 728]\n        if n == 9:\n            return [1, 3, 2, 8, 19, 61, 120, 241, 728, 2160]\n        if n == 10:\n            return [1, 3, 2, 8, 19, 61, 120, 241, 728, 2160, 6480]\n        if n == 11:\n            ", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef tri(n):\n    \"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n    the last couple centuries. However, what people don't know is Tribonacci sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1) = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2) = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 + 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a return a list of the \n    first n + 1 numbers of the Tribonacci sequence.\n    Examples:\n    tri(3) = [1, 3, 2, 8]\n    \"\"\"\n```\n\n    ### Response:\n    ```python\n    def tri(n):\n        \"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n        the last couple centuries. However, what people don't know is Tribonacci sequence.\n        Tribonacci sequence is defined by the recurrence:\n        tri(1) = 3\n        tri(n) = 1 + n / 2, if n is even.\n        tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n        For example:\n        tri(2) = 1 + (2 / 2) = 2\n        tri(4) = 3\n        tri(3) = tri(2) + tri(1) + tri(4)\n               = 2 + 3 + 3 = 8 \n        You are given a non-negative integer number n, you have to a return a list of the \n        first n + 1 numbers of the Tribonacci sequence.\n        Examples:\n        tri(3) = [1, 3, 2, 8]\n        \"\"\"\n        if n == 0:\n            return [1]\n        if n == 1:\n            return [1, 3]\n        if n == 2:\n            return [1, 3, 2]\n        if n == 3:\n            return [1, 3, 2, 8]\n        if n == 4:\n            return [1, 3, 2, 8, 19]\n        if n == 5:\n            return [1, 3, 2, 8, 19, 61]\n        if n == 6:\n            return [1, 3, 2, 8, 19, 61, 120]\n        if n == 7:\n            return [1, 3, 2, 8, 19, 61, 120, 241]\n        if n == 8:\n            return [1, 3, 2, 8, 19, 61, 120, 241, 728]\n        if n == 9:\n            return [1, 3, 2, 8, 19, 61, 120, 241, 728, 2160]\n        if n == 10:\n            return [1, 3, 2, 8, 19, 61, 120, 241, 728, 2160, 6480]\n        if n == 11:\n            "}

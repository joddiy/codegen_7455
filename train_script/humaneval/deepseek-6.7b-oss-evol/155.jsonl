{"task_id": "HumanEval/155", "completion": "\n```python\ndef even_odd_count(num):\n    num = abs(num)  # convert to positive number\n    even_count = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))  # ==> (1, 1)\nprint(even_odd_count(123))  # ==> (1, 2)\n```\n\nIn this script, we first convert the number to its absolute value (to handle negative numbers), then we iterate over each digit in the number. If the digit is even, we increment the even_count, otherwise we increment the odd_count. Finally, we return a tuple with the counts of even and odd digits.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef even_odd_count(num):\n    num = abs(num)  # convert to positive number\n    even_count = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))  # ==> (1, 1)\nprint(even_odd_count(123))  # ==> (1, 2)\n```\n\nIn this script, we first convert the number to its absolute value (to handle negative numbers), then we iterate over each digit in the number. If the digit is even, we increment the even_count, otherwise we increment the odd_count. Finally, we return a tuple with the counts of even and odd digits."}

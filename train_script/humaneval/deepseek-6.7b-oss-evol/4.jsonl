{"task_id": "HumanEval/4", "completion": "\n```python\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    mean = sum(numbers) / len(numbers)\n    deviations = [abs(num - mean) for num in numbers]\n    mad = sum(deviations) / len(deviations)\n    return mad\n\n\nprint(mean_absolute_deviation([1.0, 2.0, 3.0, 4.0]))\n```\n\nIn this script, we first calculate the mean of the numbers. Then, we calculate the absolute deviation of each number from the mean. Finally, we calculate the mean of these deviations, which is our Mean Absolute Deviation.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n    Mean Absolute Deviation is the average absolute difference between each\n    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n    \"\"\"\n```\n\n    ### Response:\n```python\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    mean = sum(numbers) / len(numbers)\n    deviations = [abs(num - mean) for num in numbers]\n    mad = sum(deviations) / len(deviations)\n    return mad\n\n\nprint(mean_absolute_deviation([1.0, 2.0, 3.0, 4.0]))\n```\n\nIn this script, we first calculate the mean of the numbers. Then, we calculate the absolute deviation of each number from the mean. Finally, we calculate the mean of these deviations, which is our Mean Absolute Deviation."}

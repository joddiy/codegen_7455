{"task_id": "HumanEval/79", "completion": "\n```python\ndef decimal_to_binary(decimal):\n    binary = bin(decimal)[2:]\n    return 'db' + binary + 'db'\n\nprint(decimal_to_binary(15))   # returns \"db1111db\"\nprint(decimal_to_binary(32))   # returns \"db100000db\"\n```\n\nThe function `decimal_to_binary` takes an integer `decimal` as input and converts it to binary using the built-in `bin` function in Python. The `[2:]` slice operation is used to remove the '0b' prefix that `bin` adds to the start of the binary string. The function then adds the 'db' prefix and suffix to the binary string and returns it.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef decimal_to_binary(decimal):\n    \"\"\"You will be given a number in decimal form and your task is to convert it to\n    binary format. The function should return a string, with each character representing a binary\n    number. Each character in the string will be '0' or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    The extra characters are there to help with the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef decimal_to_binary(decimal):\n    binary = bin(decimal)[2:]\n    return 'db' + binary + 'db'\n\nprint(decimal_to_binary(15))   # returns \"db1111db\"\nprint(decimal_to_binary(32))   # returns \"db100000db\"\n```\n\nThe function `decimal_to_binary` takes an integer `decimal` as input and converts it to binary using the built-in `bin` function in Python. The `[2:]` slice operation is used to remove the '0b' prefix that `bin` adds to the start of the binary string. The function then adds the 'db' prefix and suffix to the binary string and returns it."}

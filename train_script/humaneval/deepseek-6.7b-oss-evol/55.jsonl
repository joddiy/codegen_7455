{"task_id": "HumanEval/55", "completion": "\n```python\ndef fib(n: int):\n    if n <= 0:\n        return \"Input should be a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```\n\nThe function `fib(n)` calculates the n-th Fibonacci number. The Fibonacci sequence starts with 0 and 1, and each subsequent number is the sum of the previous two. For example, the first few numbers in the sequence are 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, and so on.\n\nThe function uses a loop to calculate the n-th Fibonacci number. If n is less than or equal to 0, the function returns an error message. If n is 1, the function returns 0 (the first Fibonacci number). If n is 2, the function returns 1 (the second Fibonacci number). For n greater than 2, the function initializes two variables a and b to 0 and 1, respectively. It then enters a loop that runs n-2 times. In each iteration of the loop, the function updates a and b to b and a + b, respectively. After the loop, the function returns b, which is the n-th Fibonacci number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef fib(n: int):\n    if n <= 0:\n        return \"Input should be a positive integer.\"\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(2, n):\n            a, b = b, a + b\n        return b\n```\n\nThe function `fib(n)` calculates the n-th Fibonacci number. The Fibonacci sequence starts with 0 and 1, and each subsequent number is the sum of the previous two. For example, the first few numbers in the sequence are 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, and so on.\n\nThe function uses a loop to calculate the n-th Fibonacci number. If n is less than or equal to 0, the function returns an error message. If n is 1, the function returns 0 (the first Fibonacci number). If n is 2, the function returns 1 (the second Fibonacci number). For n greater than 2, the function initializes two variables a and b to 0 and 1, respectively. It then enters a loop that runs n-2 times. In each iteration of the loop, the function updates a and b to b and a + b, respectively. After the loop, the function returns b, which is the n-th Fibonacci number."}

{"task_id": "HumanEval/112", "completion": "\n```python\ndef reverse_delete(s,c):\n    result = ''.join([i for i in s if i not in c])\n    return (result, result == result[::-1])\n```\n\n    ### Test Cases:\n```python\nprint(reverse_delete(\"abcde\", \"ae\")) # should return ('bcd', False)\nprint(reverse_delete(\"abcdef\", \"b\"))  # should return ('acdef', False)\nprint(reverse_delete(\"abcdedcba\", \"ab\")) # should return ('cdedc', True)\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef reverse_delete(s,c):\n    \"\"\"Task\n    We are given two strings s and c, you have to deleted all the characters in s that are equal to any character in c\n    then check if the result string is palindrome.\n    A string is called palindrome if it reads the same backward as forward.\n    You should return a tuple containing the result string and True/False for the check.\n    Example\n    For s = \"abcde\", c = \"ae\", the result should be ('bcd',False)\n    For s = \"abcdef\", c = \"b\"  the result should be ('acdef',False)\n    For s = \"abcdedcba\", c = \"ab\", the result should be ('cdedc',True)\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef reverse_delete(s,c):\n    result = ''.join([i for i in s if i not in c])\n    return (result, result == result[::-1])\n```\n\n    ### Test Cases:\n```python\nprint(reverse_delete(\"abcde\", \"ae\")) # should return ('bcd', False)\nprint(reverse_delete(\"abcdef\", \"b\"))  # should return ('acdef', False)\nprint(reverse_delete(\"abcdedcba\", \"ab\")) # should return ('cdedc', True)\n```"}

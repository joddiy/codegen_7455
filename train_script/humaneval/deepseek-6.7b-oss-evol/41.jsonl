{"task_id": "HumanEval/41", "completion": "\n```python\ndef car_race_collision(n: int) -> int:\n    \"\"\"\n    The number of collisions in a car race is equal to the number of cars in the race.\n    This is because each car in the race will collide with every other car in the race.\n    Therefore, the number of collisions is n * (n - 1) / 2.\n    \"\"\"\n    return n * (n - 1) // 2\n```\n\nThis function takes an integer n as input, representing the number of cars in each direction. It returns the number of collisions that will occur in the car race.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef car_race_collision(n: int):\n    \"\"\"\n    Imagine a road that's a perfectly straight infinitely long line.\n    n cars are driving left to right;  simultaneously, a different set of n cars\n    are driving right to left.   The two sets of cars start out being very far from\n    each other.  All cars move in the same speed.  Two cars are said to collide\n    when a car that's moving left to right hits a car that's moving right to left.\n    However, the cars are infinitely sturdy and strong; as a result, they continue moving\n    in their trajectory as if they did not collide.\n\n    This function outputs the number of such collisions.\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef car_race_collision(n: int) -> int:\n    \"\"\"\n    The number of collisions in a car race is equal to the number of cars in the race.\n    This is because each car in the race will collide with every other car in the race.\n    Therefore, the number of collisions is n * (n - 1) / 2.\n    \"\"\"\n    return n * (n - 1) // 2\n```\n\nThis function takes an integer n as input, representing the number of cars in each direction. It returns the number of collisions that will occur in the car race."}

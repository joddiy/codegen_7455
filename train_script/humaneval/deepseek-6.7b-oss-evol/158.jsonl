{"task_id": "HumanEval/158", "completion": "\n```python\ndef find_max(words):\n    max_unique_chars = 0\n    max_word = \"\"\n    for word in words:\n        unique_chars = len(set(word))\n        if unique_chars > max_unique_chars or (unique_chars == max_unique_chars and word < max_word):\n            max_unique_chars = unique_chars\n            max_word = word\n    return max_word\n```\n\nThe function `find_max` iterates over each word in the list. For each word, it calculates the number of unique characters by converting the word to a set (which automatically removes duplicates) and taking the length of the set. If the number of unique characters is greater than the current maximum, or if it's equal but the word comes before the current maximum word in lexicographical order, it updates the maximum number of unique characters and the word with those characteristics. Finally, it returns the word with the maximum number of unique characters.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef find_max(words):\n    max_unique_chars = 0\n    max_word = \"\"\n    for word in words:\n        unique_chars = len(set(word))\n        if unique_chars > max_unique_chars or (unique_chars == max_unique_chars and word < max_word):\n            max_unique_chars = unique_chars\n            max_word = word\n    return max_word\n```\n\nThe function `find_max` iterates over each word in the list. For each word, it calculates the number of unique characters by converting the word to a set (which automatically removes duplicates) and taking the length of the set. If the number of unique characters is greater than the current maximum, or if it's equal but the word comes before the current maximum word in lexicographical order, it updates the maximum number of unique characters and the word with those characteristics. Finally, it returns the word with the maximum number of unique characters."}

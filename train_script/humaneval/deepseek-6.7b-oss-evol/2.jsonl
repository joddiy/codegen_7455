{"task_id": "HumanEval/2", "completion": "\n```python\ndef truncate_number(number: float) -> float:\n    \"\"\" Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    \"\"\"\n    # Use the modulus operator to get the decimal part of the number\n    decimal_part = number % 1\n    return decimal_part\n```\n\n    ### Testing:\n```python\nprint(truncate_number(3.5))  # Output: 0.5\nprint(truncate_number(10.25))  # Output: 0.25\nprint(truncate_number(7))  # Output: 0.0\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef truncate_number(number: float) -> float:\n    \"\"\" Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    >>> truncate_number(3.5)\n    0.5\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef truncate_number(number: float) -> float:\n    \"\"\" Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    \"\"\"\n    # Use the modulus operator to get the decimal part of the number\n    decimal_part = number % 1\n    return decimal_part\n```\n\n    ### Testing:\n```python\nprint(truncate_number(3.5))  # Output: 0.5\nprint(truncate_number(10.25))  # Output: 0.25\nprint(truncate_number(7))  # Output: 0.0\n```"}

{"task_id": "HumanEval/32", "completion": "\n```python\nimport math\n\ndef poly(xs: list, x: float):\n    \"\"\"\n    Evaluates polynomial with coefficients xs at point x.\n    return xs[0] + xs[1] * x + xs[1] * x^2 + .... xs[n] * x^n\n    \"\"\"\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n\ndef find_zero(xs: list):\n    \"\"\" xs are coefficients of a polynomial.\n    find_zero find x such that poly(x) = 0.\n    find_zero returns only only zero point, even if there are many.\n    Moreover, find_zero only takes list xs having even number of coefficients\n    and largest non zero coefficient as it guarantees\n    a solution.\n    \"\"\"\n    if len(xs) % 2 != 0:\n        raise ValueError(\"List of coefficients must have an even number of elements\")\n\n    largest_coeff = max(abs(coeff) for coeff in xs)\n    if largest_coeff == 0:\n        raise ValueError(\"Largest coefficient must be non-zero\")\n\n    # Use Newton's method to find a zero\n    x = 0.0\n    while True:\n        f = poly(xs, x)\n        if abs(f) < 1e-6:  # tolerance\n            return x\n        df = sum([i * math.pow(x, i - 1) for i, coeff in enumerate(xs)])\n        dx = f / df\n        x -= dx\n```\n\nThis script defines a function `poly` that evaluates a polynomial with coefficients `xs` at a point `x`, and a function `find_zero` that uses Newton's method to find a zero of a polynomial with coefficients `xs`. It checks that the list of coefficients has an even number of elements and that the largest coefficient is non-zero before proceeding with the zero-finding.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\nimport math\n\n\ndef poly(xs: list, x: float):\n    \"\"\"\n    Evaluates polynomial with coefficients xs at point x.\n    return xs[0] + xs[1] * x + xs[1] * x^2 + .... xs[n] * x^n\n    \"\"\"\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n\n\ndef find_zero(xs: list):\n    \"\"\" xs are coefficients of a polynomial.\n    find_zero find x such that poly(x) = 0.\n    find_zero returns only only zero point, even if there are many.\n    Moreover, find_zero only takes list xs having even number of coefficients\n    and largest non zero coefficient as it guarantees\n    a solution.\n    >>> round(find_zero([1, 2]), 2) # f(x) = 1 + 2x\n    -0.5\n    >>> round(find_zero([-6, 11, -6, 1]), 2) # (x - 1) * (x - 2) * (x - 3) = -6 + 11x - 6x^2 + x^3\n    1.0\n    \"\"\"\n```\n\n    ### Response:\n```python\nimport math\n\ndef poly(xs: list, x: float):\n    \"\"\"\n    Evaluates polynomial with coefficients xs at point x.\n    return xs[0] + xs[1] * x + xs[1] * x^2 + .... xs[n] * x^n\n    \"\"\"\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n\ndef find_zero(xs: list):\n    \"\"\" xs are coefficients of a polynomial.\n    find_zero find x such that poly(x) = 0.\n    find_zero returns only only zero point, even if there are many.\n    Moreover, find_zero only takes list xs having even number of coefficients\n    and largest non zero coefficient as it guarantees\n    a solution.\n    \"\"\"\n    if len(xs) % 2 != 0:\n        raise ValueError(\"List of coefficients must have an even number of elements\")\n\n    largest_coeff = max(abs(coeff) for coeff in xs)\n    if largest_coeff == 0:\n        raise ValueError(\"Largest coefficient must be non-zero\")\n\n    # Use Newton's method to find a zero\n    x = 0.0\n    while True:\n        f = poly(xs, x)\n        if abs(f) < 1e-6:  # tolerance\n            return x\n        df = sum([i * math.pow(x, i - 1) for i, coeff in enumerate(xs)])\n        dx = f / df\n        x -= dx\n```\n\nThis script defines a function `poly` that evaluates a polynomial with coefficients `xs` at a point `x`, and a function `find_zero` that uses Newton's method to find a zero of a polynomial with coefficients `xs`. It checks that the list of coefficients has an even number of elements and that the largest coefficient is non-zero before proceeding with the zero-finding."}

{"task_id": "HumanEval/79", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef decimal_to_binary(decimal):\n    binary = bin(decimal)[2:]\n    return 'db' + binary + 'db'\n\nprint(decimal_to_binary(15))   # returns \"db1111db\"\nprint(decimal_to_binary(32))   # returns \"db100000db\"\n```\n\nThis script uses Python's built-in `bin()` function to convert the decimal number to binary. The `[2:]` slice is used to remove the '0b' prefix that `bin()` adds to the binary representation. The 'db' prefix and suffix are then added using string concatenation.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef decimal_to_binary(decimal):\n    \"\"\"You will be given a number in decimal form and your task is to convert it to\n    binary format. The function should return a string, with each character representing a binary\n    number. Each character in the string will be '0' or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    The extra characters are there to help with the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef decimal_to_binary(decimal):\n    binary = bin(decimal)[2:]\n    return 'db' + binary + 'db'\n\nprint(decimal_to_binary(15))   # returns \"db1111db\"\nprint(decimal_to_binary(32))   # returns \"db100000db\"\n```\n\nThis script uses Python's built-in `bin()` function to convert the decimal number to binary. The `[2:]` slice is used to remove the '0b' prefix that `bin()` adds to the binary representation. The 'db' prefix and suffix are then added using string concatenation."}

{"task_id": "HumanEval/90", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef next_smallest(lst):\n    if len(lst) < 2:\n        return None\n    min1, min2 = float('inf'), float('inf')\n    for num in lst:\n        if num < min1:\n            min1, min2 = num, min1\n        elif min1 < num < min2:\n            min2 = num\n    return min2 if min2 != float('inf') else None\n```\n\nThis script works by first checking if the list has less than 2 elements, in which case it returns None. Then it initializes two variables, min1 and min2, to positive infinity. It then iterates through the list, updating min1 and min2 as necessary. If a number is less than min1, it updates min1 and min2. If a number is between min1 and min2 (inclusive), it updates min2. Finally, it returns min2 if it's not equal to positive infinity (which would mean there is no second smallest number), otherwise it returns None.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef next_smallest(lst):\n    \"\"\"\n    You are given a list of integers.\n    Write a function next_smallest() that returns the 2nd smallest element of the list.\n    Return None if there is no such element.\n    \n    next_smallest([1, 2, 3, 4, 5]) == 2\n    next_smallest([5, 1, 4, 3, 2]) == 2\n    next_smallest([]) == None\n    next_smallest([1, 1]) == None\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef next_smallest(lst):\n    if len(lst) < 2:\n        return None\n    min1, min2 = float('inf'), float('inf')\n    for num in lst:\n        if num < min1:\n            min1, min2 = num, min1\n        elif min1 < num < min2:\n            min2 = num\n    return min2 if min2 != float('inf') else None\n```\n\nThis script works by first checking if the list has less than 2 elements, in which case it returns None. Then it initializes two variables, min1 and min2, to positive infinity. It then iterates through the list, updating min1 and min2 as necessary. If a number is less than min1, it updates min1 and min2. If a number is between min1 and min2 (inclusive), it updates min2. Finally, it returns min2 if it's not equal to positive infinity (which would mean there is no second smallest number), otherwise it returns None."}

{"task_id": "HumanEval/145", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n    # Calculate the sum of digits for each number\n    sums = [(i, sum(int(digit) for digit in str(i))) for i in nums]\n\n    # Sort the numbers based on their sum of digits and their original index\n    sums.sort(key=lambda x: (x[1], nums.index(x[0])))\n\n    # Return the sorted list of numbers\n    return [num for _, num in sums]\n```\n\nThis script first calculates the sum of the digits for each number in the input list. It then sorts this list of tuples based on the sum of the digits and the original index of the number in the input list. Finally, it returns the sorted list of numbers.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n    # Calculate the sum of digits for each number\n    sums = [(i, sum(int(digit) for digit in str(i))) for i in nums]\n\n    # Sort the numbers based on their sum of digits and their original index\n    sums.sort(key=lambda x: (x[1], nums.index(x[0])))\n\n    # Return the sorted list of numbers\n    return [num for _, num in sums]\n```\n\nThis script first calculates the sum of the digits for each number in the input list. It then sorts this list of tuples based on the sum of the digits and the original index of the number in the input list. Finally, it returns the sorted list of numbers."}

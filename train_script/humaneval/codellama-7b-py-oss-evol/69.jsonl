{"task_id": "HumanEval/69", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef search(lst):\n    from collections import Counter\n    counter = Counter(lst)\n    for num in sorted(counter.keys(), reverse=True):\n        if num > 0 and counter[num] >= num:\n            return num\n    return -1\n```\n\nThis script first counts the frequency of each number in the list using the Counter class from the collections module. It then iterates through the keys of the counter in reverse order (so that the greatest numbers are processed first), and checks if the number is greater than 0 and its frequency is greater than or equal to the number itself. If such a number is found, it is returned. If no such number is found after checking all numbers, -1 is returned.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef search(lst):\n    '''\n    You are given a non-empty list of positive integers. Return the greatest integer that is greater than \n    zero, and has a frequency greater than or equal to the value of the integer itself. \n    The frequency of an integer is the number of times it appears in the list.\n    If no such a value exist, return -1.\n    Examples:\n        search([4, 1, 2, 2, 3, 1]) == 2\n        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3\n        search([5, 5, 4, 4, 4]) == -1\n    '''\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef search(lst):\n    from collections import Counter\n    counter = Counter(lst)\n    for num in sorted(counter.keys(), reverse=True):\n        if num > 0 and counter[num] >= num:\n            return num\n    return -1\n```\n\nThis script first counts the frequency of each number in the list using the Counter class from the collections module. It then iterates through the keys of the counter in reverse order (so that the greatest numbers are processed first), and checks if the number is greater than 0 and its frequency is greater than or equal to the number itself. If such a number is found, it is returned. If no such number is found after checking all numbers, -1 is returned."}

{"task_id": "HumanEval/154", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef cycpattern_check(a , b):\n    if b in a:\n        return True\n    else:\n        for i in range(len(b)):\n            rotated_b = b[i:] + b[:i]\n            if rotated_b in a:\n                return True\n        return False\n\nprint(cycpattern_check(\"abcd\",\"abd\")) # False\nprint(cycpattern_check(\"hello\",\"ell\")) # True\nprint(cycpattern_check(\"whassup\",\"psus\")) # False\nprint(cycpattern_check(\"abab\",\"baa\")) # True\nprint(cycpattern_check(\"efef\",\"eeff\")) # False\nprint(cycpattern_check(\"himenss\",\"simen\")) # True\n```\n\nThis script works by first checking if the second word is a substring of the first word. If it is, it returns True. If not, it checks all rotations of the second word (by slicing and concatenating the string) to see if any of them are substrings of the first word. If it finds a rotation that is a substring, it returns True. If it doesn't find any rotations that are substrings, it returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef cycpattern_check(a , b):\n    if b in a:\n        return True\n    else:\n        for i in range(len(b)):\n            rotated_b = b[i:] + b[:i]\n            if rotated_b in a:\n                return True\n        return False\n\nprint(cycpattern_check(\"abcd\",\"abd\")) # False\nprint(cycpattern_check(\"hello\",\"ell\")) # True\nprint(cycpattern_check(\"whassup\",\"psus\")) # False\nprint(cycpattern_check(\"abab\",\"baa\")) # True\nprint(cycpattern_check(\"efef\",\"eeff\")) # False\nprint(cycpattern_check(\"himenss\",\"simen\")) # True\n```\n\nThis script works by first checking if the second word is a substring of the first word. If it is, it returns True. If not, it checks all rotations of the second word (by slicing and concatenating the string) to see if any of them are substrings of the first word. If it finds a rotation that is a substring, it returns True. If it doesn't find any rotations that are substrings, it returns False."}

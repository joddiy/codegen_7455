{"task_id": "HumanEval/25", "completion": "\n Here is a Python script that solves the problem:\n\n```python\nfrom typing import List\n\ndef factorize(n: int) -> List[int]:\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n```\n\nThis script works by iterating over all numbers from 2 to the square root of the input number. If the input number is divisible by the current number, it divides the number and adds the number to the list of factors. If the input number is not divisible by the current number, it increments the current number by 1. This process continues until the input number is less than or equal to 1. If the input number is greater than 1 after the loop, it means that the number is prime, so it is added to the list of factors.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\nfrom typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\nfrom typing import List\n\ndef factorize(n: int) -> List[int]:\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n```\n\nThis script works by iterating over all numbers from 2 to the square root of the input number. If the input number is divisible by the current number, it divides the number and adds the number to the list of factors. If the input number is not divisible by the current number, it increments the current number by 1. This process continues until the input number is less than or equal to 1. If the input number is greater than 1 after the loop, it means that the number is prime, so it is added to the list of factors."}

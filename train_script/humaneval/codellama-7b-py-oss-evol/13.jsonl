{"task_id": "HumanEval/13", "completion": "\n Here is a Python script that implements the Euclidean algorithm to find the greatest common divisor (GCD) of two integers:\n\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    while b != 0:\n        a, b = b, a % b\n    return a\n```\n\nThis function works by repeatedly replacing `a` with `b` and `b` with `a % b` until `b` is `0`. At that point, `a` is the greatest common divisor of the original `a` and `b`.\n\nYou can test this function with the examples provided in the docstring:\n\n```python\nprint(greatest_common_divisor(3, 5))  # Output: 1\nprint(greatest_common_divisor(25, 15))  # Output: 5\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that implements the Euclidean algorithm to find the greatest common divisor (GCD) of two integers:\n\n```python\ndef greatest_common_divisor(a: int, b: int) -> int:\n    while b != 0:\n        a, b = b, a % b\n    return a\n```\n\nThis function works by repeatedly replacing `a` with `b` and `b` with `a % b` until `b` is `0`. At that point, `a` is the greatest common divisor of the original `a` and `b`.\n\nYou can test this function with the examples provided in the docstring:\n\n```python\nprint(greatest_common_divisor(3, 5))  # Output: 1\nprint(greatest_common_divisor(25, 15))  # Output: 5\n```"}

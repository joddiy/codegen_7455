{"task_id": "HumanEval/55", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return \"Input should be a positive integer.\"\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b\n```\n\nThis script uses a simple iterative approach to calculate the n-th Fibonacci number. It initializes two variables `a` and `b` to 1, which are the first two Fibonacci numbers. Then it enters a loop that runs `n - 2` times. In each iteration, it updates `a` and `b` to `b` and `a + b` respectively, which are the next two Fibonacci numbers. After the loop, it returns the last calculated Fibonacci number `b`, which is the n-th Fibonacci number.\n\nThe function also checks if the input `n` is less than or equal to 0, in which case it returns an error message. If `n` is 1 or 2, it returns 1, which are the first two Fibonacci numbers.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\"\"\"\n    if n <= 0:\n        return \"Input should be a positive integer.\"\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        a, b = 1, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b\n```\n\nThis script uses a simple iterative approach to calculate the n-th Fibonacci number. It initializes two variables `a` and `b` to 1, which are the first two Fibonacci numbers. Then it enters a loop that runs `n - 2` times. In each iteration, it updates `a` and `b` to `b` and `a + b` respectively, which are the next two Fibonacci numbers. After the loop, it returns the last calculated Fibonacci number `b`, which is the n-th Fibonacci number.\n\nThe function also checks if the input `n` is less than or equal to 0, in which case it returns an error message. If `n` is 1 or 2, it returns 1, which are the first two Fibonacci numbers."}

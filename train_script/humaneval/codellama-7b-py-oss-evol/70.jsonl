{"task_id": "HumanEval/70", "completion": "\n Here is a Python solution for the problem:\n\n```python\ndef strange_sort_list(lst):\n    if not lst:\n        return []\n\n    result = []\n    min_val = min(lst)\n    max_val = max(lst)\n\n    while lst:\n        result.append(min_val)\n        lst.remove(min_val)\n        if lst:\n            result.append(max_val)\n            lst.remove(max_val)\n        min_val = min(lst)\n        max_val = max(lst)\n\n    return result\n```\n\nThis function works by first finding the minimum and maximum values in the list. It then enters a loop where it continually removes the minimum and maximum values from the list and appends them to the result list. This continues until the list is empty. The function returns the result list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n```\n\n    ### Response:\n Here is a Python solution for the problem:\n\n```python\ndef strange_sort_list(lst):\n    if not lst:\n        return []\n\n    result = []\n    min_val = min(lst)\n    max_val = max(lst)\n\n    while lst:\n        result.append(min_val)\n        lst.remove(min_val)\n        if lst:\n            result.append(max_val)\n            lst.remove(max_val)\n        min_val = min(lst)\n        max_val = max(lst)\n\n    return result\n```\n\nThis function works by first finding the minimum and maximum values in the list. It then enters a loop where it continually removes the minimum and maximum values from the list and appends them to the result list. This continues until the list is empty. The function returns the result list."}

{"task_id": "HumanEval/155", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef even_odd_count(num):\n    # convert the number to string\n    num_str = str(abs(num))\n    # initialize counters\n    even_count = 0\n    odd_count = 0\n    # iterate over each digit\n    for digit in num_str:\n        # check if the digit is even or odd\n        if int(digit) % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    # return the counts as a tuple\n    return (even_count, odd_count)\n\n# test the function\nprint(even_odd_count(-12))  # should return (1, 1)\nprint(even_odd_count(123))  # should return (1, 2)\n```\n\nThis script works by first converting the input number to a string, then iterating over each character in the string (which are the digits of the number). For each digit, it checks if it's even or odd by checking if the remainder of the division by 2 is 0 (even) or 1 (odd). It then increments the appropriate counter. Finally, it returns the counts as a tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef even_odd_count(num):\n    # convert the number to string\n    num_str = str(abs(num))\n    # initialize counters\n    even_count = 0\n    odd_count = 0\n    # iterate over each digit\n    for digit in num_str:\n        # check if the digit is even or odd\n        if int(digit) % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n    # return the counts as a tuple\n    return (even_count, odd_count)\n\n# test the function\nprint(even_odd_count(-12))  # should return (1, 1)\nprint(even_odd_count(123))  # should return (1, 2)\n```\n\nThis script works by first converting the input number to a string, then iterating over each character in the string (which are the digits of the number). For each digit, it checks if it's even or odd by checking if the remainder of the division by 2 is 0 (even) or 1 (odd). It then increments the appropriate counter. Finally, it returns the counts as a tuple."}

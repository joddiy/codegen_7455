{"task_id": "HumanEval/156", "completion": "\n    Here is a Python script that solves the problem:\n\n```python\ndef int_to_mini_roman(number):\n    values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]\n    numerals = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i']\n    roman_numeral = ''\n    for i in range(len(values)):\n        count = number // values[i]\n        roman_numeral += numerals[i] * count\n        number -= values[i] * count\n    return roman_numeral\n```\n\nThis script works by iterating over the list of Roman numeral values in descending order. For each value, it calculates the number of times that value fits into the given number. It then appends the corresponding Roman numeral string to the result, and subtracts the value times the count from the number. This process continues until the number is reduced to zero. The result is the Roman numeral equivalent of the input number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef int_to_mini_roman(number):\n    \"\"\"\n    Given a positive integer, obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19) == 'xix'\n    >>> int_to_mini_roman(152) == 'clii'\n    >>> int_to_mini_roman(426) == 'cdxxvi'\n    \"\"\"\n```\n\n    ### Response:\n    Here is a Python script that solves the problem:\n\n```python\ndef int_to_mini_roman(number):\n    values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]\n    numerals = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i']\n    roman_numeral = ''\n    for i in range(len(values)):\n        count = number // values[i]\n        roman_numeral += numerals[i] * count\n        number -= values[i] * count\n    return roman_numeral\n```\n\nThis script works by iterating over the list of Roman numeral values in descending order. For each value, it calculates the number of times that value fits into the given number. It then appends the corresponding Roman numeral string to the result, and subtracts the value times the count from the number. This process continues until the number is reduced to zero. The result is the Roman numeral equivalent of the input number."}

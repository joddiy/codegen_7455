{"task_id": "HumanEval/59", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n```\n\nThis script works by dividing the input number by 2 until it can no longer be divided. This is because the largest prime factor of a number is always less than or equal to the square root of that number. If the number is divisible by the current divisor, it is divided. If not, the divisor is incremented. This process continues until the number is no longer divisible by any number, at which point the largest prime factor is returned.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n```\n\nThis script works by dividing the input number by 2 until it can no longer be divided. This is because the largest prime factor of a number is always less than or equal to the square root of that number. If the number is divisible by the current divisor, it is divided. If not, the divisor is incremented. This process continues until the number is no longer divisible by any number, at which point the largest prime factor is returned."}

{"task_id": "HumanEval/85", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef add(lst):\n    \"\"\"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n    \"\"\"\n    return sum(lst[i] for i in range(len(lst)) if i % 2 != 0 and lst[i] % 2 == 0)\n\nprint(add([4, 2, 6, 7]))  # Output: 2\n```\n\nThis script defines a function `add` that takes a list of integers as input. It uses a generator expression to iterate over the list, checking each index to see if it's odd and the corresponding element is even. If both conditions are met, the element is added to the sum. The sum of these elements is then returned.\n\nThe `print` statement at the end tests the function with the example input `[4, 2, 6, 7]`, and it correctly outputs `2`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef add(lst):\n    \"\"\"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef add(lst):\n    \"\"\"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n    \"\"\"\n    return sum(lst[i] for i in range(len(lst)) if i % 2 != 0 and lst[i] % 2 == 0)\n\nprint(add([4, 2, 6, 7]))  # Output: 2\n```\n\nThis script defines a function `add` that takes a list of integers as input. It uses a generator expression to iterate over the list, checking each index to see if it's odd and the corresponding element is even. If both conditions are met, the element is added to the sum. The sum of these elements is then returned.\n\nThe `print` statement at the end tests the function with the example input `[4, 2, 6, 7]`, and it correctly outputs `2`."}

{"task_id": "HumanEval/117", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef select_words(s, n):\n    if not s:\n        return []\n    words = s.split()\n    result = []\n    for word in words:\n        consonants = sum(1 for c in word if c.lower() in 'bcdfghjklmnpqrstvwxyz')\n        if consonants == n:\n            result.append(word)\n    return result\n```\n\nThis script works by first splitting the input string into a list of words. Then, for each word, it counts the number of consonants in the word. If the count is equal to the target number `n`, it adds the word to the result list. Finally, it returns the result list.\n\nThe `sum(1 for c in word if c.lower() in 'bcdfghjklmnpqrstvwxyz')` line is a compact way to count the number of consonants in a word. It uses a generator expression to iterate over each character in the word and count the number of characters that are in the string `'bcdfghjklmnpqrstvwxyz'`. The `if c.lower() in 'bcdfghjklmnpqrstvwxyz'` part checks if the character is a consonant.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef select_words(s, n):\n    \"\"\"Given a string s and a natural number n, you have been tasked to implement \n    a function that returns a list of all words from string s that contain exactly \n    n consonants, in order these words appear in the string s.\n    If the string s is empty then the function should return an empty list.\n    Note: you may assume the input string contains only letters and spaces.\n    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\n    \"\"\"\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef select_words(s, n):\n    if not s:\n        return []\n    words = s.split()\n    result = []\n    for word in words:\n        consonants = sum(1 for c in word if c.lower() in 'bcdfghjklmnpqrstvwxyz')\n        if consonants == n:\n            result.append(word)\n    return result\n```\n\nThis script works by first splitting the input string into a list of words. Then, for each word, it counts the number of consonants in the word. If the count is equal to the target number `n`, it adds the word to the result list. Finally, it returns the result list.\n\nThe `sum(1 for c in word if c.lower() in 'bcdfghjklmnpqrstvwxyz')` line is a compact way to count the number of consonants in a word. It uses a generator expression to iterate over each character in the word and count the number of characters that are in the string `'bcdfghjklmnpqrstvwxyz'`. The `if c.lower() in 'bcdfghjklmnpqrstvwxyz'` part checks if the character is a consonant."}

{"task_id": "HumanEval/80", "completion": "\n    ```python\ndef is_happy(s):\n    if len(s) < 3:\n        return False\n    for i in range(len(s) - 2):\n        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2]:\n            return False\n    return True\n```\nThe solution defines a function `is_happy` that takes a string `s` as input. It first checks if the length of the string is less than 3, in which case it returns `False`. Then, it iterates through the string and checks if there are any consecutive letters that are the same. If it finds any, it returns `False`. If the loop completes without finding any consecutive letters that are the same, it returns `True`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef is_happy(s):\n    \"\"\"You are given a string s.\n    Your task is to check if the string is happy or not.\n    A string is happy if its length is at least 3 and every 3 consecutive letters are distinct\n    For example:\n    is_happy(a) => False\n    is_happy(aa) => False\n    is_happy(abcd) => True\n    is_happy(aabb) => False\n    is_happy(adb) => True\n    is_happy(xyy) => False\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef is_happy(s):\n    if len(s) < 3:\n        return False\n    for i in range(len(s) - 2):\n        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2]:\n            return False\n    return True\n```\nThe solution defines a function `is_happy` that takes a string `s` as input. It first checks if the length of the string is less than 3, in which case it returns `False`. Then, it iterates through the string and checks if there are any consecutive letters that are the same. If it finds any, it returns `False`. If the loop completes without finding any consecutive letters that are the same, it returns `True`."}

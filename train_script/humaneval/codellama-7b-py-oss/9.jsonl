{"task_id": "HumanEval/9", "completion": "\n    ```python\nfrom typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max_list = []\n    max_val = float('-inf')\n    for num in numbers:\n        max_val = max(num, max_val)\n        rolling_max_list.append(max_val)\n    return rolling_max_list\n```\n\nThe `rolling_max` function iterates through the input list of numbers, keeping track of the maximum value encountered\nso far. It appends the maximum value to the `rolling_max_list` at each iteration. Finally, it returns the list of rolling\nmaximum elements.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\nfrom typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n```\n\n    ### Response:\n    ```python\nfrom typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max_list = []\n    max_val = float('-inf')\n    for num in numbers:\n        max_val = max(num, max_val)\n        rolling_max_list.append(max_val)\n    return rolling_max_list\n```\n\nThe `rolling_max` function iterates through the input list of numbers, keeping track of the maximum value encountered\nso far. It appends the maximum value to the `rolling_max_list` at each iteration. Finally, it returns the list of rolling\nmaximum elements."}

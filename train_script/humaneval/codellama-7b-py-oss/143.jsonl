{"task_id": "HumanEval/143", "completion": "\n    ```python\ndef words_in_sentence(sentence):\n    def is_prime(n):\n        if n <= 1:\n            return False\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    words = sentence.split()\n    result = [word for word in words if all(len(word) == i for i in range(2, len(word)) if is_prime(i))]\n    return ' '.join(result)\n```\n\nThe `words_in_sentence` function first splits the input sentence into individual words. Then, it defines a helper function `is_prime` to check if a number is prime. The main function iterates through the words, filters out the words whose lengths are not prime numbers, and returns the result as a single string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef words_in_sentence(sentence):\n    \"\"\"\n    You are given a string representing a sentence,\n    the sentence contains some words separated by a space,\n    and you have to return a string that contains the words from the original sentence,\n    whose lengths are prime numbers,\n    the order of the words in the new string should be the same as the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1 <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef words_in_sentence(sentence):\n    def is_prime(n):\n        if n <= 1:\n            return False\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    words = sentence.split()\n    result = [word for word in words if all(len(word) == i for i in range(2, len(word)) if is_prime(i))]\n    return ' '.join(result)\n```\n\nThe `words_in_sentence` function first splits the input sentence into individual words. Then, it defines a helper function `is_prime` to check if a number is prime. The main function iterates through the words, filters out the words whose lengths are not prime numbers, and returns the result as a single string."}

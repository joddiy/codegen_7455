{"task_id": "HumanEval/49", "completion": "\n    ```python\ndef modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n\n    Args:\n    n: int - The power to raise 2 to.\n    p: int - The modulus to take the power modulo.\n\n    Returns:\n    int - The result of 2^n modulo p.\n\n    Raises:\n    None\n\n    Examples:\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return pow(2, n, p)\n```\n\nThe provided solution defines a function `modp` that takes two integers `n` and `p` as input and returns the result of 2^n modulo p. The function uses the built-in `pow` function in Python to calculate the power and then applies the modulo operation to obtain the result. The function is tested with various examples to ensure its correctness.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n\n    Args:\n    n: int - The power to raise 2 to.\n    p: int - The modulus to take the power modulo.\n\n    Returns:\n    int - The result of 2^n modulo p.\n\n    Raises:\n    None\n\n    Examples:\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return pow(2, n, p)\n```\n\nThe provided solution defines a function `modp` that takes two integers `n` and `p` as input and returns the result of 2^n modulo p. The function uses the built-in `pow` function in Python to calculate the power and then applies the modulo operation to obtain the result. The function is tested with various examples to ensure its correctness."}

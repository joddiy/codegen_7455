{"task_id": "HumanEval/99", "completion": "\n    ```python\ndef closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    import math\n    value = float(value)\n    if value % 1 == 0.5:\n        return int(value + (1 - 2 * (value > 0)))\n    else:\n        return int(value + math.copysign(0.5, value))\n```\n\nThe `closest_integer` function first converts the input value to a float. If the value is equidistant from two integers, it checks if the value is greater than 0 and returns the closest integer away from zero. Otherwise, it uses the `math.copysign` function to determine the closest integer to the given value.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n```\n\n    ### Response:\n    ```python\ndef closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    import math\n    value = float(value)\n    if value % 1 == 0.5:\n        return int(value + (1 - 2 * (value > 0)))\n    else:\n        return int(value + math.copysign(0.5, value))\n```\n\nThe `closest_integer` function first converts the input value to a float. If the value is equidistant from two integers, it checks if the value is greater than 0 and returns the closest integer away from zero. Otherwise, it uses the `math.copysign` function to determine the closest integer to the given value."}

{"task_id": "HumanEval/104", "completion": "\n    ```python\ndef unique_digits(x):\n    \"\"\"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"\n    def has_even_digit(num):\n        num_str = str(num)\n        for digit in num_str:\n            if int(digit) % 2 == 0:\n                return True\n        return False\n\n    result = [num for num in x if not has_even_digit(num)]\n    return sorted(result)\n```\n\nThe `unique_digits` function takes a list of positive integers as input and returns a sorted list of elements that doesn't have any even digit. It uses a helper function `has_even_digit` to check if a number has any even digit. The main function filters the input list based on the result of `has_even_digit` and then sorts the resulting list before returning it.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef unique_digits(x):\n    \"\"\"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef unique_digits(x):\n    \"\"\"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"\n    def has_even_digit(num):\n        num_str = str(num)\n        for digit in num_str:\n            if int(digit) % 2 == 0:\n                return True\n        return False\n\n    result = [num for num in x if not has_even_digit(num)]\n    return sorted(result)\n```\n\nThe `unique_digits` function takes a list of positive integers as input and returns a sorted list of elements that doesn't have any even digit. It uses a helper function `has_even_digit` to check if a number has any even digit. The main function filters the input list based on the result of `has_even_digit` and then sorts the resulting list before returning it."}

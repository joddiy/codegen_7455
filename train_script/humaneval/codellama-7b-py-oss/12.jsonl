{"task_id": "HumanEval/12", "completion": "\n    ```python\nfrom typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    if not strings:\n        return None\n    strings.sort(key=len, reverse=True)\n    return strings[0]\n```\n\nThe `longest` function takes a list of strings as input and returns the longest string in the list. If the input list is empty, it returns `None`. Otherwise, it sorts the list of strings based on their lengths in descending order and returns the first element, which is the longest string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\nfrom typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    \"\"\" Out of list of strings, return the longest one. Return the first one in case of multiple\n    strings of the same length. Return None in case the input list is empty.\n    >>> longest([])\n\n    >>> longest(['a', 'b', 'c'])\n    'a'\n    >>> longest(['a', 'bb', 'ccc'])\n    'ccc'\n    \"\"\"\n```\n\n    ### Response:\n    ```python\nfrom typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    if not strings:\n        return None\n    strings.sort(key=len, reverse=True)\n    return strings[0]\n```\n\nThe `longest` function takes a list of strings as input and returns the longest string in the list. If the input list is empty, it returns `None`. Otherwise, it sorts the list of strings based on their lengths in descending order and returns the first element, which is the longest string."}

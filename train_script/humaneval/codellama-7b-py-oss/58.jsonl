{"task_id": "HumanEval/58", "completion": "\n    ```python\ndef common(l1: list, l2: list):\n    \"\"\"Return sorted unique common elements for two lists.\n\n    Args:\n    l1 (list): First list of elements.\n    l2 (list): Second list of elements.\n\n    Returns:\n    list: Sorted unique common elements between l1 and l2.\n\n    \"\"\"\n    s1 = set(l1)\n    s2 = set(l2)\n    common_elements = list(s1.intersection(s2))\n    return sorted(common_elements)\n```\n\nThe `common` function takes two lists `l1` and `l2` as input. It first converts the elements of `l1` and `l2` into sets to efficiently find the common elements. Then, it uses the `intersection` method of sets to find the common elements between `l1` and `l2`. Finally, it converts the set of common elements back to a list and returns the sorted unique common elements.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef common(l1: list, l2: list):\n    \"\"\"Return sorted unique common elements for two lists.\n    >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    [1, 5, 653]\n    >>> common([5, 3, 2, 8], [3, 2])\n    [2, 3]\n\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef common(l1: list, l2: list):\n    \"\"\"Return sorted unique common elements for two lists.\n\n    Args:\n    l1 (list): First list of elements.\n    l2 (list): Second list of elements.\n\n    Returns:\n    list: Sorted unique common elements between l1 and l2.\n\n    \"\"\"\n    s1 = set(l1)\n    s2 = set(l2)\n    common_elements = list(s1.intersection(s2))\n    return sorted(common_elements)\n```\n\nThe `common` function takes two lists `l1` and `l2` as input. It first converts the elements of `l1` and `l2` into sets to efficiently find the common elements. Then, it uses the `intersection` method of sets to find the common elements between `l1` and `l2`. Finally, it converts the set of common elements back to a list and returns the sorted unique common elements."}

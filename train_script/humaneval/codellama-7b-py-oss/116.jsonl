{"task_id": "HumanEval/116", "completion": "\n    ```python\ndef sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def custom_sort(num):\n        ones_count = bin(num).count('1')\n        return (ones_count, num)\n\n    return sorted(arr, key=custom_sort)\n```\n\nThe `sort_array` function takes an array of non-negative integers as input and sorts them based on the number of ones in their binary representation. If two numbers have the same number of ones, it sorts them based on their decimal value. The `custom_sort` function is used as the key function for the `sorted` function to achieve this custom sorting.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def custom_sort(num):\n        ones_count = bin(num).count('1')\n        return (ones_count, num)\n\n    return sorted(arr, key=custom_sort)\n```\n\nThe `sort_array` function takes an array of non-negative integers as input and sorts them based on the number of ones in their binary representation. If two numbers have the same number of ones, it sorts them based on their decimal value. The `custom_sort` function is used as the key function for the `sorted` function to achieve this custom sorting."}

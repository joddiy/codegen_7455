{"task_id": "HumanEval/70", "completion": "\n    ```python\ndef strange_sort_list(lst):\n    if not lst:\n        return []\n\n    result = []\n    while lst:\n        min_val = min(lst)\n        max_val = max(lst)\n        result.append(min_val)\n        lst.remove(min_val)\n        if lst:\n            result.append(max_val)\n            lst.remove(max_val)\n\n    return result\n```\n\nThe `strange_sort_list` function takes a list of integers as input and returns a list in strange order. It iterates through the input list, adding the minimum value to the result list and then the maximum value, repeating the process until the input list is empty. The function handles the edge case of an empty input list by returning an empty list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n```\n\n    ### Response:\n    ```python\ndef strange_sort_list(lst):\n    if not lst:\n        return []\n\n    result = []\n    while lst:\n        min_val = min(lst)\n        max_val = max(lst)\n        result.append(min_val)\n        lst.remove(min_val)\n        if lst:\n            result.append(max_val)\n            lst.remove(max_val)\n\n    return result\n```\n\nThe `strange_sort_list` function takes a list of integers as input and returns a list in strange order. It iterates through the input list, adding the minimum value to the result list and then the maximum value, repeating the process until the input list is empty. The function handles the edge case of an empty input list by returning an empty list."}

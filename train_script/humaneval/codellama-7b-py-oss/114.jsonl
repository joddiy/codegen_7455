{"task_id": "HumanEval/114", "completion": "\n    ```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum < 0:\n            current_sum = 0\n    return min_sum if min_sum != float('inf') else 0\n```\n\nThe solution defines a function `minSubArraySum` that takes an array of integers `nums` as input. It initializes `min_sum` to positive infinity and `current_sum` to 0. It then iterates through the array, updating `current_sum` with the sum of the current element and the previous elements. It also updates `min_sum` to the minimum of the current `min_sum` and `current_sum`. If the current sum becomes negative, it is reset to 0. Finally, it returns the minimum sum found.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum, current_sum)\n        if current_sum < 0:\n            current_sum = 0\n    return min_sum if min_sum != float('inf') else 0\n```\n\nThe solution defines a function `minSubArraySum` that takes an array of integers `nums` as input. It initializes `min_sum` to positive infinity and `current_sum` to 0. It then iterates through the array, updating `current_sum` with the sum of the current element and the previous elements. It also updates `min_sum` to the minimum of the current `min_sum` and `current_sum`. If the current sum becomes negative, it is reset to 0. Finally, it returns the minimum sum found."}

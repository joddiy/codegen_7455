{"task_id": "HumanEval/43", "completion": "\n    ```python\ndef pairs_sum_to_zero(l):\n    \"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n    it returns True if there are two distinct elements in the list that\n    sum to zero, and False otherwise.\n    \"\"\"\n    seen = set()\n    for num in l:\n        complement = -num - num\n        if complement in seen:\n            return True\n        seen.add(num)\n    return False\n```\n\nThe solution defines a function `pairs_sum_to_zero` that iterates through the input list `l`. For each element `num` in the list, it calculates the complement required to make the sum zero. If the complement is found in the `seen` set, the function returns True, indicating the presence of two distinct elements that sum to zero. If no such pair is found, the function returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef pairs_sum_to_zero(l):\n    \"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n    it returns True if there are two distinct elements in the list that\n    sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1, 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\n```\n\n    ### Response:\n    ```python\ndef pairs_sum_to_zero(l):\n    \"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n    it returns True if there are two distinct elements in the list that\n    sum to zero, and False otherwise.\n    \"\"\"\n    seen = set()\n    for num in l:\n        complement = -num - num\n        if complement in seen:\n            return True\n        seen.add(num)\n    return False\n```\n\nThe solution defines a function `pairs_sum_to_zero` that iterates through the input list `l`. For each element `num` in the list, it calculates the complement required to make the sum zero. If the complement is found in the `seen` set, the function returns True, indicating the presence of two distinct elements that sum to zero. If no such pair is found, the function returns False."}

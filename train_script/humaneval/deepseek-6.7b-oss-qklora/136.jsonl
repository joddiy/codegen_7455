{"task_id": "HumanEval/136", "completion": "\n```python\ndef largest_smallest_integers(lst):\n    '''\n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a list.\n    If there is no negative or positive integers, return them as None.\n\n    Examples:\n    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n    largest_smallest_integers([]) == (None, None)\n    largest_smallest_integers([0]) == (None, None)\n    '''\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) == 0:\n        neg_lst = None\n    else:\n        neg_lst = max(neg_lst)\n    if len(pos_lst) == 0:\n        pos_lst = None\n    else:\n        pos_lst = min(pos_lst)\n    return (neg_lst, pos_lst)\n```\n\n    ### Test Cases:\n```python\nprint(largest_smallest_integers([2, 4, 1, 3, 5, 7]))\nprint(largest_smallest_integers([]))\nprint(largest_smallest_integers([0]))\n```\n\n    ### Output:\n```\n(None, 1)\n(None, None)\n(None, None)\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef largest_smallest_integers(lst):\n    '''\n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a list.\n    If there is no negative or positive integers, return them as None.\n\n    Examples:\n    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n    largest_smallest_integers([]) == (None, None)\n    largest_smallest_integers([0]) == (None, None)\n    '''\n```\n\n    ### Response:\n```python\ndef largest_smallest_integers(lst):\n    '''\n    Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a list.\n    If there is no negative or positive integers, return them as None.\n\n    Examples:\n    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n    largest_smallest_integers([]) == (None, None)\n    largest_smallest_integers([0]) == (None, None)\n    '''\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) == 0:\n        neg_lst = None\n    else:\n        neg_lst = max(neg_lst)\n    if len(pos_lst) == 0:\n        pos_lst = None\n    else:\n        pos_lst = min(pos_lst)\n    return (neg_lst, pos_lst)\n```\n\n    ### Test Cases:\n```python\nprint(largest_smallest_integers([2, 4, 1, 3, 5, 7]))\nprint(largest_smallest_integers([]))\nprint(largest_smallest_integers([0]))\n```\n\n    ### Output:\n```\n(None, 1)\n(None, None)\n(None, None)\n```"}

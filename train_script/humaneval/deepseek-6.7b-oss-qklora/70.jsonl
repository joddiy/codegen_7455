{"task_id": "HumanEval/70", "completion": "\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n    if len(lst) == 0:\n        return []\n    else:\n        sorted_list = []\n        while len(lst) > 0:\n            sorted_list.append(min(lst))\n            lst.remove(min(lst))\n            if len(lst) > 0:\n                sorted_list.append(max(lst))\n                lst.remove(max(lst))\n        return sorted_list\n```\n\n    ### Test Cases:\n```python\nprint(strange_sort_list([1, 2, 3, 4]))  # Output: [1, 4, 2, 3]\nprint(strange_sort_list([5, 5, 5, 5]))  # Output: [5, 5, 5, 5]\nprint(strange_sort_list([]))  # Output: []\n```\n\n    ### Explanation:\n    The strange_sort_list function takes a list of integers as input and returns a list in strange order. It first checks if the input list is empty and returns an empty list if it is. Otherwise, it iterates through the list, appending the minimum value, then the maximum value, and so on, until the list is empty.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n```\n\n    ### Response:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n    if len(lst) == 0:\n        return []\n    else:\n        sorted_list = []\n        while len(lst) > 0:\n            sorted_list.append(min(lst))\n            lst.remove(min(lst))\n            if len(lst) > 0:\n                sorted_list.append(max(lst))\n                lst.remove(max(lst))\n        return sorted_list\n```\n\n    ### Test Cases:\n```python\nprint(strange_sort_list([1, 2, 3, 4]))  # Output: [1, 4, 2, 3]\nprint(strange_sort_list([5, 5, 5, 5]))  # Output: [5, 5, 5, 5]\nprint(strange_sort_list([]))  # Output: []\n```\n\n    ### Explanation:\n    The strange_sort_list function takes a list of integers as input and returns a list in strange order. It first checks if the input list is empty and returns an empty list if it is. Otherwise, it iterates through the list, appending the minimum value, then the maximum value, and so on, until the list is empty."}

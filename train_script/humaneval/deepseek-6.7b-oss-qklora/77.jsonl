{"task_id": "HumanEval/77", "completion": "\n```python\ndef iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    import math\n    x = math.pow(a, 1/3)\n    if x.is_integer():\n        return True\n    else:\n        return False\n```\n\n    ### Test:\n```python\nprint(iscube(1)) # ==> True\nprint(iscube(2)) # ==> False\nprint(iscube(-1)) # ==> True\nprint(iscube(64)) # ==> True\nprint(iscube(0)) # ==> True\nprint(iscube(180)) # ==> False\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n```\n\n    ### Response:\n```python\ndef iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    import math\n    x = math.pow(a, 1/3)\n    if x.is_integer():\n        return True\n    else:\n        return False\n```\n\n    ### Test:\n```python\nprint(iscube(1)) # ==> True\nprint(iscube(2)) # ==> False\nprint(iscube(-1)) # ==> True\nprint(iscube(64)) # ==> True\nprint(iscube(0)) # ==> True\nprint(iscube(180)) # ==> False\n```"}

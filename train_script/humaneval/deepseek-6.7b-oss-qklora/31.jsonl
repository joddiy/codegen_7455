{"task_id": "HumanEval/31", "completion": "\n    ```python\n    def is_prime(n):\n        \"\"\"Return true if a given number is prime, and false otherwise.\n        >>> is_prime(6)\n        False\n        >>> is_prime(101)\n        True\n        >>> is_prime(11)\n        True\n        >>> is_prime(13441)\n        True\n        >>> is_prime(61)\n        True\n        >>> is_prime(4)\n        False\n        >>> is_prime(1)\n        False\n        \"\"\"\n        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n    ```\n\n    This solution uses a simple algorithm to check if a given number is prime. It first checks if the number is less than 2, in which case it returns False. Then, it iterates through all numbers from 2 to the square root of the given number, checking if the given number is divisible by any of them. If it is, the function returns False; otherwise, it returns True.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef is_prime(n):\n    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n```\n\n    ### Response:\n    ```python\n    def is_prime(n):\n        \"\"\"Return true if a given number is prime, and false otherwise.\n        >>> is_prime(6)\n        False\n        >>> is_prime(101)\n        True\n        >>> is_prime(11)\n        True\n        >>> is_prime(13441)\n        True\n        >>> is_prime(61)\n        True\n        >>> is_prime(4)\n        False\n        >>> is_prime(1)\n        False\n        \"\"\"\n        if n < 2:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n    ```\n\n    This solution uses a simple algorithm to check if a given number is prime. It first checks if the number is less than 2, in which case it returns False. Then, it iterates through all numbers from 2 to the square root of the given number, checking if the given number is divisible by any of them. If it is, the function returns False; otherwise, it returns True."}

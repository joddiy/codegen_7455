{"task_id": "HumanEval/126", "completion": "\n```python\ndef is_sorted(lst):\n    # Check if the list is sorted in ascending order\n    return all(lst[i] <= lst[i+1] for i in range(len(lst)-1))\n```\n\n    ### Explanation:\n    The `is_sorted` function uses the `all` function to check if all elements in the list are less than or equal to the next element. If all elements satisfy this condition, the function returns `True`, indicating that the list is sorted in ascending order. If any element fails this condition, the function returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef is_sorted(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5]) \u279e True\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n```\n\n    ### Response:\n```python\ndef is_sorted(lst):\n    # Check if the list is sorted in ascending order\n    return all(lst[i] <= lst[i+1] for i in range(len(lst)-1))\n```\n\n    ### Explanation:\n    The `is_sorted` function uses the `all` function to check if all elements in the list are less than or equal to the next element. If all elements satisfy this condition, the function returns `True`, indicating that the list is sorted in ascending order. If any element fails this condition, the function returns `False`."}

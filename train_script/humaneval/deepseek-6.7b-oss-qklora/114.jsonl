{"task_id": "HumanEval/114", "completion": "\n```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n        current_sum = min(current_sum + num, num)\n        min_sum = min(min_sum, current_sum)\n    return min_sum\n```\n\n    ### Explanation:\n    The function `minSubArraySum` takes an array of integers `nums` as input and returns the minimum sum of any non-empty sub-array of `nums`. It initializes `min_sum` to infinity and `current_sum` to 0. It then iterates through the array, updating `current_sum` to be the minimum of the current sum plus the current element and the current element itself. It updates `min_sum` to be the minimum of `min_sum` and `current_sum` at each iteration. Finally, it returns the minimum sum of any non-empty sub-array of `nums`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6\n    \"\"\"\n    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n        current_sum = min(current_sum + num, num)\n        min_sum = min(min_sum, current_sum)\n    return min_sum\n```\n\n    ### Explanation:\n    The function `minSubArraySum` takes an array of integers `nums` as input and returns the minimum sum of any non-empty sub-array of `nums`. It initializes `min_sum` to infinity and `current_sum` to 0. It then iterates through the array, updating `current_sum` to be the minimum of the current sum plus the current element and the current element itself. It updates `min_sum` to be the minimum of `min_sum` and `current_sum` at each iteration. Finally, it returns the minimum sum of any non-empty sub-array of `nums`."}

{"task_id": "HumanEval/59", "completion": "\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n```\n\n    ### Explanation:\n    The function `largest_prime_factor` takes an integer `n` as input and returns the largest prime factor of `n`. It uses a while loop to iterate through the factors of `n`, starting from 2. If the current factor is a factor of `n`, it is removed from `n` and the loop continues. Once the loop completes, `n` will be the largest prime factor of the original input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n```\n\n    ### Explanation:\n    The function `largest_prime_factor` takes an integer `n` as input and returns the largest prime factor of `n`. It uses a while loop to iterate through the factors of `n`, starting from 2. If the current factor is a factor of `n`, it is removed from `n` and the loop continues. Once the loop completes, `n` will be the largest prime factor of the original input."}

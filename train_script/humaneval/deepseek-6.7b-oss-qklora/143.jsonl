{"task_id": "HumanEval/143", "completion": "\n```python\ndef words_in_sentence(sentence):\n    def is_prime(n):\n        if n <= 1:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    words = sentence.split()\n    prime_words = [word for word in words if is_prime(len(word))]\n    return \" \".join(prime_words)\n```\n\n    ### Explanation:\n    The `words_in_sentence` function takes a string `sentence` as input and returns a string containing the words from the original sentence whose lengths are prime numbers. It first splits the sentence into words and then checks each word's length to see if it is prime. If the length is prime, the word is added to a list of prime words. Finally, the function joins the prime words into a single string and returns it.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef words_in_sentence(sentence):\n    \"\"\"\n    You are given a string representing a sentence,\n    the sentence contains some words separated by a space,\n    and you have to return a string that contains the words from the original sentence,\n    whose lengths are prime numbers,\n    the order of the words in the new string should be the same as the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1 <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef words_in_sentence(sentence):\n    def is_prime(n):\n        if n <= 1:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    words = sentence.split()\n    prime_words = [word for word in words if is_prime(len(word))]\n    return \" \".join(prime_words)\n```\n\n    ### Explanation:\n    The `words_in_sentence` function takes a string `sentence` as input and returns a string containing the words from the original sentence whose lengths are prime numbers. It first splits the sentence into words and then checks each word's length to see if it is prime. If the length is prime, the word is added to a list of prime words. Finally, the function joins the prime words into a single string and returns it."}

{"task_id": "HumanEval/55", "completion": "\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n```\nThe solution defines a function `fib` that takes an integer `n` as input and returns the n-th Fibonacci number. It uses a recursive approach to calculate the Fibonacci numbers. The base cases are `fib(0) = 0` and `fib(1) = 1`, and the recursive case is `fib(n) = fib(n-1) + fib(n-2)` for `n > 1`. The solution also includes a doctest to test the function with different input values.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n```\nThe solution defines a function `fib` that takes an integer `n` as input and returns the n-th Fibonacci number. It uses a recursive approach to calculate the Fibonacci numbers. The base cases are `fib(0) = 0` and `fib(1) = 1`, and the recursive case is `fib(n) = fib(n-1) + fib(n-2)` for `n > 1`. The solution also includes a doctest to test the function with different input values."}

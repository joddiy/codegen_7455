{"task_id": "HumanEval/132", "completion": "\n```python\ndef is_nested(string):\n    stack = []\n    for char in string:\n        if char == '[':\n            stack.append(char)\n        elif char == ']':\n            if stack:\n                stack.pop()\n            else:\n                return False\n    return bool(stack)\n```\nThe `is_nested` function uses a stack to keep track of the opening brackets. It iterates through the input string, pushing opening brackets onto the stack and popping them when encountering a closing bracket. If the stack is empty at the end, it means that there are no valid nested brackets, so the function returns False. Otherwise, it returns True if the stack is not empty.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef is_nested(string):\n    '''\n    Create a function that takes a string as input which contains only square brackets.\n    The function should return True if and only if there is a valid subsequence of brackets \n    where at least one bracket in the subsequence is nested.\n\n    is_nested('[[]]') \u279e True\n    is_nested('[]]]]]]][[[[[]') \u279e False\n    is_nested('[][]') \u279e False\n    is_nested('[]') \u279e False\n    is_nested('[[][]]') \u279e True\n    is_nested('[[]][[') \u279e True\n    '''\n```\n\n    ### Response:\n```python\ndef is_nested(string):\n    stack = []\n    for char in string:\n        if char == '[':\n            stack.append(char)\n        elif char == ']':\n            if stack:\n                stack.pop()\n            else:\n                return False\n    return bool(stack)\n```\nThe `is_nested` function uses a stack to keep track of the opening brackets. It iterates through the input string, pushing opening brackets onto the stack and popping them when encountering a closing bracket. If the stack is empty at the end, it means that there are no valid nested brackets, so the function returns False. Otherwise, it returns True if the stack is not empty."}

{"task_id": "HumanEval/70", "completion": "\n```python\ndef strange_sort_list(lst):\n    if not lst:\n        return []\n    sorted_lst = sorted(lst)\n    result = []\n    while sorted_lst:\n        result.append(sorted_lst.pop(0))\n        if sorted_lst:\n            result.append(sorted_lst.pop(-1))\n    return result\n```\n\nThe `strange_sort_list` function takes a list of integers as input and returns a new list in a strange order. It first sorts the input list and then iterates through the sorted list, appending the minimum value, then the maximum value, and so on, until the list is empty. If the input list is empty, the function returns an empty list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef strange_sort_list(lst):\n    '''\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []\n    '''\n```\n\n    ### Response:\n```python\ndef strange_sort_list(lst):\n    if not lst:\n        return []\n    sorted_lst = sorted(lst)\n    result = []\n    while sorted_lst:\n        result.append(sorted_lst.pop(0))\n        if sorted_lst:\n            result.append(sorted_lst.pop(-1))\n    return result\n```\n\nThe `strange_sort_list` function takes a list of integers as input and returns a new list in a strange order. It first sorts the input list and then iterates through the sorted list, appending the minimum value, then the maximum value, and so on, until the list is empty. If the input list is empty, the function returns an empty list."}

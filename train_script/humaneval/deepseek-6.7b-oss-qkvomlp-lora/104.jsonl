{"task_id": "HumanEval/104", "completion": "\n```python\ndef unique_digits(x):\n    unique_list = []\n    for num in x:\n        if all(digit % 2 != 0 for digit in map(int, str(num))):\n            unique_list.append(num)\n    return sorted(unique_list)\n```\n\nThe `unique_digits` function takes a list of positive integers `x` as input. It initializes an empty list `unique_list` to store the unique elements. Then, it iterates through each element in the input list, checks if all digits of the element are odd, and if so, adds the element to the `unique_list`. Finally, it returns the sorted list of unique elements.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef unique_digits(x):\n    \"\"\"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef unique_digits(x):\n    unique_list = []\n    for num in x:\n        if all(digit % 2 != 0 for digit in map(int, str(num))):\n            unique_list.append(num)\n    return sorted(unique_list)\n```\n\nThe `unique_digits` function takes a list of positive integers `x` as input. It initializes an empty list `unique_list` to store the unique elements. Then, it iterates through each element in the input list, checks if all digits of the element are odd, and if so, adds the element to the `unique_list`. Finally, it returns the sorted list of unique elements."}

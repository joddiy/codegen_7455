{"task_id": "HumanEval/158", "completion": "\n```python\ndef find_max(words):\n    max_unique_chars = max(len(set(word)) for word in words)\n    max_words = [word for word in words if len(set(word)) == max_unique_chars]\n    return min(max_words) if max_words else \"\"\n```\n\nThe `find_max` function first calculates the maximum number of unique characters in any word in the input list. Then, it filters the list to include only words with the maximum number of unique characters. Finally, it returns the word with the maximum number of unique characters, or an empty string if no words have the maximum number of unique characters.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef find_max(words):\n    max_unique_chars = max(len(set(word)) for word in words)\n    max_words = [word for word in words if len(set(word)) == max_unique_chars]\n    return min(max_words) if max_words else \"\"\n```\n\nThe `find_max` function first calculates the maximum number of unique characters in any word in the input list. Then, it filters the list to include only words with the maximum number of unique characters. Finally, it returns the word with the maximum number of unique characters, or an empty string if no words have the maximum number of unique characters."}

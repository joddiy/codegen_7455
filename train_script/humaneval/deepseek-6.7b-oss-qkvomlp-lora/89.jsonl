{"task_id": "HumanEval/89", "completion": "\n```python\ndef encrypt(s):\n    encrypted_string = \"\"\n    for char in s:\n        if char.isalpha():\n            encrypted_char = chr((ord(char) - 97 + 2) % 26 + 97)\n            encrypted_string += encrypted_char\n        else:\n            encrypted_string += char\n    return encrypted_string\n```\nThe `encrypt` function takes a string `s` as an argument and returns a string `encrypted_string` encrypted with the alphabet being rotated. The function iterates through each character in the input string, checks if the character is an alphabet, and if it is, encrypts the character using the specified rotation rule. If the character is not an alphabet, it is added to the `encrypted_string` without any modification. Finally, the encrypted string is returned as the output.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef encrypt(s):\n    \"\"\"Create a function encrypt that takes a string as an argument and\n    returns a string encrypted with the alphabet being rotated. \n    The alphabet should be rotated in a manner such that the letters \n    shift down by two multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef encrypt(s):\n    encrypted_string = \"\"\n    for char in s:\n        if char.isalpha():\n            encrypted_char = chr((ord(char) - 97 + 2) % 26 + 97)\n            encrypted_string += encrypted_char\n        else:\n            encrypted_string += char\n    return encrypted_string\n```\nThe `encrypt` function takes a string `s` as an argument and returns a string `encrypted_string` encrypted with the alphabet being rotated. The function iterates through each character in the input string, checks if the character is an alphabet, and if it is, encrypts the character using the specified rotation rule. If the character is not an alphabet, it is added to the `encrypted_string` without any modification. Finally, the encrypted string is returned as the output."}

{"task_id": "HumanEval/78", "completion": "\n```python\ndef hex_key(num):\n    primes = [2, 3, 5, 7, 11, 13]\n    count = 0\n    for char in num:\n        if char.isdigit():\n            if int(char) in primes:\n                count += 1\n        elif char.upper() in ['A', 'B', 'C', 'D', 'E', 'F']:\n            if int(char, 16) in primes:\n                count += 1\n    return count\n```\nThe `hex_key` function takes a string `num` as input and initializes a list `primes` with the prime numbers. It then iterates through each character in the string and checks if the character is a digit or a hexadecimal digit. If it is a digit, it checks if the digit is a prime number. If it is a hexadecimal digit, it converts it to its decimal equivalent and checks if the decimal equivalent is a prime number. The function returns the count of the prime hexadecimal digits found in the input string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef hex_key(num):\n    \"\"\"You have been tasked to write a function that receives \n    a hexadecimal number as a string and counts the number of hexadecimal \n    digits that are primes (prime number, or a prime, is a natural number \n    greater than 1 that is not a product of two smaller natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11), D (=decimal 13).\n    Note: you may assume the input is always correct or empty string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n    For num = \"AB\" the output should be 1.\n    For num = \"1077E\" the output should be 2.\n    For num = \"ABED1A33\" the output should be 4.\n    For num = \"123456789ABCDEF0\" the output should be 6.\n    For num = \"2020\" the output should be 2.\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef hex_key(num):\n    primes = [2, 3, 5, 7, 11, 13]\n    count = 0\n    for char in num:\n        if char.isdigit():\n            if int(char) in primes:\n                count += 1\n        elif char.upper() in ['A', 'B', 'C', 'D', 'E', 'F']:\n            if int(char, 16) in primes:\n                count += 1\n    return count\n```\nThe `hex_key` function takes a string `num` as input and initializes a list `primes` with the prime numbers. It then iterates through each character in the string and checks if the character is a digit or a hexadecimal digit. If it is a digit, it checks if the digit is a prime number. If it is a hexadecimal digit, it converts it to its decimal equivalent and checks if the decimal equivalent is a prime number. The function returns the count of the prime hexadecimal digits found in the input string."}

{"task_id": "HumanEval/18", "completion": "\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    start = 0\n    while start < len(string):\n        pos = string.find(substring, start)\n        if pos == -1:\n            break\n        count += 1\n        start = pos + 1\n    return count\n```\n\nThe `how_many_times` function uses the `find` method to search for the substring in the original string. It initializes a count variable to 0 and a start variable to 0. It then enters a loop that searches for the substring in the original string, starting from the current position. If the substring is found, the count is incremented and the start position is updated to the next position after the found substring. If the substring is not found, the loop breaks. Finally, the function returns the count of occurrences of the substring in the original string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    start = 0\n    while start < len(string):\n        pos = string.find(substring, start)\n        if pos == -1:\n            break\n        count += 1\n        start = pos + 1\n    return count\n```\n\nThe `how_many_times` function uses the `find` method to search for the substring in the original string. It initializes a count variable to 0 and a start variable to 0. It then enters a loop that searches for the substring in the original string, starting from the current position. If the substring is found, the count is incremented and the start position is updated to the next position after the found substring. If the substring is not found, the loop breaks. Finally, the function returns the count of occurrences of the substring in the original string."}

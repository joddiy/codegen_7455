{"task_id": "HumanEval/97", "completion": "\n```python\ndef multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a_unit_digit = abs(a) % 10\n    b_unit_digit = abs(b) % 10\n    return a_unit_digit * b_unit_digit\n```\n\nThe `multiply` function takes two integers `a` and `b` as input and returns the product of their unit digits. It first extracts the unit digits of `a` and `b` using the modulo operator, then returns the product of the unit digits. The function also handles negative input by using the `abs` function to get the absolute value of the input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a solution to the following problem:\n```python\ndef multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n```\n\n    ### Response:\n```python\ndef multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a_unit_digit = abs(a) % 10\n    b_unit_digit = abs(b) % 10\n    return a_unit_digit * b_unit_digit\n```\n\nThe `multiply` function takes two integers `a` and `b` as input and returns the product of their unit digits. It first extracts the unit digits of `a` and `b` using the modulo operator, then returns the product of the unit digits. The function also handles negative input by using the `abs` function to get the absolute value of the input."}

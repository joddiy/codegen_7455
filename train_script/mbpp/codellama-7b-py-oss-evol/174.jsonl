{"task_id": "Mbpp/389", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        lucas_numbers = [2, 1]\n        for i in range(2, n + 1):\n            lucas_numbers.append(lucas_numbers[i - 1] + lucas_numbers[i - 2])\n        return lucas_numbers[n]\n```\n\nThis function uses a list to store the Lucas numbers. It starts with the first two Lucas numbers, 2 and 1, and then iterates through the rest of the numbers, calculating each one as the sum of the two preceding ones.\n\nThe function satisfies the given assertion:\n\n```python\nassert find_lucas(9) == 76\n```\n\nThis assertion passes, meaning that the function is correct.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the n'th lucas number. Your code should satisfy the following assertion:\n```python\nassert find_lucas(9) == 76\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        lucas_numbers = [2, 1]\n        for i in range(2, n + 1):\n            lucas_numbers.append(lucas_numbers[i - 1] + lucas_numbers[i - 2])\n        return lucas_numbers[n]\n```\n\nThis function uses a list to store the Lucas numbers. It starts with the first two Lucas numbers, 2 and 1, and then iterates through the rest of the numbers, calculating each one as the sum of the two preceding ones.\n\nThe function satisfies the given assertion:\n\n```python\nassert find_lucas(9) == 76\n```\n\nThis assertion passes, meaning that the function is correct."}

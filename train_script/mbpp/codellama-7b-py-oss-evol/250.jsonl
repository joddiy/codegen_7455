{"task_id": "Mbpp/558", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef digit_distance_nums(num1, num2):\n    num1_str = str(num1)\n    num2_str = str(num2)\n    sum_diff = 0\n    for i in range(max(len(num1_str), len(num2_str))):\n        digit1 = int(num1_str[i]) if i < len(num1_str) else 0\n        digit2 = int(num2_str[i]) if i < len(num2_str) else 0\n        sum_diff += abs(digit1 - digit2)\n    return sum_diff\n```\n\nThis function first converts the input numbers to strings to easily access their digits. Then, it iterates over the digits of the longer number. For each digit, it calculates the absolute difference with the corresponding digit of the other number (or 0 if the other number does not have a digit at this position). It adds this difference to the sum.\n\nThe function satisfies the given assertion:\n\n```python\nassert digit_distance_nums(1,2) == 1\n```\n\nThis assertion checks that the function correctly calculates the sum of the per-digit difference between 1 and 2, which is 1.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the sum of the per-digit difference between two integers. Your code should satisfy the following assertion:\n```python\nassert digit_distance_nums(1,2) == 1\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef digit_distance_nums(num1, num2):\n    num1_str = str(num1)\n    num2_str = str(num2)\n    sum_diff = 0\n    for i in range(max(len(num1_str), len(num2_str))):\n        digit1 = int(num1_str[i]) if i < len(num1_str) else 0\n        digit2 = int(num2_str[i]) if i < len(num2_str) else 0\n        sum_diff += abs(digit1 - digit2)\n    return sum_diff\n```\n\nThis function first converts the input numbers to strings to easily access their digits. Then, it iterates over the digits of the longer number. For each digit, it calculates the absolute difference with the corresponding digit of the other number (or 0 if the other number does not have a digit at this position). It adds this difference to the sum.\n\nThe function satisfies the given assertion:\n\n```python\nassert digit_distance_nums(1,2) == 1\n```\n\nThis assertion checks that the function correctly calculates the sum of the per-digit difference between 1 and 2, which is 1."}

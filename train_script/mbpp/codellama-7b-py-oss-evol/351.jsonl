{"task_id": "Mbpp/753", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef min_k(lst, k):\n    return sorted(lst, key=lambda x: x[1])[:k]\n```\n\nThis function sorts the list of tuples based on the second element of each tuple (assumed to be the numerical value we're interested in) and then returns the first k elements of the sorted list.\n\nThe provided assertion will pass if this function is implemented correctly:\n\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\nThis assertion checks that the function correctly returns the two tuples with the smallest second elements, which are ('Akash', 2) and ('Akshat', 4).", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Your code should satisfy the following assertion:\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef min_k(lst, k):\n    return sorted(lst, key=lambda x: x[1])[:k]\n```\n\nThis function sorts the list of tuples based on the second element of each tuple (assumed to be the numerical value we're interested in) and then returns the first k elements of the sorted list.\n\nThe provided assertion will pass if this function is implemented correctly:\n\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\nThis assertion checks that the function correctly returns the two tuples with the smallest second elements, which are ('Akash', 2) and ('Akshat', 4)."}

{"task_id": "Mbpp/244", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef next_Perfect_Square(n):\n    return (n + 1) ** 2\n```\n\nThis function works by adding 1 to the given number and then squaring the result. This will always give a perfect square, so it will always return the next perfect square greater than the input.\n\nYou can test this function with the provided assertion:\n\n```python\nassert next_Perfect_Square(35) == 36\n```\n\nIf the assertion passes, it means that the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the next perfect square greater than a given number. Your code should satisfy the following assertion:\n```python\nassert next_Perfect_Square(35) == 36\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef next_Perfect_Square(n):\n    return (n + 1) ** 2\n```\n\nThis function works by adding 1 to the given number and then squaring the result. This will always give a perfect square, so it will always return the next perfect square greater than the input.\n\nYou can test this function with the provided assertion:\n\n```python\nassert next_Perfect_Square(35) == 36\n```\n\nIf the assertion passes, it means that the function is working correctly."}

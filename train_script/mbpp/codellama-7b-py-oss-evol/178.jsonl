{"task_id": "Mbpp/394", "completion": "\n Here is a Python function that checks if a given tuple contains no duplicates:\n\n```python\ndef check_distinct(t):\n    return len(t) == len(set(t))\n```\n\nThis function works by converting the tuple to a set. A set in Python is a collection type that is unordered and unindexed, and it cannot contain duplicate elements. By converting the tuple to a set, we automatically remove any duplicate elements. Then, we check if the length of the set is equal to the length of the original tuple. If they are equal, it means that there were no duplicates in the tuple, so the function returns True. Otherwise, it returns False.\n\nYou can test this function with your assertion:\n\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\nThis assertion will pass if the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check if given tuple contains no duplicates. Your code should satisfy the following assertion:\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\n    ### Response:\n Here is a Python function that checks if a given tuple contains no duplicates:\n\n```python\ndef check_distinct(t):\n    return len(t) == len(set(t))\n```\n\nThis function works by converting the tuple to a set. A set in Python is a collection type that is unordered and unindexed, and it cannot contain duplicate elements. By converting the tuple to a set, we automatically remove any duplicate elements. Then, we check if the length of the set is equal to the length of the original tuple. If they are equal, it means that there were no duplicates in the tuple, so the function returns True. Otherwise, it returns False.\n\nYou can test this function with your assertion:\n\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\nThis assertion will pass if the function is working correctly."}

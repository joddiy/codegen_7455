{"task_id": "Mbpp/279", "completion": "\n Here is a Python function that calculates the nth decagonal number:\n\n```python\ndef is_num_decagonal(n):\n    return n * ((3 * n) - 2)\n\nassert is_num_decagonal(3) == 27\n```\n\nThis function works by using the formula for the nth decagonal number, which is `n * ((3 * n) - 2)`. The `assert` statement is used to test the function with the given input. If the function returns the expected value, the `assert` statement will pass and the program will continue to run. If the function returns a different value, the `assert` statement will fail and the program will stop.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the nth decagonal number. Your code should satisfy the following assertion:\n```python\nassert is_num_decagonal(3) == 27\n```\n\n    ### Response:\n Here is a Python function that calculates the nth decagonal number:\n\n```python\ndef is_num_decagonal(n):\n    return n * ((3 * n) - 2)\n\nassert is_num_decagonal(3) == 27\n```\n\nThis function works by using the formula for the nth decagonal number, which is `n * ((3 * n) - 2)`. The `assert` statement is used to test the function with the given input. If the function returns the expected value, the `assert` statement will pass and the program will continue to run. If the function returns a different value, the `assert` statement will fail and the program will stop."}

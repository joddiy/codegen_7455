{"task_id": "Mbpp/94", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef index_minimum(lst):\n    return min(lst, key=lambda x: x[1])[0]\n\nassert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n```\n\nIn this script, the function `index_minimum` takes a list of tuples as input. It uses the built-in `min` function with a `key` parameter set to a lambda function that returns the second element of each tuple. The `min` function then returns the tuple with the smallest second element, and the function returns the first element of this tuple.\n\nThe assertion checks that the function returns the correct result for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. Your code should satisfy the following assertion:\n```python\nassert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef index_minimum(lst):\n    return min(lst, key=lambda x: x[1])[0]\n\nassert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n```\n\nIn this script, the function `index_minimum` takes a list of tuples as input. It uses the built-in `min` function with a `key` parameter set to a lambda function that returns the second element of each tuple. The `min` function then returns the tuple with the smallest second element, and the function returns the first element of this tuple.\n\nThe assertion checks that the function returns the correct result for the given input."}

{"task_id": "Mbpp/723", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef count_same_pair(list1, list2):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i]:\n            count += 1\n    return count\n```\n\nThis function iterates over the elements of the two lists simultaneously using a for loop. If the elements at the current index in both lists are the same, it increments the count. Finally, it returns the count.\n\nYou can test the function with the provided assertion:\n\n```python\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```\n\nThis should return `True` because the function correctly counts the number of indices where the two lists have the same values.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Your code should satisfy the following assertion:\n```python\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef count_same_pair(list1, list2):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i]:\n            count += 1\n    return count\n```\n\nThis function iterates over the elements of the two lists simultaneously using a for loop. If the elements at the current index in both lists are the same, it increments the count. Finally, it returns the count.\n\nYou can test the function with the provided assertion:\n\n```python\nassert count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])==4\n```\n\nThis should return `True` because the function correctly counts the number of indices where the two lists have the same values."}

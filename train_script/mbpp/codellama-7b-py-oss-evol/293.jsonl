{"task_id": "Mbpp/607", "completion": "\n Here is a Python script that solves the problem:\n\n```python\nimport re\n\ndef find_literals(text, pattern):\n    match = re.search(pattern, text)\n    if match:\n        return (match.group(), match.start(), match.end())\n    else:\n        return None\n\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```\n\nThis script uses the `re` module in Python, which provides support for regular expressions. The `re.search()` function is used to search the text for the pattern. If the pattern is found, it returns a match object, which contains the matched substring, the start index, and the end index. If the pattern is not found, it returns `None`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index. Your code should satisfy the following assertion:\n```python\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\nimport re\n\ndef find_literals(text, pattern):\n    match = re.search(pattern, text)\n    if match:\n        return (match.group(), match.start(), match.end())\n    else:\n        return None\n\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```\n\nThis script uses the `re` module in Python, which provides support for regular expressions. The `re.search()` function is used to search the text for the pattern. If the pattern is found, it returns a match object, which contains the matched substring, the start index, and the end index. If the pattern is not found, it returns `None`."}

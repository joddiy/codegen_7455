{"task_id": "Mbpp/446", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef count_Occurrence(tuple_list, elements):\n    count = 0\n    for element in elements:\n        count += tuple_list.count(element)\n    return count\n```\n\nThis function iterates over each element in the `elements` list and adds the count of that element in the `tuple_list` to the `count`. The function then returns the `count`.\n\nThe function can be tested with the provided assertion:\n\n```python\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3\n```\n\nThis assertion should pass, as there are three 'a's and one 'b' in the tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the occurence of all elements of list in a tuple. Your code should satisfy the following assertion:\n```python\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef count_Occurrence(tuple_list, elements):\n    count = 0\n    for element in elements:\n        count += tuple_list.count(element)\n    return count\n```\n\nThis function iterates over each element in the `elements` list and adds the count of that element in the `tuple_list` to the `count`. The function then returns the `count`.\n\nThe function can be tested with the provided assertion:\n\n```python\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3\n```\n\nThis assertion should pass, as there are three 'a's and one 'b' in the tuple."}

{"task_id": "Mbpp/598", "completion": "\n Here is a Python function that checks whether a given number is an Armstrong number or not. An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself. For example, 371 is an Armstrong number since 3**3 + 7**3 + 1**3 = 371.\n\n```python\ndef armstrong_number(n):\n    # Convert the number to a string to easily get each digit\n    str_n = str(n)\n    length = len(str_n)\n    sum = 0\n\n    # Calculate the sum of the cubes of each digit\n    for digit_str in str_n:\n        digit = int(digit_str)\n        sum += digit ** length\n\n    # If the calculated sum is equal to the original number, it's an Armstrong number\n    return sum == n\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert armstrong_number(153)==True\n```\n\nThis will return `True` because 153 is an Armstrong number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is armstrong or not. Your code should satisfy the following assertion:\n```python\nassert armstrong_number(153)==True\n```\n\n    ### Response:\n Here is a Python function that checks whether a given number is an Armstrong number or not. An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself. For example, 371 is an Armstrong number since 3**3 + 7**3 + 1**3 = 371.\n\n```python\ndef armstrong_number(n):\n    # Convert the number to a string to easily get each digit\n    str_n = str(n)\n    length = len(str_n)\n    sum = 0\n\n    # Calculate the sum of the cubes of each digit\n    for digit_str in str_n:\n        digit = int(digit_str)\n        sum += digit ** length\n\n    # If the calculated sum is equal to the original number, it's an Armstrong number\n    return sum == n\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert armstrong_number(153)==True\n```\n\nThis will return `True` because 153 is an Armstrong number."}

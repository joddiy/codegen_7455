{"task_id": "Mbpp/806", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef max_run_uppercase(s):\n    max_run = 0\n    current_run = 0\n    for char in s:\n        if char.isupper():\n            current_run += 1\n            max_run = max(max_run, current_run)\n        else:\n            current_run = 0\n    return max_run\n```\n\nThis function iterates over each character in the string. If the character is uppercase, it increments the current run and updates the maximum run if the current run is greater. If the character is not uppercase, it resets the current run to 0.\n\nThe function returns the maximum run of uppercase characters in the string.\n\nThe assertion checks if the function correctly identifies the maximum run of uppercase characters in the given string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find maximum run of uppercase characters in the given string. Your code should satisfy the following assertion:\n```python\nassert max_run_uppercase('GeMKSForGERksISBESt') == 5\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef max_run_uppercase(s):\n    max_run = 0\n    current_run = 0\n    for char in s:\n        if char.isupper():\n            current_run += 1\n            max_run = max(max_run, current_run)\n        else:\n            current_run = 0\n    return max_run\n```\n\nThis function iterates over each character in the string. If the character is uppercase, it increments the current run and updates the maximum run if the current run is greater. If the character is not uppercase, it resets the current run to 0.\n\nThe function returns the maximum run of uppercase characters in the string.\n\nThe assertion checks if the function correctly identifies the maximum run of uppercase characters in the given string."}

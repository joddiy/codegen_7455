{"task_id": "Mbpp/61", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef count_Substrings(s):\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if sum(int(c) for c in s[i:j]) == j-i:\n                count += 1\n    return count\n```\n\nThis function works by iterating over all possible substrings of the input string `s`. For each substring, it calculates the sum of its digits and checks if this sum is equal to the length of the substring. If it is, it increments a counter. Finally, it returns the counter.\n\nThe assertion `assert count_Substrings('112112') == 6` will pass if the function is correct.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of substrings with the sum of digits equal to their length. Your code should satisfy the following assertion:\n```python\nassert count_Substrings('112112') == 6\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef count_Substrings(s):\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if sum(int(c) for c in s[i:j]) == j-i:\n                count += 1\n    return count\n```\n\nThis function works by iterating over all possible substrings of the input string `s`. For each substring, it calculates the sum of its digits and checks if this sum is equal to the length of the substring. If it is, it increments a counter. Finally, it returns the counter.\n\nThe assertion `assert count_Substrings('112112') == 6` will pass if the function is correct."}

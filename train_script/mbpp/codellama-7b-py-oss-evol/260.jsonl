{"task_id": "Mbpp/569", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef sort_sublists(lst):\n    return [sorted(sublist) for sublist in lst]\n\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\nThis script defines a function `sort_sublists` that takes a list of lists of strings as input and returns a new list where each sublist is sorted in ascending order. The `assert` statement is used to test the function with the provided assertion.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort each sublist of strings in a given list of lists. Your code should satisfy the following assertion:\n```python\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef sort_sublists(lst):\n    return [sorted(sublist) for sublist in lst]\n\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\nThis script defines a function `sort_sublists` that takes a list of lists of strings as input and returns a new list where each sublist is sorted in ascending order. The `assert` statement is used to test the function with the provided assertion."}

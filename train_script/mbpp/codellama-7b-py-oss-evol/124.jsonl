{"task_id": "Mbpp/252", "completion": "\n Here is a Python function that converts complex numbers to polar coordinates:\n\n```python\nimport cmath\n\ndef convert(num):\n    return cmath.polar(num)\n```\n\nThe function `convert` takes a complex number as input and returns its polar coordinates as a tuple `(magnitude, angle)`. The `cmath.polar` function from the `cmath` module in Python is used to convert a complex number to polar coordinates.\n\nYou can test this function with the provided assertion:\n\n```python\nassert convert(1) == (1.0, 0.0)\n```\n\nThis assertion will pass if the function `convert` is correctly implemented.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to convert complex numbers to polar coordinates. Your code should satisfy the following assertion:\n```python\nassert convert(1) == (1.0, 0.0)\n```\n\n    ### Response:\n Here is a Python function that converts complex numbers to polar coordinates:\n\n```python\nimport cmath\n\ndef convert(num):\n    return cmath.polar(num)\n```\n\nThe function `convert` takes a complex number as input and returns its polar coordinates as a tuple `(magnitude, angle)`. The `cmath.polar` function from the `cmath` module in Python is used to convert a complex number to polar coordinates.\n\nYou can test this function with the provided assertion:\n\n```python\nassert convert(1) == (1.0, 0.0)\n```\n\nThis assertion will pass if the function `convert` is correctly implemented."}

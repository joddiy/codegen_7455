{"task_id": "Mbpp/640", "completion": "\n Here is a Python function that removes the text enclosed in parentheses from a string:\n\n```python\ndef remove_parenthesis(input_list):\n    output_list = []\n    for string in input_list:\n        new_string = ''.join(ch for ch in string if ch not in '()')\n        output_list.append(new_string)\n    return output_list\n```\n\nThis function works by iterating over each string in the input list. For each string, it creates a new string that consists of only the characters that are not parentheses. This new string is then appended to the output list.\n\nYou can test this function with your assertion:\n\n```python\nassert remove_parenthesis([\"python (chrome)\"])==(\"python\")\n```\n\nThis will return `True` if the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove the parenthesis and what is inbetween them from a string. Your code should satisfy the following assertion:\n```python\nassert remove_parenthesis([\"python (chrome)\"])==(\"python\")\n```\n\n    ### Response:\n Here is a Python function that removes the text enclosed in parentheses from a string:\n\n```python\ndef remove_parenthesis(input_list):\n    output_list = []\n    for string in input_list:\n        new_string = ''.join(ch for ch in string if ch not in '()')\n        output_list.append(new_string)\n    return output_list\n```\n\nThis function works by iterating over each string in the input list. For each string, it creates a new string that consists of only the characters that are not parentheses. This new string is then appended to the output list.\n\nYou can test this function with your assertion:\n\n```python\nassert remove_parenthesis([\"python (chrome)\"])==(\"python\")\n```\n\nThis will return `True` if the function is working correctly."}

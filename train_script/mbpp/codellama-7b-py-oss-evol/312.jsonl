{"task_id": "Mbpp/632", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef move_zero(lst):\n    return [i for i in lst if i != 0] + [0]*lst.count(0)\n```\n\nThis function works by using a list comprehension to create a new list that contains all elements that are not zero, followed by all zeroes. The `count(0)` method is used to count the number of zeroes in the original list.\n\nYou can test the function with the provided assertion:\n\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\nThis will return `True` if the function works as expected, and `False` otherwise.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to move all zeroes to the end of the given list. Your code should satisfy the following assertion:\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef move_zero(lst):\n    return [i for i in lst if i != 0] + [0]*lst.count(0)\n```\n\nThis function works by using a list comprehension to create a new list that contains all elements that are not zero, followed by all zeroes. The `count(0)` method is used to count the number of zeroes in the original list.\n\nYou can test the function with the provided assertion:\n\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\nThis will return `True` if the function works as expected, and `False` otherwise."}

{"task_id": "Mbpp/12", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef sort_matrix(matrix):\n    # Calculate the sum of each row\n    sums = [sum(row) for row in matrix]\n    # Sort the matrix based on the sums\n    sorted_matrix = [row for _, row in sorted(zip(sums, matrix))]\n    return sorted_matrix\n\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n```\n\nThis script works by first calculating the sum of each row in the matrix, then sorting the rows based on these sums. The sorted() function in Python returns a list of tuples, where the first element of each tuple is the sum of the row and the second element is the row itself. The zip() function combines these two lists into one list of tuples, and the list comprehension [row for _, row in sorted(zip(sums, matrix))] extracts the rows from this list of tuples.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort a given matrix in ascending order according to the sum of its rows. Your code should satisfy the following assertion:\n```python\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef sort_matrix(matrix):\n    # Calculate the sum of each row\n    sums = [sum(row) for row in matrix]\n    # Sort the matrix based on the sums\n    sorted_matrix = [row for _, row in sorted(zip(sums, matrix))]\n    return sorted_matrix\n\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n```\n\nThis script works by first calculating the sum of each row in the matrix, then sorting the rows based on these sums. The sorted() function in Python returns a list of tuples, where the first element of each tuple is the sum of the row and the second element is the row itself. The zip() function combines these two lists into one list of tuples, and the list comprehension [row for _, row in sorted(zip(sums, matrix))] extracts the rows from this list of tuples."}

{"task_id": "Mbpp/591", "completion": "\n Here is a Python function that fulfills the problem's requirements:\n\n```python\ndef swap_List(lst):\n    if len(lst) > 1:\n        lst[0], lst[-1] = lst[-1], lst[0]\n    return lst\n```\n\nThis function works by using Python's list slicing feature. It swaps the first and last elements of the list by assigning the last element to the first position and the first element to the last position.\n\nThe function first checks if the list has more than one element. If it does, it proceeds to swap the elements. If the list has only one element or is empty, it returns the list as is, because there's nothing to swap.\n\nThe function is then tested with the provided assertion:\n\n```python\nassert swap_List([12, 35, 9, 56, 24]) == [24, 35, 9, 56, 12]\n```\n\nIf the assertion passes, it means that the function is working correctly. If it fails, it means that there's a problem with the function.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to interchange the first and last elements in a list. Your code should satisfy the following assertion:\n```python\nassert swap_List([12, 35, 9, 56, 24]) == [24, 35, 9, 56, 12]\n```\n\n    ### Response:\n Here is a Python function that fulfills the problem's requirements:\n\n```python\ndef swap_List(lst):\n    if len(lst) > 1:\n        lst[0], lst[-1] = lst[-1], lst[0]\n    return lst\n```\n\nThis function works by using Python's list slicing feature. It swaps the first and last elements of the list by assigning the last element to the first position and the first element to the last position.\n\nThe function first checks if the list has more than one element. If it does, it proceeds to swap the elements. If the list has only one element or is empty, it returns the list as is, because there's nothing to swap.\n\nThe function is then tested with the provided assertion:\n\n```python\nassert swap_List([12, 35, 9, 56, 24]) == [24, 35, 9, 56, 12]\n```\n\nIf the assertion passes, it means that the function is working correctly. If it fails, it means that there's a problem with the function."}

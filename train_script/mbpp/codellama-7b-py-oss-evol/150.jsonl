{"task_id": "Mbpp/282", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef sub_list(list1, list2):\n    assert len(list1) == len(list2), \"Lists must be of the same length\"\n    return [a - b for a, b in zip(list1, list2)]\n```\n\nThis function uses list comprehension to create a new list, where each element is the result of subtracting the corresponding elements from the two input lists. The `zip` function is used to iterate over the two lists simultaneously.\n\nThe function also includes an assertion to check that the input lists are of the same length. If they are not, the function will raise an AssertionError with a message indicating the problem.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to subtract two lists element-wise. Your code should satisfy the following assertion:\n```python\nassert sub_list([1, 2, 3],[4,5,6])==[-3,-3,-3]\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef sub_list(list1, list2):\n    assert len(list1) == len(list2), \"Lists must be of the same length\"\n    return [a - b for a, b in zip(list1, list2)]\n```\n\nThis function uses list comprehension to create a new list, where each element is the result of subtracting the corresponding elements from the two input lists. The `zip` function is used to iterate over the two lists simultaneously.\n\nThe function also includes an assertion to check that the input lists are of the same length. If they are not, the function will raise an AssertionError with a message indicating the problem."}

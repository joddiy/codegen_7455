{"task_id": "Mbpp/425", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef count_element_in_list(lst, elem):\n    count = 0\n    for sublist in lst:\n        if elem in sublist:\n            count += 1\n    return count\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```\n\nThis function iterates over each sublist in the input list. If the input element is found in a sublist, it increments the count. The function then returns the count.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to count the number of sublists containing a particular element. Your code should satisfy the following assertion:\n```python\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef count_element_in_list(lst, elem):\n    count = 0\n    for sublist in lst:\n        if elem in sublist:\n            count += 1\n    return count\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3\n```\n\nThis function iterates over each sublist in the input list. If the input element is found in a sublist, it increments the count. The function then returns the count."}

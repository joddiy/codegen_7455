{"task_id": "Mbpp/796", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef return_sum(dictionary):\n    return sum(dictionary.values())\n```\n\nThis function uses the built-in `sum()` function in Python, which adds up all the values in a list. The `values()` method of a dictionary returns a list of all values in the dictionary.\n\nYou can test the function with the provided assertion:\n\n```python\nassert return_sum({'a': 100, 'b':200, 'c':300}) == 600\n```\n\nIf the assertion is true, the `assert` statement will not do anything. If it's false, Python will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write function to find the sum of all items in the given dictionary. Your code should satisfy the following assertion:\n```python\nassert return_sum({'a': 100, 'b':200, 'c':300}) == 600\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef return_sum(dictionary):\n    return sum(dictionary.values())\n```\n\nThis function uses the built-in `sum()` function in Python, which adds up all the values in a list. The `values()` method of a dictionary returns a list of all values in the dictionary.\n\nYou can test the function with the provided assertion:\n\n```python\nassert return_sum({'a': 100, 'b':200, 'c':300}) == 600\n```\n\nIf the assertion is true, the `assert` statement will not do anything. If it's false, Python will raise an `AssertionError`."}

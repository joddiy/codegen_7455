{"task_id": "Mbpp/783", "completion": "\n Here is a Python function that converts RGB color to HSV color:\n\n```python\ndef rgb_to_hsv(r, g, b):\n    r, g, b = r/255.0, g/255.0, b/255.0\n    mx, mn = max(r, g, b), min(r, g, b)\n    df = mx-mn\n    if mx == mn:\n        h = 0\n    elif mx == r:\n        h = (60 * ((g-b)/df) + 360) % 360\n    elif mx == g:\n        h = (60 * ((b-r)/df) + 120) % 360\n    elif mx == b:\n        h = (60 * ((r-g)/df) + 240) % 360\n    if mx == 0:\n        s = 0\n    else:\n        s = df/mx\n    v = mx\n    return round(h, 1), round(s*100, 1), round(v*100, 1)\n```\n\nThis function first normalizes the RGB values to the range [0, 1]. Then it calculates the maximum and minimum values, and the difference between them. The hue is calculated based on the maximum and minimum values and the difference. The saturation is calculated as the difference divided by the maximum. The value is the maximum. Finally, the function rounds the results to one decimal place and returns them.\n\nThe provided assertion should pass:\n\n```python\nassert rgb_to_hsv(255, 255, 255)==(0, 0.0, 100.0)\n```\n\nThis assertion checks that the function correctly converts white (255, 255, 255) to black (0, 0, 0) in the HSV color model.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/. Your code should satisfy the following assertion:\n```python\nassert rgb_to_hsv(255, 255, 255)==(0, 0.0, 100.0)\n```\n\n    ### Response:\n Here is a Python function that converts RGB color to HSV color:\n\n```python\ndef rgb_to_hsv(r, g, b):\n    r, g, b = r/255.0, g/255.0, b/255.0\n    mx, mn = max(r, g, b), min(r, g, b)\n    df = mx-mn\n    if mx == mn:\n        h = 0\n    elif mx == r:\n        h = (60 * ((g-b)/df) + 360) % 360\n    elif mx == g:\n        h = (60 * ((b-r)/df) + 120) % 360\n    elif mx == b:\n        h = (60 * ((r-g)/df) + 240) % 360\n    if mx == 0:\n        s = 0\n    else:\n        s = df/mx\n    v = mx\n    return round(h, 1), round(s*100, 1), round(v*100, 1)\n```\n\nThis function first normalizes the RGB values to the range [0, 1]. Then it calculates the maximum and minimum values, and the difference between them. The hue is calculated based on the maximum and minimum values and the difference. The saturation is calculated as the difference divided by the maximum. The value is the maximum. Finally, the function rounds the results to one decimal place and returns them.\n\nThe provided assertion should pass:\n\n```python\nassert rgb_to_hsv(255, 255, 255)==(0, 0.0, 100.0)\n```\n\nThis assertion checks that the function correctly converts white (255, 255, 255) to black (0, 0, 0) in the HSV color model."}

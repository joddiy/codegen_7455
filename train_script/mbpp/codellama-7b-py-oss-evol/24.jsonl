{"task_id": "Mbpp/66", "completion": "\n Here is a simple Python function that solves the problem:\n\n```python\ndef pos_count(lst):\n    return sum(1 for num in lst if num > 0)\n```\n\nThis function uses a generator expression to iterate over the list and count the number of positive numbers. The `sum` function adds up the results, effectively counting the positive numbers.\n\nYou can test the function with the provided assertion:\n\n```python\nassert pos_count([1,-2,3,-4]) == 2\n```\n\nIf the assertion is true, the function will return 2, otherwise it will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of positive numbers in a list. Your code should satisfy the following assertion:\n```python\nassert pos_count([1,-2,3,-4]) == 2\n```\n\n    ### Response:\n Here is a simple Python function that solves the problem:\n\n```python\ndef pos_count(lst):\n    return sum(1 for num in lst if num > 0)\n```\n\nThis function uses a generator expression to iterate over the list and count the number of positive numbers. The `sum` function adds up the results, effectively counting the positive numbers.\n\nYou can test the function with the provided assertion:\n\n```python\nassert pos_count([1,-2,3,-4]) == 2\n```\n\nIf the assertion is true, the function will return 2, otherwise it will raise an `AssertionError`."}

{"task_id": "Mbpp/129", "completion": "\n Here is a Python function that checks if a given 2D list represents a magic square:\n\n```python\ndef magic_square_test(matrix):\n    # Check if the matrix is a square\n    if len(matrix) != len(matrix[0]):\n        return False\n\n    # Check if the sum of each row is the same\n    row_sum = sum(matrix[0])\n    for row in matrix:\n        if sum(row) != row_sum:\n            return False\n\n    # Check if the sum of each column is the same\n    col_sum = sum(matrix[0][i] for i in range(len(matrix)))\n    for col in range(len(matrix)):\n        if sum(matrix[row][col] for row in range(len(matrix))) != col_sum:\n            return False\n\n    # Check if the sum of the diagonals is the same\n    if sum(matrix[i][i] for i in range(len(matrix))) != row_sum:\n        return False\n\n    if sum(matrix[i][len(matrix)-i-1] for i in range(len(matrix))) != row_sum:\n        return False\n\n    return True\n```\n\nThis function first checks if the matrix is a square, i.e., if the number of rows is equal to the number of columns. If not, it returns `False`. Then it checks if the sum of each row, each column, and both diagonals is the same. If all these conditions are satisfied, the function returns `True`, indicating that the matrix is a magic square. Otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n    ### Response:\n Here is a Python function that checks if a given 2D list represents a magic square:\n\n```python\ndef magic_square_test(matrix):\n    # Check if the matrix is a square\n    if len(matrix) != len(matrix[0]):\n        return False\n\n    # Check if the sum of each row is the same\n    row_sum = sum(matrix[0])\n    for row in matrix:\n        if sum(row) != row_sum:\n            return False\n\n    # Check if the sum of each column is the same\n    col_sum = sum(matrix[0][i] for i in range(len(matrix)))\n    for col in range(len(matrix)):\n        if sum(matrix[row][col] for row in range(len(matrix))) != col_sum:\n            return False\n\n    # Check if the sum of the diagonals is the same\n    if sum(matrix[i][i] for i in range(len(matrix))) != row_sum:\n        return False\n\n    if sum(matrix[i][len(matrix)-i-1] for i in range(len(matrix))) != row_sum:\n        return False\n\n    return True\n```\n\nThis function first checks if the matrix is a square, i.e., if the number of rows is equal to the number of columns. If not, it returns `False`. Then it checks if the sum of each row, each column, and both diagonals is the same. If all these conditions are satisfied, the function returns `True`, indicating that the matrix is a magic square. Otherwise, it returns `False`."}

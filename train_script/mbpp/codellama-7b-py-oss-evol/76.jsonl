{"task_id": "Mbpp/128", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef long_words(n, sentence):\n    words = sentence.split()\n    return [word for word in words if len(word) > n]\n\nassert long_words(3, \"python is a programming language\") == ['python', 'programming', 'language']\n```\n\nIn this function, we first split the sentence into words using the `split()` method. Then we use a list comprehension to create a new list that only includes words that are longer than `n` characters. The `len(word)` function is used to get the length of each word, and `len(word) > n` is a condition that is `True` for words that are longer than `n` characters.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find words that are longer than n characters from a given list of words. Your code should satisfy the following assertion:\n```python\nassert long_words(3,\"python is a programming language\")==['python','programming','language']\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef long_words(n, sentence):\n    words = sentence.split()\n    return [word for word in words if len(word) > n]\n\nassert long_words(3, \"python is a programming language\") == ['python', 'programming', 'language']\n```\n\nIn this function, we first split the sentence into words using the `split()` method. Then we use a list comprehension to create a new list that only includes words that are longer than `n` characters. The `len(word)` function is used to get the length of each word, and `len(word) > n` is a condition that is `True` for words that are longer than `n` characters."}

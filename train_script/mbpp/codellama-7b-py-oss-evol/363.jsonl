{"task_id": "Mbpp/767", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef get_pairs_count(nums, sum):\n    count = 0\n    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            count += nums_dict[num]\n        nums_dict[sum - num] = nums_dict.get(sum - num, 0) + 1\n    return count\n```\n\nThis function works by iterating over the list of numbers. For each number, it checks if the complement (the number needed to reach the sum) is in the dictionary. If it is, it increments the count by the number of times the complement appears in the dictionary. It then updates the dictionary to include the current number and the number of times it appears.\n\nThe function returns the count of pairs whose sum is equal to the given sum.\n\nThe function satisfies the given assertion:\n\n```python\nassert get_pairs_count([1,1,1,1],2) == 6\n```\n\nThis assertion checks that the function returns 6, which is the correct number of pairs whose sum is 2 in the list [1,1,1,1].", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,. Your code should satisfy the following assertion:\n```python\nassert get_pairs_count([1,1,1,1],2) == 6\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef get_pairs_count(nums, sum):\n    count = 0\n    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            count += nums_dict[num]\n        nums_dict[sum - num] = nums_dict.get(sum - num, 0) + 1\n    return count\n```\n\nThis function works by iterating over the list of numbers. For each number, it checks if the complement (the number needed to reach the sum) is in the dictionary. If it is, it increments the count by the number of times the complement appears in the dictionary. It then updates the dictionary to include the current number and the number of times it appears.\n\nThe function returns the count of pairs whose sum is equal to the given sum.\n\nThe function satisfies the given assertion:\n\n```python\nassert get_pairs_count([1,1,1,1],2) == 6\n```\n\nThis assertion checks that the function returns 6, which is the correct number of pairs whose sum is 2 in the list [1,1,1,1]."}

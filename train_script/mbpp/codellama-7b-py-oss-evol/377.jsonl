{"task_id": "Mbpp/785", "completion": "\n Here is a simple Python function that converts a tuple string to an integer tuple:\n\n```python\ndef tuple_str_int(tup_str):\n    # Remove the parentheses and split the string by comma\n    str_list = tup_str.replace(\"(\", \"\").replace(\")\", \"\").split(\",\")\n    \n    # Convert each string to integer and return as a tuple\n    return tuple(int(i) for i in str_list)\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\nThis function works by first removing the parentheses from the input string and then splitting the string by commas. It then converts each string in the list to an integer and returns the result as a tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert tuple string to integer tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\n    ### Response:\n Here is a simple Python function that converts a tuple string to an integer tuple:\n\n```python\ndef tuple_str_int(tup_str):\n    # Remove the parentheses and split the string by comma\n    str_list = tup_str.replace(\"(\", \"\").replace(\")\", \"\").split(\",\")\n    \n    # Convert each string to integer and return as a tuple\n    return tuple(int(i) for i in str_list)\n```\n\nYou can test this function with the provided assertion:\n\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\nThis function works by first removing the parentheses from the input string and then splitting the string by commas. It then converts each string in the list to an integer and returns the result as a tuple."}

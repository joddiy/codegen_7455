{"task_id": "Mbpp/728", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef sum_list(list1, list2):\n    return [a+b for a, b in zip(list1, list2)]\n```\n\nThis function uses the `zip` function to pair up the elements from the two input lists, and then uses a list comprehension to add each pair of numbers together.\n\nYou can test this function with the provided assertion:\n\n```python\nassert sum_list([10,20,30],[15,25,35])==[25,45,65]\n```\n\nIf the assertion is true, the `assert` statement will pass without any errors. If the assertion is false, the `assert` statement will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Your code should satisfy the following assertion:\n```python\nassert sum_list([10,20,30],[15,25,35])==[25,45,65]\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef sum_list(list1, list2):\n    return [a+b for a, b in zip(list1, list2)]\n```\n\nThis function uses the `zip` function to pair up the elements from the two input lists, and then uses a list comprehension to add each pair of numbers together.\n\nYou can test this function with the provided assertion:\n\n```python\nassert sum_list([10,20,30],[15,25,35])==[25,45,65]\n```\n\nIf the assertion is true, the `assert` statement will pass without any errors. If the assertion is false, the `assert` statement will raise an `AssertionError`."}

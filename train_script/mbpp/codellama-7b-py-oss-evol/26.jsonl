{"task_id": "Mbpp/68", "completion": "\n Here is a Python function that checks whether the given array is monotonic or not:\n\n```python\ndef is_Monotonic(arr):\n    return all(arr[i] <= arr[i + 1] for i in range(len(arr) - 1)) or all(arr[i] >= arr[i + 1] for i in range(len(arr) - 1))\n```\n\nThis function works by checking each pair of adjacent elements in the array. If all pairs are in increasing order (or decreasing order), the function returns True, meaning the array is monotonic. If not, it returns False.\n\nYou can test this function with the provided assertion:\n\n```python\nassert is_Monotonic([6, 5, 4, 4]) == True\n```\n\nThis assertion should pass, because the array [6, 5, 4, 4] is monotonic (increasing).", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether the given array is monotonic or not. Your code should satisfy the following assertion:\n```python\nassert is_Monotonic([6, 5, 4, 4]) == True\n```\n\n    ### Response:\n Here is a Python function that checks whether the given array is monotonic or not:\n\n```python\ndef is_Monotonic(arr):\n    return all(arr[i] <= arr[i + 1] for i in range(len(arr) - 1)) or all(arr[i] >= arr[i + 1] for i in range(len(arr) - 1))\n```\n\nThis function works by checking each pair of adjacent elements in the array. If all pairs are in increasing order (or decreasing order), the function returns True, meaning the array is monotonic. If not, it returns False.\n\nYou can test this function with the provided assertion:\n\n```python\nassert is_Monotonic([6, 5, 4, 4]) == True\n```\n\nThis assertion should pass, because the array [6, 5, 4, 4] is monotonic (increasing)."}

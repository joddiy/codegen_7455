{"task_id": "Mbpp/639", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef sample_nam(names):\n    sum_length = 0\n    for name in names:\n        if name[0].isupper():\n            sum_length += len(name)\n    return sum_length\n```\n\nThis function iterates over each name in the given list. If the first character of a name is an uppercase letter (i.e., it does not start with a lowercase letter), it adds the length of that name to the sum.\n\nThe assertion checks if the function `sample_nam` returns the correct sum of the lengths of the names in the list. If the function returns the correct value, the assertion will pass. If the function returns a different value, the assertion will fail.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter. Your code should satisfy the following assertion:\n```python\nassert sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef sample_nam(names):\n    sum_length = 0\n    for name in names:\n        if name[0].isupper():\n            sum_length += len(name)\n    return sum_length\n```\n\nThis function iterates over each name in the given list. If the first character of a name is an uppercase letter (i.e., it does not start with a lowercase letter), it adds the length of that name to the sum.\n\nThe assertion checks if the function `sample_nam` returns the correct sum of the lengths of the names in the list. If the function returns the correct value, the assertion will pass. If the function returns a different value, the assertion will fail."}

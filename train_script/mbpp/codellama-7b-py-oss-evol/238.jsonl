{"task_id": "Mbpp/472", "completion": "\n Here is a Python function that checks whether the given list contains consecutive numbers or not.\n\n```python\ndef check_Consecutive(lst):\n    return all(lst[i] == lst[i+1]-1 for i in range(len(lst)-1))\n```\n\nThis function uses a list comprehension to check each pair of consecutive numbers in the list. The `all` function returns `True` if all elements in the iterable are true. If there is any pair of consecutive numbers that are not consecutive in the list, `all` will return `False`.\n\nYou can test this function with the provided assertion:\n\n```python\nassert check_Consecutive([1,2,3,4,5]) == True\n```\n\nThis assertion should pass, because the list [1,2,3,4,5] contains consecutive numbers.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether the given list contains consecutive numbers or not. Your code should satisfy the following assertion:\n```python\nassert check_Consecutive([1,2,3,4,5]) == True\n```\n\n    ### Response:\n Here is a Python function that checks whether the given list contains consecutive numbers or not.\n\n```python\ndef check_Consecutive(lst):\n    return all(lst[i] == lst[i+1]-1 for i in range(len(lst)-1))\n```\n\nThis function uses a list comprehension to check each pair of consecutive numbers in the list. The `all` function returns `True` if all elements in the iterable are true. If there is any pair of consecutive numbers that are not consecutive in the list, `all` will return `False`.\n\nYou can test this function with the provided assertion:\n\n```python\nassert check_Consecutive([1,2,3,4,5]) == True\n```\n\nThis assertion should pass, because the list [1,2,3,4,5] contains consecutive numbers."}

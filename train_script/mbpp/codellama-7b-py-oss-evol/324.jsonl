{"task_id": "Mbpp/722", "completion": "\n Here is a Python script that solves the problem:\n\n```python\ndef filter_data(data, min_height, min_weight):\n    return {name: info for name, info in data.items() if info[0] > min_height and info[1] > min_weight}\n\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```\n\nIn this script, the function `filter_data` takes a dictionary `data`, a `min_height`, and a `min_weight` as input. It then uses a dictionary comprehension to create a new dictionary that only includes the items from the original dictionary where the student's height and weight are both greater than the provided minimum values. The function returns this new dictionary.\n\nThe `assert` statement is used to test the function with the provided assertion. If the function returns the expected result, the `assert` statement will pass without any errors. If the function returns a different result, the `assert` statement will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Your code should satisfy the following assertion:\n```python\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```\n\n    ### Response:\n Here is a Python script that solves the problem:\n\n```python\ndef filter_data(data, min_height, min_weight):\n    return {name: info for name, info in data.items() if info[0] > min_height and info[1] > min_weight}\n\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```\n\nIn this script, the function `filter_data` takes a dictionary `data`, a `min_height`, and a `min_weight` as input. It then uses a dictionary comprehension to create a new dictionary that only includes the items from the original dictionary where the student's height and weight are both greater than the provided minimum values. The function returns this new dictionary.\n\nThe `assert` statement is used to test the function with the provided assertion. If the function returns the expected result, the `assert` statement will pass without any errors. If the function returns a different result, the `assert` statement will raise an `AssertionError`."}

{"task_id": "Mbpp/805", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef max_sum_list(lst):\n    return max(lst, key=sum)\n```\n\nThis function uses the built-in `max` function in Python, which returns the largest item in an iterable or the largest of two or more arguments. The `key` argument to `max` specifies a function of one argument that is used to extract a comparison key from each input element. In this case, `sum` is used as the key function, which means that `max` will return the list with the highest sum of elements.\n\nYou can test the function with the provided assertion:\n\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\nThis will return `True` if the function is correct, and `False` otherwise.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that returns the list in a list of lists whose sum of elements is the highest. Your code should satisfy the following assertion:\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef max_sum_list(lst):\n    return max(lst, key=sum)\n```\n\nThis function uses the built-in `max` function in Python, which returns the largest item in an iterable or the largest of two or more arguments. The `key` argument to `max` specifies a function of one argument that is used to extract a comparison key from each input element. In this case, `sum` is used as the key function, which means that `max` will return the list with the highest sum of elements.\n\nYou can test the function with the provided assertion:\n\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\nThis will return `True` if the function is correct, and `False` otherwise."}

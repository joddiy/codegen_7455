{"task_id": "Mbpp/573", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef unique_product(lst):\n    unique_nums = list(set(lst))\n    product = 1\n    for num in unique_nums:\n        product *= num\n    return product\n```\n\nThis function first removes duplicates from the list by converting it to a set, then converting it back to a list. It then calculates the product of the unique numbers in the list.\n\nThe assertion checks if the function `unique_product` returns the correct result for the given list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to calculate the product of the unique numbers in a given list. Your code should satisfy the following assertion:\n```python\nassert unique_product([10, 20, 30, 40, 20, 50, 60, 40]) ==  720000000\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef unique_product(lst):\n    unique_nums = list(set(lst))\n    product = 1\n    for num in unique_nums:\n        product *= num\n    return product\n```\n\nThis function first removes duplicates from the list by converting it to a set, then converting it back to a list. It then calculates the product of the unique numbers in the list.\n\nThe assertion checks if the function `unique_product` returns the correct result for the given list."}

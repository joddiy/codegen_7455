{"task_id": "Mbpp/619", "completion": "\n Here is a Python function that solves the problem:\n\n```python\ndef move_num(s):\n    nums = [ch for ch in s if ch.isdigit()]\n    alphas = [ch for ch in s if ch.isalpha()]\n    return ''.join(alphas + nums)\n```\n\nThis function works by first creating two lists: one for all the digits in the string (`nums`), and one for all the letters in the string (`alphas`). It then concatenates the two lists together and returns the result.\n\nYou can test this function with your assertion like this:\n\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\nIf the assertion passes, it means that the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to move all the numbers to the end of the given string. Your code should satisfy the following assertion:\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\n    ### Response:\n Here is a Python function that solves the problem:\n\n```python\ndef move_num(s):\n    nums = [ch for ch in s if ch.isdigit()]\n    alphas = [ch for ch in s if ch.isalpha()]\n    return ''.join(alphas + nums)\n```\n\nThis function works by first creating two lists: one for all the digits in the string (`nums`), and one for all the letters in the string (`alphas`). It then concatenates the two lists together and returns the result.\n\nYou can test this function with your assertion like this:\n\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\nIf the assertion passes, it means that the function is working correctly."}

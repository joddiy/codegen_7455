{"task_id": "Mbpp/461", "completion": "\n Here is a Python function that counts the upper case characters in a given string:\n\n```python\ndef upper_ctr(s):\n    return sum(1 for c in s if c.isupper())\n```\n\nThis function uses a generator expression to iterate over each character in the string `s`. The `isupper()` method returns `True` if the character is an uppercase letter, and `False` otherwise. The `sum()` function adds up the `1`s produced by the generator expression, effectively counting the number of uppercase letters.\n\nYou can test this function with the provided assertion:\n\n```python\nassert upper_ctr('PYthon') == 1\n```\n\nThis will pass if the function is implemented correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the upper case characters in a given string. Your code should satisfy the following assertion:\n```python\nassert upper_ctr('PYthon') == 1\n```\n\n    ### Response:\n Here is a Python function that counts the upper case characters in a given string:\n\n```python\ndef upper_ctr(s):\n    return sum(1 for c in s if c.isupper())\n```\n\nThis function uses a generator expression to iterate over each character in the string `s`. The `isupper()` method returns `True` if the character is an uppercase letter, and `False` otherwise. The `sum()` function adds up the `1`s produced by the generator expression, effectively counting the number of uppercase letters.\n\nYou can test this function with the provided assertion:\n\n```python\nassert upper_ctr('PYthon') == 1\n```\n\nThis will pass if the function is implemented correctly."}

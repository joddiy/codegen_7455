{"task_id": "Mbpp/129", "completion": "\n    ```python\n    def magic_square_test(matrix):\n        if len(matrix) == 0:\n            return False\n        n = len(matrix)\n        if n % 2 == 0:\n            return False\n        if sum(matrix[0]) != sum(matrix[n - 1]):\n            return False\n        if sum(matrix[0][0] for row in matrix) != sum(matrix[n - 1][n - 1] for row in matrix):\n            return False\n        if sum(row[n - 1] for row in matrix) != sum(row[0] for row in matrix):\n            return False\n        return True\n    ```\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n    ### Response:\n    ```python\n    def magic_square_test(matrix):\n        if len(matrix) == 0:\n            return False\n        n = len(matrix)\n        if n % 2 == 0:\n            return False\n        if sum(matrix[0]) != sum(matrix[n - 1]):\n            return False\n        if sum(matrix[0][0] for row in matrix) != sum(matrix[n - 1][n - 1] for row in matrix):\n            return False\n        if sum(row[n - 1] for row in matrix) != sum(row[0] for row in matrix):\n            return False\n        return True\n    ```\n"}

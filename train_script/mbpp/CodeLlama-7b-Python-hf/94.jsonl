{"task_id": "Mbpp/164", "completion": "\n    ```python\n    def are_equivalent(a, b):\n        return sum(get_divisors(a)) == sum(get_divisors(b))\n\n    def get_divisors(n):\n        return [i for i in range(1, n + 1) if n % i == 0]\n    ```\n\n    ### Explanation:\n    The function `get_divisors` returns a list of all the divisors of a number.\n    The function `are_equivalent` returns `True` if the sum of the divisors of two numbers are the same.\n    The assertion is satisfied.\n\n    ### Additional Resources:\n    - [Divisors](https://en.wikipedia.org/wiki/Divisor)\n    - [Sum of divisors](https://en.wikipedia.org/wiki/Divisor_function)\n\n", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to determine if the sum of the divisors of two integers are the same. Your code should satisfy the following assertion:\n```python\nassert are_equivalent(36, 57) == False\n```\n\n    ### Response:\n    ```python\n    def are_equivalent(a, b):\n        return sum(get_divisors(a)) == sum(get_divisors(b))\n\n    def get_divisors(n):\n        return [i for i in range(1, n + 1) if n % i == 0]\n    ```\n\n    ### Explanation:\n    The function `get_divisors` returns a list of all the divisors of a number.\n    The function `are_equivalent` returns `True` if the sum of the divisors of two numbers are the same.\n    The assertion is satisfied.\n\n    ### Additional Resources:\n    - [Divisors](https://en.wikipedia.org/wiki/Divisor)\n    - [Sum of divisors](https://en.wikipedia.org/wiki/Divisor_function)\n\n"}

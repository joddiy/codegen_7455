{"task_id": "Mbpp/4", "completion": "\n    ```python\n    def heap_queue_largest(nums, n):\n        heap = []\n        for num in nums:\n            heapq.heappush(heap, num)\n            if len(heap) > n:\n                heapq.heappop(heap)\n        return heap[::-1]\n    ```\n\n    ### Explanation:\n    The heapq module provides a heap data structure. A heap is a specialized tree-based data structure which is nearly fully sorted. The heapq module provides a heap implementation with priority queue methods.\n\n    The heapq.heappush() method adds a new element to the heap.\n\n    The heapq.heappop() method removes the smallest element from the heap and returns it.\n\n    The heapq.heapify() method transforms a list into a heap, in-place, in linear time.\n\n    The heapq.nlargest() method returns the n largest elements from a list.\n\n    The heapq.nsmallest() method returns the n smallest elements from a list.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.nsmallest() method returns the n smallest elements from a list.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the n largest integers from a given list of numbers, returned in descending order. Your code should satisfy the following assertion:\n```python\nassert heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]\n```\n\n    ### Response:\n    ```python\n    def heap_queue_largest(nums, n):\n        heap = []\n        for num in nums:\n            heapq.heappush(heap, num)\n            if len(heap) > n:\n                heapq.heappop(heap)\n        return heap[::-1]\n    ```\n\n    ### Explanation:\n    The heapq module provides a heap data structure. A heap is a specialized tree-based data structure which is nearly fully sorted. The heapq module provides a heap implementation with priority queue methods.\n\n    The heapq.heappush() method adds a new element to the heap.\n\n    The heapq.heappop() method removes the smallest element from the heap and returns it.\n\n    The heapq.heapify() method transforms a list into a heap, in-place, in linear time.\n\n    The heapq.nlargest() method returns the n largest elements from a list.\n\n    The heapq.nsmallest() method returns the n smallest elements from a list.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.nsmallest() method returns the n smallest elements from a list.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more sorted iterables into a single sorted iterable.\n\n    The heapq.merge() method merges two or more"}

{"task_id": "Mbpp/580", "completion": "\n    ```python\ndef extract_even(nested_tuple):\n    if isinstance(nested_tuple, tuple):\n        return tuple(extract_even(item) if isinstance(item, tuple) else item for item in nested_tuple if item % 2 == 0)\n    else:\n        return nested_tuple\n```\n\nThe `extract_even` function takes a nested tuple as input and recursively iterates through its elements. If an element is a tuple, it calls itself recursively. If the element is not a tuple, it checks if it's even and includes it in the result if it is. The function returns the resulting tuple after processing all elements. The provided assertion ensures that the function correctly removes uneven elements from the nested tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove uneven elements in the nested mixed tuple. Your code should satisfy the following assertion:\n```python\nassert extract_even((4, 5, (7, 6, (2, 4)), 6, 8)) == (4, (6, (2, 4)), 6, 8)\n```\n\n    ### Response:\n    ```python\ndef extract_even(nested_tuple):\n    if isinstance(nested_tuple, tuple):\n        return tuple(extract_even(item) if isinstance(item, tuple) else item for item in nested_tuple if item % 2 == 0)\n    else:\n        return nested_tuple\n```\n\nThe `extract_even` function takes a nested tuple as input and recursively iterates through its elements. If an element is a tuple, it calls itself recursively. If the element is not a tuple, it checks if it's even and includes it in the result if it is. The function returns the resulting tuple after processing all elements. The provided assertion ensures that the function correctly removes uneven elements from the nested tuple."}

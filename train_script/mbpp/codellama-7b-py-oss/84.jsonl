{"task_id": "Mbpp/138", "completion": "\n    ```python\ndef is_Sum_Of_Powers_Of_Two(n):\n    if n == 0 or n == 1:\n        return True\n    if n % 2 == 1:\n        return False\n    n = n // 2\n    return is_Sum_Of_Powers_Of_Two(n)\n```\n\nThe provided solution defines a function `is_Sum_Of_Powers_Of_Two` that takes a number `n` as input. It first checks if `n` is 0 or 1, in which case it returns True. If `n` is odd, it returns False. If `n` is even, it divides `n` by 2 and recursively calls the function until `n` becomes 1. The function returns True if the given number can be represented as sum of non-zero powers of 2, and False otherwise.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not. Your code should satisfy the following assertion:\n```python\nassert is_Sum_Of_Powers_Of_Two(10) == True\n```\n\n    ### Response:\n    ```python\ndef is_Sum_Of_Powers_Of_Two(n):\n    if n == 0 or n == 1:\n        return True\n    if n % 2 == 1:\n        return False\n    n = n // 2\n    return is_Sum_Of_Powers_Of_Two(n)\n```\n\nThe provided solution defines a function `is_Sum_Of_Powers_Of_Two` that takes a number `n` as input. It first checks if `n` is 0 or 1, in which case it returns True. If `n` is odd, it returns False. If `n` is even, it divides `n` by 2 and recursively calls the function until `n` becomes 1. The function returns True if the given number can be represented as sum of non-zero powers of 2, and False otherwise."}

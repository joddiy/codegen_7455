{"task_id": "Mbpp/767", "completion": "\n    ```python\ndef get_pairs_count(numbers, sum):\n    count = 0\n    seen = set()\n    for num in numbers:\n        complement = sum - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count\n```\nThe `get_pairs_count` function iterates through the input list of numbers. For each number, it calculates the complement required to reach the given sum. If the complement is found in the set of seen numbers, it increments the count. Finally, it adds the current number to the set of seen numbers. The function returns the total count of pairs whose sum is equal to the given sum.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,. Your code should satisfy the following assertion:\n```python\nassert get_pairs_count([1,1,1,1],2) == 6\n```\n\n    ### Response:\n    ```python\ndef get_pairs_count(numbers, sum):\n    count = 0\n    seen = set()\n    for num in numbers:\n        complement = sum - num\n        if complement in seen:\n            count += 1\n        seen.add(num)\n    return count\n```\nThe `get_pairs_count` function iterates through the input list of numbers. For each number, it calculates the complement required to reach the given sum. If the complement is found in the set of seen numbers, it increments the count. Finally, it adds the current number to the set of seen numbers. The function returns the total count of pairs whose sum is equal to the given sum."}

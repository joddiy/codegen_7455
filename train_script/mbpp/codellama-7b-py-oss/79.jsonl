{"task_id": "Mbpp/131", "completion": "\n    ```python\ndef reverse_vowels(s):\n    vowels = \"aeiouAEIOU\"\n    s = list(s)\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] not in vowels:\n            i += 1\n        elif s[j] not in vowels:\n            j -= 1\n        else:\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n    return ''.join(s)\n\n# Test the function with the provided assertion\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\nThe `reverse_vowels` function takes a string `s` as input and reverses only the vowels in the string. It uses two pointers, `i` and `j`, to traverse the string from the beginning and end respectively. If the character at index `i` is not a vowel, it increments `i`. If the character at index `j` is not a vowel, it decrements `j`. If both characters are vowels, they are swapped, and then `i` and `j` are incremented by 1. Finally, the function returns the modified string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to reverse only the vowels of a given string (where y is not a vowel). Your code should satisfy the following assertion:\n```python\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\n    ### Response:\n    ```python\ndef reverse_vowels(s):\n    vowels = \"aeiouAEIOU\"\n    s = list(s)\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] not in vowels:\n            i += 1\n        elif s[j] not in vowels:\n            j -= 1\n        else:\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n    return ''.join(s)\n\n# Test the function with the provided assertion\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\nThe `reverse_vowels` function takes a string `s` as input and reverses only the vowels in the string. It uses two pointers, `i` and `j`, to traverse the string from the beginning and end respectively. If the character at index `i` is not a vowel, it increments `i`. If the character at index `j` is not a vowel, it decrements `j`. If both characters are vowels, they are swapped, and then `i` and `j` are incremented by 1. Finally, the function returns the modified string."}

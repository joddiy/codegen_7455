{"task_id": "Mbpp/760", "completion": "\n    ```python\ndef unique_Element(nums):\n    return len(nums) == len(set(nums))\n```\n\nThe `unique_Element` function takes a list of numbers as input and returns `True` if the list contains only one distinct element, and `False` otherwise. It achieves this by comparing the length of the input list with the length of the set of its elements. If the lengths are equal, it means there is only one distinct element in the list, and the function returns `True`. Otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether a list of numbers contains only one distinct element or not. Your code should satisfy the following assertion:\n```python\nassert unique_Element([1,1,1]) == True\n```\n\n    ### Response:\n    ```python\ndef unique_Element(nums):\n    return len(nums) == len(set(nums))\n```\n\nThe `unique_Element` function takes a list of numbers as input and returns `True` if the list contains only one distinct element, and `False` otherwise. It achieves this by comparing the length of the input list with the length of the set of its elements. If the lengths are equal, it means there is only one distinct element in the list, and the function returns `True`. Otherwise, it returns `False`."}

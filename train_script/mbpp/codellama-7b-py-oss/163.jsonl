{"task_id": "Mbpp/299", "completion": "\n    ```python\ndef max_aggregate(tuples):\n    max_name = ''\n    max_value = 0\n    aggregate = 0\n    name_dict = {}\n    \n    for name, value in tuples:\n        if name in name_dict:\n            name_dict[name] += value\n        else:\n            name_dict[name] = value\n    \n    for name, value in name_dict.items():\n        if value > max_value:\n            max_value = value\n            max_name = name\n    \n    return (max_name, max_value)\n```\n\nThe `max_aggregate` function iterates through the list of tuples, aggregating the values for each name. It then finds the maximum value and corresponding name, returning them as a tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate the maximum aggregate from the list of tuples. Your code should satisfy the following assertion:\n```python\nassert max_aggregate([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])==('Juan Whelan', 212)\n```\n\n    ### Response:\n    ```python\ndef max_aggregate(tuples):\n    max_name = ''\n    max_value = 0\n    aggregate = 0\n    name_dict = {}\n    \n    for name, value in tuples:\n        if name in name_dict:\n            name_dict[name] += value\n        else:\n            name_dict[name] = value\n    \n    for name, value in name_dict.items():\n        if value > max_value:\n            max_value = value\n            max_name = name\n    \n    return (max_name, max_value)\n```\n\nThe `max_aggregate` function iterates through the list of tuples, aggregating the values for each name. It then finds the maximum value and corresponding name, returning them as a tuple."}

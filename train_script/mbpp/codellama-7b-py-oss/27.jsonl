{"task_id": "Mbpp/69", "completion": "\n    ```python\ndef is_sublist(lst, sublst):\n    for i in range(len(lst) - len(sublst) + 1):\n        if lst[i:i+len(sublst)] == sublst:\n            return True\n    return False\n\nassert is_sublist([2,4,3,5,7],[3,7])==False\n```\n\nThe `is_sublist` function iterates through the input list `lst` and checks if the sublist `sublst` is present within it. It uses slicing to compare sublists and returns `True` if the sublist is found, and `False` otherwise. The provided assertion ensures the correctness of the function.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether a list contains the given sublist or not. Your code should satisfy the following assertion:\n```python\nassert is_sublist([2,4,3,5,7],[3,7])==False\n```\n\n    ### Response:\n    ```python\ndef is_sublist(lst, sublst):\n    for i in range(len(lst) - len(sublst) + 1):\n        if lst[i:i+len(sublst)] == sublst:\n            return True\n    return False\n\nassert is_sublist([2,4,3,5,7],[3,7])==False\n```\n\nThe `is_sublist` function iterates through the input list `lst` and checks if the sublist `sublst` is present within it. It uses slicing to compare sublists and returns `True` if the sublist is found, and `False` otherwise. The provided assertion ensures the correctness of the function."}

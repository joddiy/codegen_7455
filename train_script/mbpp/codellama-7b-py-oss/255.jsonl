{"task_id": "Mbpp/564", "completion": "\n    ```python\ndef count_Pairs(arr, n):\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if arr[i] != arr[j]:\n                count += 1\n    return count\n```\n\nThe `count_Pairs` function iterates through the list of integers and counts the number of unordered pairs where both elements are unequal. It achieves this by using nested loops to compare each element with all subsequent elements. If both elements are unequal, the count is incremented. Finally, the function returns the total count of such pairs.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal. Your code should satisfy the following assertion:\n```python\nassert count_Pairs([1,2,1],3) == 2\n```\n\n    ### Response:\n    ```python\ndef count_Pairs(arr, n):\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if arr[i] != arr[j]:\n                count += 1\n    return count\n```\n\nThe `count_Pairs` function iterates through the list of integers and counts the number of unordered pairs where both elements are unequal. It achieves this by using nested loops to compare each element with all subsequent elements. If both elements are unequal, the count is incremented. Finally, the function returns the total count of such pairs."}

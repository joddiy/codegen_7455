{"task_id": "Mbpp/755", "completion": "\n    ```python\ndef second_smallest(numbers):\n    smallest = float('inf')\n    second_smallest = float('inf')\n    for num in numbers:\n        if num < smallest:\n            second_smallest = smallest\n            smallest = num\n        elif num < second_smallest and num != smallest:\n            second_smallest = num\n    return second_smallest if second_smallest != float('inf') else None\n```\nThe `second_smallest` function iterates through the list of numbers, keeping track of the smallest and second smallest numbers encountered. It initializes `smallest` and `second_smallest` to positive infinity and updates them as it iterates through the list. Finally, it returns the second smallest number found, or `None` if the list is empty or contains only one number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the second smallest number in a list. Your code should satisfy the following assertion:\n```python\nassert second_smallest([1, 2, -8, -2, 0, -2])==-2\n```\n\n    ### Response:\n    ```python\ndef second_smallest(numbers):\n    smallest = float('inf')\n    second_smallest = float('inf')\n    for num in numbers:\n        if num < smallest:\n            second_smallest = smallest\n            smallest = num\n        elif num < second_smallest and num != smallest:\n            second_smallest = num\n    return second_smallest if second_smallest != float('inf') else None\n```\nThe `second_smallest` function iterates through the list of numbers, keeping track of the smallest and second smallest numbers encountered. It initializes `smallest` and `second_smallest` to positive infinity and updates them as it iterates through the list. Finally, it returns the second smallest number found, or `None` if the list is empty or contains only one number."}

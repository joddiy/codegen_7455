{"task_id": "Mbpp/614", "completion": "\n    ```python\ndef cummulative_sum(tuple_list):\n    cumulative_sum = 0\n    for tup in tuple_list:\n        cumulative_sum += sum(tup)\n    return cumulative_sum\n\nassert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30\n```\n\nThe `cummulative_sum` function iterates through each tuple in the input list, calculates the sum of values in each tuple using the `sum` function, and accumulates the sum in the `cumulative_sum` variable. Finally, it returns the cumulative sum of all the values present in the input tuple list. The provided assertion ensures that the function behaves as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the cumulative sum of all the values that are present in the given tuple list. Your code should satisfy the following assertion:\n```python\nassert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30\n```\n\n    ### Response:\n    ```python\ndef cummulative_sum(tuple_list):\n    cumulative_sum = 0\n    for tup in tuple_list:\n        cumulative_sum += sum(tup)\n    return cumulative_sum\n\nassert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30\n```\n\nThe `cummulative_sum` function iterates through each tuple in the input list, calculates the sum of values in each tuple using the `sum` function, and accumulates the sum in the `cumulative_sum` variable. Finally, it returns the cumulative sum of all the values present in the input tuple list. The provided assertion ensures that the function behaves as expected."}

{"task_id": "Mbpp/389", "completion": "\n    ```python\ndef find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        prev, curr = 2, 1\n        for _ in range(2, n + 1):\n            prev, curr = curr, prev + curr\n        return curr\n```\nThe `find_lucas` function calculates the n'th lucas number using a simple iterative approach. It handles the base cases for n=0 and n=1, and then iterates through the sequence to find the n'th lucas number. The function returns the calculated lucas number. The provided assertion ensures that the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the n'th lucas number. Your code should satisfy the following assertion:\n```python\nassert find_lucas(9) == 76\n```\n\n    ### Response:\n    ```python\ndef find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        prev, curr = 2, 1\n        for _ in range(2, n + 1):\n            prev, curr = curr, prev + curr\n        return curr\n```\nThe `find_lucas` function calculates the n'th lucas number using a simple iterative approach. It handles the base cases for n=0 and n=1, and then iterates through the sequence to find the n'th lucas number. The function returns the calculated lucas number. The provided assertion ensures that the function works as expected."}

{"task_id": "Mbpp/16", "completion": "\n    ```python\ndef text_lowercase_underscore(s):\n    import re\n    pattern = r'^[a-z]+(_[a-z]+)*$'\n    return bool(re.match(pattern, s))\n```\n\nThe provided solution defines a function `text_lowercase_underscore` that takes a string `s` as input. It uses the `re` module to define a regular expression pattern that matches the input string. The pattern checks if the input string contains sequences of lowercase letters joined with an underscore and returns `True` if the pattern matches and `False` otherwise. The `bool` function is used to convert the result of `re.match` to a boolean value.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. Your code should satisfy the following assertion:\n```python\nassert text_lowercase_underscore(\"aab_cbbbc\")==(True)\n```\n\n    ### Response:\n    ```python\ndef text_lowercase_underscore(s):\n    import re\n    pattern = r'^[a-z]+(_[a-z]+)*$'\n    return bool(re.match(pattern, s))\n```\n\nThe provided solution defines a function `text_lowercase_underscore` that takes a string `s` as input. It uses the `re` module to define a regular expression pattern that matches the input string. The pattern checks if the input string contains sequences of lowercase letters joined with an underscore and returns `True` if the pattern matches and `False` otherwise. The `bool` function is used to convert the result of `re.match` to a boolean value."}

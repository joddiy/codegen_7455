{"task_id": "Mbpp/632", "completion": "\n    ```python\ndef move_zero(arr):\n    zero_count = arr.count(0)\n    non_zero_count = len(arr) - zero_count\n    non_zero_arr = [x for x in arr if x != 0]\n    zero_arr = [0] * zero_count\n    return non_zero_arr + zero_arr\n```\nThe `move_zero` function first counts the number of zeroes in the input list. It then calculates the number of non-zero elements in the list. Using list comprehension, it creates a new list containing only the non-zero elements. Finally, it appends the required number of zeroes to the non-zero list and returns the resulting list. This solution satisfies the given assertion.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to move all zeroes to the end of the given list. Your code should satisfy the following assertion:\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\n    ### Response:\n    ```python\ndef move_zero(arr):\n    zero_count = arr.count(0)\n    non_zero_count = len(arr) - zero_count\n    non_zero_arr = [x for x in arr if x != 0]\n    zero_arr = [0] * zero_count\n    return non_zero_arr + zero_arr\n```\nThe `move_zero` function first counts the number of zeroes in the input list. It then calculates the number of non-zero elements in the list. Using list comprehension, it creates a new list containing only the non-zero elements. Finally, it appends the required number of zeroes to the non-zero list and returns the resulting list. This solution satisfies the given assertion."}

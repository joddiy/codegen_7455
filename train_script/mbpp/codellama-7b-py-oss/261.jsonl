{"task_id": "Mbpp/572", "completion": "\n    ```python\ndef two_unique_nums(nums):\n    unique_nums = []\n    seen = set()\n    for num in nums:\n        if num not in seen:\n            unique_nums.append(num)\n            seen.add(num)\n    return unique_nums\n```\n\nThe `two_unique_nums` function iterates through the input list `nums`, and for each number, it checks if it has been seen before. If not, it adds the number to the `unique_nums` list and adds it to the `seen` set. Finally, it returns the `unique_nums` list containing the unique numbers from the input list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to remove duplicate numbers from a given number of lists. Your code should satisfy the following assertion:\n```python\nassert two_unique_nums([1,2,3,2,3,4,5]) == [1, 4, 5]\n```\n\n    ### Response:\n    ```python\ndef two_unique_nums(nums):\n    unique_nums = []\n    seen = set()\n    for num in nums:\n        if num not in seen:\n            unique_nums.append(num)\n            seen.add(num)\n    return unique_nums\n```\n\nThe `two_unique_nums` function iterates through the input list `nums`, and for each number, it checks if it has been seen before. If not, it adds the number to the `unique_nums` list and adds it to the `seen` set. Finally, it returns the `unique_nums` list containing the unique numbers from the input list."}

{"task_id": "Mbpp/573", "completion": "\n    ```python\ndef unique_product(lst):\n    unique_nums = list(set(lst))\n    product = 1\n    for num in unique_nums:\n        product *= num\n    return product\n\n# Test the function\nassert unique_product([10, 20, 30, 40, 20, 50, 60, 40]) ==  720000000\n```\nThe `unique_product` function first removes the duplicates from the input list using the `set` data structure. Then, it iterates through the unique numbers, multiplying each one to the product. Finally, it returns the calculated product. The provided assertion ensures that the function behaves as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to calculate the product of the unique numbers in a given list. Your code should satisfy the following assertion:\n```python\nassert unique_product([10, 20, 30, 40, 20, 50, 60, 40]) ==  720000000\n```\n\n    ### Response:\n    ```python\ndef unique_product(lst):\n    unique_nums = list(set(lst))\n    product = 1\n    for num in unique_nums:\n        product *= num\n    return product\n\n# Test the function\nassert unique_product([10, 20, 30, 40, 20, 50, 60, 40]) ==  720000000\n```\nThe `unique_product` function first removes the duplicates from the input list using the `set` data structure. Then, it iterates through the unique numbers, multiplying each one to the product. Finally, it returns the calculated product. The provided assertion ensures that the function behaves as expected."}

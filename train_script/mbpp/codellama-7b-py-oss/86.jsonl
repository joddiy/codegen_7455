{"task_id": "Mbpp/140", "completion": "\n    ```python\ndef extract_singly(lst):\n    return set(num for sublist in lst for num in sublist)\n```\n\nThe `extract_singly` function takes a list of lists as input and uses a generator expression to flatten the list of lists into a single set of numbers. The `set` constructor is then used to remove duplicates, and the resulting set is returned. The provided assertion ensures that the function behaves as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to flatten the list of lists into a single set of numbers. Your code should satisfy the following assertion:\n```python\nassert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])\n```\n\n    ### Response:\n    ```python\ndef extract_singly(lst):\n    return set(num for sublist in lst for num in sublist)\n```\n\nThe `extract_singly` function takes a list of lists as input and uses a generator expression to flatten the list of lists into a single set of numbers. The `set` constructor is then used to remove duplicates, and the resulting set is returned. The provided assertion ensures that the function behaves as expected."}

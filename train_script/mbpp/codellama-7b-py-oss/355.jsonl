{"task_id": "Mbpp/758", "completion": "\n    ```python\ndef unique_sublists(lst):\n    sublists = [tuple(sublist) for sublist in lst]\n    unique_sublists = {sublist: sublists.count(sublist) for sublist in set(sublists)}\n    return unique_sublists\n```\n\nThe `unique_sublists` function takes a list of lists as input and converts each sublist to a tuple. It then creates a dictionary where the keys are the unique tuples and the values are the number of occurrences of each tuple in the original list. This solution satisfies the given assertion.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Your code should satisfy the following assertion:\n```python\nassert unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]] )=={(1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1}\n```\n\n    ### Response:\n    ```python\ndef unique_sublists(lst):\n    sublists = [tuple(sublist) for sublist in lst]\n    unique_sublists = {sublist: sublists.count(sublist) for sublist in set(sublists)}\n    return unique_sublists\n```\n\nThe `unique_sublists` function takes a list of lists as input and converts each sublist to a tuple. It then creates a dictionary where the keys are the unique tuples and the values are the number of occurrences of each tuple in the original list. This solution satisfies the given assertion."}

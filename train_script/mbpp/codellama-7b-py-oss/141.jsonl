{"task_id": "Mbpp/272", "completion": "\n    ```python\ndef rear_extract(lst):\n    return [tup[-1] for tup in lst]\n```\n\nThe `rear_extract` function takes in a list of tuples and uses a list comprehension to extract the rear element of each tuple and return a new list containing these rear elements. The provided assertion ensures that the function behaves as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Your code should satisfy the following assertion:\n```python\nassert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]\n```\n\n    ### Response:\n    ```python\ndef rear_extract(lst):\n    return [tup[-1] for tup in lst]\n```\n\nThe `rear_extract` function takes in a list of tuples and uses a list comprehension to extract the rear element of each tuple and return a new list containing these rear elements. The provided assertion ensures that the function behaves as expected."}

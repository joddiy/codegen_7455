{"task_id": "Mbpp/123", "completion": "\n    ```python\ndef sum_divisors(n):\n    divisors_sum = 0\n    for i in range(1, int(n**0.5) + 1):\n        if n % i == 0:\n            divisors_sum += i\n            if i != n // i:\n                divisors_sum += n // i\n    return divisors_sum\n\ndef amicable_numbers_sum(n):\n    amicable_sum = 0\n    for i in range(1, n + 1):\n        if sum_divisors(i) == i and sum_divisors(sum_divisors(i)) == i:\n            amicable_sum += i\n    return amicable_sum\n\n# Test the function\nassert amicable_numbers_sum(999) == 504\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sum all amicable numbers from 1 to a specified number. Your code should satisfy the following assertion:\n```python\nassert amicable_numbers_sum(999)==504\n```\n\n    ### Response:\n    ```python\ndef sum_divisors(n):\n    divisors_sum = 0\n    for i in range(1, int(n**0.5) + 1):\n        if n % i == 0:\n            divisors_sum += i\n            if i != n // i:\n                divisors_sum += n // i\n    return divisors_sum\n\ndef amicable_numbers_sum(n):\n    amicable_sum = 0\n    for i in range(1, n + 1):\n        if sum_divisors(i) == i and sum_divisors(sum_divisors(i)) == i:\n            amicable_sum += i\n    return amicable_sum\n\n# Test the function\nassert amicable_numbers_sum(999) == 504\n```"}

{"task_id": "Mbpp/752", "completion": "\n    ```python\ndef jacobsthal_num(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return jacobsthal_num(n-1)**2 + jacobsthal_num(n-2)**2\n```\n\nThe `jacobsthal_num` function calculates the nth jacobsthal number using the recursive formula. It returns 0 for n=0 and 1 for n=1, and for n>1, it recursively calculates the nth jacobsthal number using the previous two numbers. The provided assertion ensures that the function correctly calculates the 5th jacobsthal number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Your code should satisfy the following assertion:\n```python\nassert jacobsthal_num(5) == 11\n```\n\n    ### Response:\n    ```python\ndef jacobsthal_num(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return jacobsthal_num(n-1)**2 + jacobsthal_num(n-2)**2\n```\n\nThe `jacobsthal_num` function calculates the nth jacobsthal number using the recursive formula. It returns 0 for n=0 and 1 for n=1, and for n>1, it recursively calculates the nth jacobsthal number using the previous two numbers. The provided assertion ensures that the function correctly calculates the 5th jacobsthal number."}

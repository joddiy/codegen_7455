{"task_id": "Mbpp/805", "completion": "\n    ```python\ndef max_sum_list(lst):\n    max_sum = float('-inf')\n    max_sum_list = []\n    for sublist in lst:\n        current_sum = sum(sublist)\n        if current_sum > max_sum:\n            max_sum = current_sum\n            max_sum_list = sublist\n    return max_sum_list\n```\nThe `max_sum_list` function iterates through each sublist in the input list `lst`. It calculates the sum of elements in each sublist and keeps track of the sublist with the highest sum. Finally, it returns the sublist with the highest sum. This solution satisfies the given assertion and correctly identifies the sublist with the highest sum.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that returns the list in a list of lists whose sum of elements is the highest. Your code should satisfy the following assertion:\n```python\nassert max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[10, 11, 12]\n```\n\n    ### Response:\n    ```python\ndef max_sum_list(lst):\n    max_sum = float('-inf')\n    max_sum_list = []\n    for sublist in lst:\n        current_sum = sum(sublist)\n        if current_sum > max_sum:\n            max_sum = current_sum\n            max_sum_list = sublist\n    return max_sum_list\n```\nThe `max_sum_list` function iterates through each sublist in the input list `lst`. It calculates the sum of elements in each sublist and keeps track of the sublist with the highest sum. Finally, it returns the sublist with the highest sum. This solution satisfies the given assertion and correctly identifies the sublist with the highest sum."}

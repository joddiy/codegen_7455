{"task_id": "Mbpp/598", "completion": "\n    ```python\ndef armstrong_number(num):\n    num_str = str(num)\n    num_len = len(num_str)\n    sum_of_powers = 0\n    for digit in num_str:\n        sum_of_powers += int(digit) ** num_len\n    return sum_of_powers == num\n```\n\nThe `armstrong_number` function takes a number as input, converts it to a string, calculates the sum of each digit raised to the power of the number of digits, and compares it with the original number. If the sums are equal, the function returns `True`, indicating that the number is an Armstrong number. Otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is armstrong or not. Your code should satisfy the following assertion:\n```python\nassert armstrong_number(153)==True\n```\n\n    ### Response:\n    ```python\ndef armstrong_number(num):\n    num_str = str(num)\n    num_len = len(num_str)\n    sum_of_powers = 0\n    for digit in num_str:\n        sum_of_powers += int(digit) ** num_len\n    return sum_of_powers == num\n```\n\nThe `armstrong_number` function takes a number as input, converts it to a string, calculates the sum of each digit raised to the power of the number of digits, and compares it with the original number. If the sums are equal, the function returns `True`, indicating that the number is an Armstrong number. Otherwise, it returns `False`."}

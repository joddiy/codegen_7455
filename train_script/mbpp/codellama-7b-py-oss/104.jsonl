{"task_id": "Mbpp/224", "completion": "\n    ```python\ndef count_Set_Bits(n):\n    count = 0\n    while n:\n        count += n & 1\n        n >>= 1\n    return count\n```\nThe `count_Set_Bits` function takes an integer `n` as input and initializes a count variable to 0. It then iterates through the binary representation of `n` using bitwise operations. In each iteration, it adds the least significant bit of `n` to the count and right shifts `n` to remove the least significant bit. Finally, it returns the count of set bits in the given number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of set bits (binary digits with value 1) in a given number. Your code should satisfy the following assertion:\n```python\nassert count_Set_Bits(2) == 1\n```\n\n    ### Response:\n    ```python\ndef count_Set_Bits(n):\n    count = 0\n    while n:\n        count += n & 1\n        n >>= 1\n    return count\n```\nThe `count_Set_Bits` function takes an integer `n` as input and initializes a count variable to 0. It then iterates through the binary representation of `n` using bitwise operations. In each iteration, it adds the least significant bit of `n` to the count and right shifts `n` to remove the least significant bit. Finally, it returns the count of set bits in the given number."}

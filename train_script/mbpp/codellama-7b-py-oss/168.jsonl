{"task_id": "Mbpp/308", "completion": "\n    ```python\ndef large_product(list1, list2, num):\n    products = []\n    for i in range(num):\n        factor1 = list1[i]\n        factor2 = list2[i]\n        product = factor1 * factor2\n        products.append(product)\n    products.sort(reverse=True)\n    return products\n```\nThe `large_product` function takes in two lists, `list1` and `list2`, and the number of largest products to find, `num`. It then iterates through the lists, multiplying each pair of factors and storing the products in a list. After sorting the products in descending order, the function returns the specified number of largest products.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Your code should satisfy the following assertion:\n```python\nassert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]\n```\n\n    ### Response:\n    ```python\ndef large_product(list1, list2, num):\n    products = []\n    for i in range(num):\n        factor1 = list1[i]\n        factor2 = list2[i]\n        product = factor1 * factor2\n        products.append(product)\n    products.sort(reverse=True)\n    return products\n```\nThe `large_product` function takes in two lists, `list1` and `list2`, and the number of largest products to find, `num`. It then iterates through the lists, multiplying each pair of factors and storing the products in a list. After sorting the products in descending order, the function returns the specified number of largest products."}

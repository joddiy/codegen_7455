{"task_id": "Mbpp/415", "completion": "\n    ```python\ndef max_Product(arr):\n    max_product = 0\n    max_pair = ()\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            product = arr[i] * arr[j]\n            if product > max_product:\n                max_product = product\n                max_pair = (arr[i], arr[j])\n    return max_pair\n```\nThe `max_Product` function iterates through the array and finds the pair with the highest product. It initializes `max_product` to 0 and `max_pair` to an empty tuple. Then, it iterates through the array to find pairs with product greater than `max_product`. If it finds such a pair, it updates `max_product` and `max_pair` accordingly. Finally, it returns the `max_pair` containing the pair with the highest product.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find a pair with highest product from a given array of integers. Your code should satisfy the following assertion:\n```python\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```\n\n    ### Response:\n    ```python\ndef max_Product(arr):\n    max_product = 0\n    max_pair = ()\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            product = arr[i] * arr[j]\n            if product > max_product:\n                max_product = product\n                max_pair = (arr[i], arr[j])\n    return max_pair\n```\nThe `max_Product` function iterates through the array and finds the pair with the highest product. It initializes `max_product` to 0 and `max_pair` to an empty tuple. Then, it iterates through the array to find pairs with product greater than `max_product`. If it finds such a pair, it updates `max_product` and `max_pair` accordingly. Finally, it returns the `max_pair` containing the pair with the highest product."}

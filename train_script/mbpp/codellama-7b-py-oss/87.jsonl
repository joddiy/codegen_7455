{"task_id": "Mbpp/141", "completion": "\n ```python\ndef pancake_sort(arr):\n    for i in range(len(arr) - 1, 0, -1):\n        max_index = i\n        for j in range(0, i):\n            if arr[j] > arr[max_index]:\n                max_index = j\n        if max_index != i:\n            arr = arr[:max_index+1] + list(reversed(arr[:max_index+1])) + arr[max_index+1:]\n    return arr\n```\nThe `pancake_sort` function iterates through the input list in reverse order, finding the maximum element and reversing the sublist to put it at the beginning. This process is repeated until the list is sorted, and the sorted list is returned.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```\n\n    ### Response:\n ```python\ndef pancake_sort(arr):\n    for i in range(len(arr) - 1, 0, -1):\n        max_index = i\n        for j in range(0, i):\n            if arr[j] > arr[max_index]:\n                max_index = j\n        if max_index != i:\n            arr = arr[:max_index+1] + list(reversed(arr[:max_index+1])) + arr[max_index+1:]\n    return arr\n```\nThe `pancake_sort` function iterates through the input list in reverse order, finding the maximum element and reversing the sublist to put it at the beginning. This process is repeated until the list is sorted, and the sorted list is returned."}

{"task_id": "Mbpp/785", "completion": "\n    ```python\ndef tuple_str_int(tuple_str):\n    # Remove the parentheses and split the string by comma to get a list of strings\n    tuple_str = tuple_str.strip('()').split(',')\n    \n    # Convert each string to integer and append to a new list\n    int_tuple = tuple(int(x.strip()) for x in tuple_str)\n    \n    return int_tuple\n```\n\nThe `tuple_str_int` function takes a tuple string as input, removes the parentheses, splits the string by comma to get a list of strings, converts each string to integer, and returns the integer tuple. The provided assertion ensures that the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert tuple string to integer tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\n    ### Response:\n    ```python\ndef tuple_str_int(tuple_str):\n    # Remove the parentheses and split the string by comma to get a list of strings\n    tuple_str = tuple_str.strip('()').split(',')\n    \n    # Convert each string to integer and append to a new list\n    int_tuple = tuple(int(x.strip()) for x in tuple_str)\n    \n    return int_tuple\n```\n\nThe `tuple_str_int` function takes a tuple string as input, removes the parentheses, splits the string by comma to get a list of strings, converts each string to integer, and returns the integer tuple. The provided assertion ensures that the function works as expected."}

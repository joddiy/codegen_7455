{"task_id": "Mbpp/80", "completion": "\n    Here is a Python function that calculates the nth tetrahedral number:\n\n```python\ndef tetrahedral_number(n):\n    return n*(n+1)*(n+2)//6\n\nassert tetrahedral_number(5) == 35\n```\n\nThe function `tetrahedral_number(n)` calculates the nth tetrahedral number by using the formula `n*(n+1)*(n+2)//6`. The `//` operator is used for integer division in Python, which rounds down to the nearest whole number.\n\nThe assertion `assert tetrahedral_number(5) == 35` checks if the function is working correctly. If the function returns 35 for the input 5, the assertion passes. If not, the assertion will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the nth tetrahedral number. Your code should satisfy the following assertion:\n```python\nassert tetrahedral_number(5) == 35\n```\n\n    ### Response:\n    Here is a Python function that calculates the nth tetrahedral number:\n\n```python\ndef tetrahedral_number(n):\n    return n*(n+1)*(n+2)//6\n\nassert tetrahedral_number(5) == 35\n```\n\nThe function `tetrahedral_number(n)` calculates the nth tetrahedral number by using the formula `n*(n+1)*(n+2)//6`. The `//` operator is used for integer division in Python, which rounds down to the nearest whole number.\n\nThe assertion `assert tetrahedral_number(5) == 35` checks if the function is working correctly. If the function returns 35 for the input 5, the assertion passes. If not, the assertion will raise an AssertionError."}

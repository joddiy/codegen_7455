{"task_id": "Mbpp/166", "completion": "\n```python\ndef find_even_pair(lst):\n    count = 0\n    for i in range(len(lst)):\n        for j in range(i+1, len(lst)):\n            if (lst[i] ^ lst[j]) % 2 == 0:\n                count += 1\n    return count\n\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\nThe function `find_even_pair` takes a list of integers as input. It initializes a count variable to 0. It then iterates over each pair of integers in the list. For each pair, it calculates the bitwise XOR of the two integers and checks if the result is even. If it is, it increments the count. Finally, it returns the count.\n\nThe assertion at the end checks if the function is working correctly. If the function is correct, it should return 4, which is the number of pairs (5,4), (5,2), (4,2), (7,1) that have an XOR that is even.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that counts the number of pairs of integers in a list that xor to an even number. Your code should satisfy the following assertion:\n```python\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\n    ### Response:\n```python\ndef find_even_pair(lst):\n    count = 0\n    for i in range(len(lst)):\n        for j in range(i+1, len(lst)):\n            if (lst[i] ^ lst[j]) % 2 == 0:\n                count += 1\n    return count\n\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\nThe function `find_even_pair` takes a list of integers as input. It initializes a count variable to 0. It then iterates over each pair of integers in the list. For each pair, it calculates the bitwise XOR of the two integers and checks if the result is even. If it is, it increments the count. Finally, it returns the count.\n\nThe assertion at the end checks if the function is working correctly. If the function is correct, it should return 4, which is the number of pairs (5,4), (5,2), (4,2), (7,1) that have an XOR that is even."}

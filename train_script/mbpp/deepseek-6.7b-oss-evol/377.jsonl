{"task_id": "Mbpp/785", "completion": "\n```python\ndef tuple_str_int(tup_str):\n    # Remove the parentheses and split the string into a list of strings\n    str_list = tup_str[1:-1].split(\", \")\n    # Convert each string in the list to an integer and return as a tuple\n    return tuple(int(s) for s in str_list)\n\n# Test the function\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\nThe function `tuple_str_int` takes a string representation of a tuple, removes the parentheses, and splits the string into a list of strings. It then converts each string in the list to an integer and returns as a tuple. The assertion at the end tests the function with the given example.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert tuple string to integer tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\n    ### Response:\n```python\ndef tuple_str_int(tup_str):\n    # Remove the parentheses and split the string into a list of strings\n    str_list = tup_str[1:-1].split(\", \")\n    # Convert each string in the list to an integer and return as a tuple\n    return tuple(int(s) for s in str_list)\n\n# Test the function\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\nThe function `tuple_str_int` takes a string representation of a tuple, removes the parentheses, and splits the string into a list of strings. It then converts each string in the list to an integer and returns as a tuple. The assertion at the end tests the function with the given example."}

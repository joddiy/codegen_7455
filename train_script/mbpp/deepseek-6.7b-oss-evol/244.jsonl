{"task_id": "Mbpp/478", "completion": "\n```python\ndef remove_lowercase(s):\n    result = ''\n    for char in s:\n        if char.isupper():\n            result += char\n    return result\n\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n```\n\nIn this script, we define a function `remove_lowercase` that takes a string `s` as input. We initialize an empty string `result`. We then iterate over each character in the input string. If the character is uppercase (i.e., `char.isupper()` returns `True`), we add it to `result`. Finally, we return `result`.\n\nThe assertion at the end checks whether the function works correctly. If the function returns the expected result, the assertion will pass, otherwise it will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove lowercase substrings from a given string. Your code should satisfy the following assertion:\n```python\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n```\n\n    ### Response:\n```python\ndef remove_lowercase(s):\n    result = ''\n    for char in s:\n        if char.isupper():\n            result += char\n    return result\n\nassert remove_lowercase(\"PYTHon\")==('PYTH')\n```\n\nIn this script, we define a function `remove_lowercase` that takes a string `s` as input. We initialize an empty string `result`. We then iterate over each character in the input string. If the character is uppercase (i.e., `char.isupper()` returns `True`), we add it to `result`. Finally, we return `result`.\n\nThe assertion at the end checks whether the function works correctly. If the function returns the expected result, the assertion will pass, otherwise it will raise an `AssertionError`."}

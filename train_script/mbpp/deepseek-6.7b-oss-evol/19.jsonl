{"task_id": "Mbpp/61", "completion": "\n```python\ndef count_Substrings(s):\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            substring = s[i:j]\n            if sum(int(digit) for digit in substring) == len(substring):\n                count += 1\n    return count\n\nassert count_Substrings('112112') == 6\n```\n\nThis Python function works by iterating over all possible substrings of the input string `s` and checking if the sum of the digits in the substring is equal to the length of the substring. If it is, the count is incremented. The function finally returns the total count. The assertion at the end checks if the function works correctly for the given example.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of substrings with the sum of digits equal to their length. Your code should satisfy the following assertion:\n```python\nassert count_Substrings('112112') == 6\n```\n\n    ### Response:\n```python\ndef count_Substrings(s):\n    count = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            substring = s[i:j]\n            if sum(int(digit) for digit in substring) == len(substring):\n                count += 1\n    return count\n\nassert count_Substrings('112112') == 6\n```\n\nThis Python function works by iterating over all possible substrings of the input string `s` and checking if the sum of the digits in the substring is equal to the length of the substring. If it is, the count is incremented. The function finally returns the total count. The assertion at the end checks if the function works correctly for the given example."}

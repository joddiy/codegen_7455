{"task_id": "Mbpp/558", "completion": "\n```python\ndef digit_distance_nums(num1, num2):\n    # Convert the numbers to strings to easily access each digit\n    num1_str = str(num1)\n    num2_str = str(num2)\n\n    # Initialize the sum of differences\n    sum_diff = 0\n\n    # Iterate over each digit in the numbers\n    for i in range(max(len(num1_str), len(num2_str))):\n        # Get the digits from the numbers, or 0 if the number is shorter than the other\n        digit1 = int(num1_str[i]) if i < len(num1_str) else 0\n        digit2 = int(num2_str[i]) if i < len(num2_str) else 0\n\n        # Add the absolute difference between the digits to the sum\n        sum_diff += abs(digit1 - digit2)\n\n    return sum_diff\n\n# Test the function\nassert digit_distance_nums(1,2) == 1\n```\n\nThis script defines a function `digit_distance_nums` that takes two integers as input. It converts these integers to strings to easily access each digit. It then initializes a variable `sum_diff` to store the sum of the differences between the digits.\n\nThe function then iterates over each digit in the numbers, getting the digits from the numbers or 0 if the number is shorter than the other. It then adds the absolute difference between the digits to the sum.\n\nFinally, the function returns the sum of the differences between the digits. The `assert` statement is used to test the function with the provided example.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the sum of the per-digit difference between two integers. Your code should satisfy the following assertion:\n```python\nassert digit_distance_nums(1,2) == 1\n```\n\n    ### Response:\n```python\ndef digit_distance_nums(num1, num2):\n    # Convert the numbers to strings to easily access each digit\n    num1_str = str(num1)\n    num2_str = str(num2)\n\n    # Initialize the sum of differences\n    sum_diff = 0\n\n    # Iterate over each digit in the numbers\n    for i in range(max(len(num1_str), len(num2_str))):\n        # Get the digits from the numbers, or 0 if the number is shorter than the other\n        digit1 = int(num1_str[i]) if i < len(num1_str) else 0\n        digit2 = int(num2_str[i]) if i < len(num2_str) else 0\n\n        # Add the absolute difference between the digits to the sum\n        sum_diff += abs(digit1 - digit2)\n\n    return sum_diff\n\n# Test the function\nassert digit_distance_nums(1,2) == 1\n```\n\nThis script defines a function `digit_distance_nums` that takes two integers as input. It converts these integers to strings to easily access each digit. It then initializes a variable `sum_diff` to store the sum of the differences between the digits.\n\nThe function then iterates over each digit in the numbers, getting the digits from the numbers or 0 if the number is shorter than the other. It then adds the absolute difference between the digits to the sum.\n\nFinally, the function returns the sum of the differences between the digits. The `assert` statement is used to test the function with the provided example."}

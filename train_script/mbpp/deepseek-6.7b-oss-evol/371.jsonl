{"task_id": "Mbpp/778", "completion": "\n```python\ndef pack_consecutive_duplicates(lst):\n    result = []\n    i = 0\n    while i < len(lst):\n        j = i + 1\n        while j < len(lst) and lst[j] == lst[i]:\n            j += 1\n        result.append(lst[i:j])\n        i = j\n    return result\n\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```\n\nThe function `pack_consecutive_duplicates` works by iterating over the list and identifying consecutive duplicates. It uses a while loop to find the next occurrence of the same element and then appends the sublist of consecutive duplicates to the result list. The loop then continues from the next element after the duplicates.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to pack consecutive duplicates of a given list elements into sublists. Your code should satisfy the following assertion:\n```python\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```\n\n    ### Response:\n```python\ndef pack_consecutive_duplicates(lst):\n    result = []\n    i = 0\n    while i < len(lst):\n        j = i + 1\n        while j < len(lst) and lst[j] == lst[i]:\n            j += 1\n        result.append(lst[i:j])\n        i = j\n    return result\n\nassert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n```\n\nThe function `pack_consecutive_duplicates` works by iterating over the list and identifying consecutive duplicates. It uses a while loop to find the next occurrence of the same element and then appends the sublist of consecutive duplicates to the result list. The loop then continues from the next element after the duplicates."}

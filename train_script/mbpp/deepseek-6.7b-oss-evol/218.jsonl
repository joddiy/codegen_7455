{"task_id": "Mbpp/446", "completion": "\n```python\ndef count_Occurrence(tup, lst):\n    count = 0\n    for i in lst:\n        count += tup.count(i)\n    return count\n\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b']) == 3\n```\n\nThis script defines a function `count_Occurrence` that takes a tuple and a list as arguments. It then counts the occurrences of each element in the list in the tuple and returns the total count. The `assert` statement checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the occurence of all elements of list in a tuple. Your code should satisfy the following assertion:\n```python\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3\n```\n\n    ### Response:\n```python\ndef count_Occurrence(tup, lst):\n    count = 0\n    for i in lst:\n        count += tup.count(i)\n    return count\n\nassert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b']) == 3\n```\n\nThis script defines a function `count_Occurrence` that takes a tuple and a list as arguments. It then counts the occurrences of each element in the list in the tuple and returns the total count. The `assert` statement checks if the function works as expected."}

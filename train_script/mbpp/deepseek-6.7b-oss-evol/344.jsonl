{"task_id": "Mbpp/745", "completion": "\n```python\ndef divisible_by_digits(startnum, endnum):\n    result = []\n    for num in range(startnum, endnum + 1):\n        if all(num % int(digit) == 0 for digit in str(num)):\n            result.append(num)\n    return result\n\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\nThe function `divisible_by_digits` takes two arguments, `startnum` and `endnum`, and returns a list of numbers within this range that are divisible by every digit they contain. The function works by iterating over each number in the range, converting it to a string to allow for iteration over its digits, and checking if the number is divisible by each digit. If it is, the number is appended to the result list. The function finally returns the result list.\n\nThe assertion at the end checks if the function works as expected. If the function returns the expected result, the assertion will pass, otherwise it will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php. Your code should satisfy the following assertion:\n```python\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\n    ### Response:\n```python\ndef divisible_by_digits(startnum, endnum):\n    result = []\n    for num in range(startnum, endnum + 1):\n        if all(num % int(digit) == 0 for digit in str(num)):\n            result.append(num)\n    return result\n\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\nThe function `divisible_by_digits` takes two arguments, `startnum` and `endnum`, and returns a list of numbers within this range that are divisible by every digit they contain. The function works by iterating over each number in the range, converting it to a string to allow for iteration over its digits, and checking if the number is divisible by each digit. If it is, the number is appended to the result list. The function finally returns the result list.\n\nThe assertion at the end checks if the function works as expected. If the function returns the expected result, the assertion will pass, otherwise it will raise an AssertionError."}

{"task_id": "Mbpp/559", "completion": "\n```python\ndef max_sub_array_sum(lst, n):\n    max_sum = current_sum = sum(lst[:n])\n    for i in range(n, len(lst)):\n        current_sum = current_sum - lst[i - n] + lst[i]\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n\nassert max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7\n```\n\nThe function `max_sub_array_sum` takes a list and a number `n` as input. It calculates the sum of the first `n` elements of the list and assigns it to `max_sum` and `current_sum`. Then it iterates over the rest of the list, subtracting the first element of the previous sublist and adding the next element of the current sublist to `current_sum`. It then updates `max_sum` with the maximum of `max_sum` and `current_sum`. Finally, it returns `max_sum`.\n\nThe assertion checks if the function works correctly for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the sum of the largest contiguous sublist in the given list. Your code should satisfy the following assertion:\n```python\nassert max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7\n```\n\n    ### Response:\n```python\ndef max_sub_array_sum(lst, n):\n    max_sum = current_sum = sum(lst[:n])\n    for i in range(n, len(lst)):\n        current_sum = current_sum - lst[i - n] + lst[i]\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n\nassert max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7\n```\n\nThe function `max_sub_array_sum` takes a list and a number `n` as input. It calculates the sum of the first `n` elements of the list and assigns it to `max_sum` and `current_sum`. Then it iterates over the rest of the list, subtracting the first element of the previous sublist and adding the next element of the current sublist to `current_sum`. It then updates `max_sum` with the maximum of `max_sum` and `current_sum`. Finally, it returns `max_sum`.\n\nThe assertion checks if the function works correctly for the given input."}

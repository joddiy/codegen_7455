{"task_id": "Mbpp/479", "completion": "\n```python\ndef first_Digit(n):\n    while n >= 10:\n        n = n // 10\n    return n\n\nassert first_Digit(123) == 1\n```\n\nThe function `first_Digit` takes an integer `n` as an input. It then enters a while loop that continues until `n` is less than 10. Inside the loop, it divides `n` by 10 and assigns the result back to `n`. This effectively removes the last digit from `n`. Once `n` is less than 10, the loop ends and the function returns `n`, which is the first digit of the original number.\n\nThe assertion checks if the function works correctly. If the function returns the correct first digit for the input 123, the assertion will pass. If not, the assertion will raise an error.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the first digit of a given number. Your code should satisfy the following assertion:\n```python\nassert first_Digit(123) == 1\n```\n\n    ### Response:\n```python\ndef first_Digit(n):\n    while n >= 10:\n        n = n // 10\n    return n\n\nassert first_Digit(123) == 1\n```\n\nThe function `first_Digit` takes an integer `n` as an input. It then enters a while loop that continues until `n` is less than 10. Inside the loop, it divides `n` by 10 and assigns the result back to `n`. This effectively removes the last digit from `n`. Once `n` is less than 10, the loop ends and the function returns `n`, which is the first digit of the original number.\n\nThe assertion checks if the function works correctly. If the function returns the correct first digit for the input 123, the assertion will pass. If not, the assertion will raise an error."}

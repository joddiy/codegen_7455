{"task_id": "Mbpp/773", "completion": "\n```python\ndef occurance_substring(string, substring):\n    start = string.find(substring)\n    if start == -1:\n        return None\n    else:\n        return (substring, start, start + len(substring) - 1)\n\nassert occurance_substring('python programming, python language','python')==('python', 0, 6)\n```\n\nThe function `occurance_substring` takes two arguments: a string and a substring. It finds the starting position of the substring in the string using the `find` method. If the substring is not found, it returns -1. If the substring is found, it returns a tuple containing the substring, the starting position, and the ending position of the substring. The ending position is calculated by adding the length of the substring minus 1 to the starting position.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match. Your code should satisfy the following assertion:\n```python\nassert occurance_substring('python programming, python language','python')==('python', 0, 6)\n```\n\n    ### Response:\n```python\ndef occurance_substring(string, substring):\n    start = string.find(substring)\n    if start == -1:\n        return None\n    else:\n        return (substring, start, start + len(substring) - 1)\n\nassert occurance_substring('python programming, python language','python')==('python', 0, 6)\n```\n\nThe function `occurance_substring` takes two arguments: a string and a substring. It finds the starting position of the substring in the string using the `find` method. If the substring is not found, it returns -1. If the substring is found, it returns a tuple containing the substring, the starting position, and the ending position of the substring. The ending position is calculated by adding the length of the substring minus 1 to the starting position."}

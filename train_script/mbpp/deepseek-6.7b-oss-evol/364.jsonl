{"task_id": "Mbpp/769", "completion": "\n```python\ndef Diff(li1, li2):\n    return (list(list(set(li1)-set(li2)) + list(set(li2)-set(li1))))\n\nassert (Diff([10, 15, 20, 25, 30, 35, 40], [25, 40, 35])) == [10, 20, 30, 15]\n```\n\nThis script defines a function `Diff` that takes two lists as arguments. It uses the `set` function to remove any duplicate values from each list, then subtracts the second list from the first and vice versa. The result is a list of items that are in either of the original lists but not in both. The `assert` statement checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to get the difference between two lists. Your code should satisfy the following assertion:\n```python\nassert (Diff([10, 15, 20, 25, 30, 35, 40], [25, 40, 35])) == [10, 20, 30, 15]\n```\n\n    ### Response:\n```python\ndef Diff(li1, li2):\n    return (list(list(set(li1)-set(li2)) + list(set(li2)-set(li1))))\n\nassert (Diff([10, 15, 20, 25, 30, 35, 40], [25, 40, 35])) == [10, 20, 30, 15]\n```\n\nThis script defines a function `Diff` that takes two lists as arguments. It uses the `set` function to remove any duplicate values from each list, then subtracts the second list from the first and vice versa. The result is a list of items that are in either of the original lists but not in both. The `assert` statement checks if the function works as expected."}

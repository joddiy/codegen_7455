{"task_id": "Mbpp/461", "completion": "\n```python\ndef upper_ctr(s):\n    return sum(1 for c in s if c.isupper())\n\nassert upper_ctr('PYthon') == 1\n```\n\nThe function `upper_ctr` takes a string `s` as input and returns the count of uppercase characters in the string. The expression `1 for c in s if c.isupper()` generates a sequence of 1s for each uppercase character in the string, and `sum` adds up these 1s to give the count. The `assert` statement checks that the function works correctly for the given example.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the upper case characters in a given string. Your code should satisfy the following assertion:\n```python\nassert upper_ctr('PYthon') == 1\n```\n\n    ### Response:\n```python\ndef upper_ctr(s):\n    return sum(1 for c in s if c.isupper())\n\nassert upper_ctr('PYthon') == 1\n```\n\nThe function `upper_ctr` takes a string `s` as input and returns the count of uppercase characters in the string. The expression `1 for c in s if c.isupper()` generates a sequence of 1s for each uppercase character in the string, and `sum` adds up these 1s to give the count. The `assert` statement checks that the function works correctly for the given example."}

{"task_id": "Mbpp/130", "completion": "\n```python\ndef max_occurrences(lst):\n    count_dict = {}\n    for i in lst:\n        if i in count_dict:\n            count_dict[i] += 1\n        else:\n            count_dict[i] = 1\n    max_count = max(count_dict.values())\n    for key, value in count_dict.items():\n        if value == max_count:\n            return key\n\nassert max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2\n```\n\nThis function works by first creating a dictionary where the keys are the elements in the list and the values are the number of times each element appears in the list. Then it finds the maximum value in the dictionary (which is the maximum frequency of any element) and returns the key (the element) that corresponds to that value.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the item with maximum frequency in a given list. Your code should satisfy the following assertion:\n```python\nassert max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2\n```\n\n    ### Response:\n```python\ndef max_occurrences(lst):\n    count_dict = {}\n    for i in lst:\n        if i in count_dict:\n            count_dict[i] += 1\n        else:\n            count_dict[i] = 1\n    max_count = max(count_dict.values())\n    for key, value in count_dict.items():\n        if value == max_count:\n            return key\n\nassert max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2\n```\n\nThis function works by first creating a dictionary where the keys are the elements in the list and the values are the number of times each element appears in the list. Then it finds the maximum value in the dictionary (which is the maximum frequency of any element) and returns the key (the element) that corresponds to that value."}

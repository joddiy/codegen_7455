{"task_id": "Mbpp/448", "completion": "\n```python\ndef cal_sum(n):\n    # Perrin sequence\n    perrin = [3, 0, 2]\n    for i in range(3, n+1):\n        perrin.append(perrin[i-2] + perrin[i-3])\n    return sum(perrin[:n])\n\nassert cal_sum(9) == 49\n```\n\nIn this script, we first define the Perrin sequence as a list with the first three numbers [3, 0, 2]. Then we use a for loop to calculate the next numbers in the sequence by adding the two previous numbers. Finally, we return the sum of the first n numbers in the sequence. The assertion at the end checks if the function works correctly for n=9.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate the sum of perrin numbers. Your code should satisfy the following assertion:\n```python\nassert cal_sum(9) == 49\n```\n\n    ### Response:\n```python\ndef cal_sum(n):\n    # Perrin sequence\n    perrin = [3, 0, 2]\n    for i in range(3, n+1):\n        perrin.append(perrin[i-2] + perrin[i-3])\n    return sum(perrin[:n])\n\nassert cal_sum(9) == 49\n```\n\nIn this script, we first define the Perrin sequence as a list with the first three numbers [3, 0, 2]. Then we use a for loop to calculate the next numbers in the sequence by adding the two previous numbers. Finally, we return the sum of the first n numbers in the sequence. The assertion at the end checks if the function works correctly for n=9."}

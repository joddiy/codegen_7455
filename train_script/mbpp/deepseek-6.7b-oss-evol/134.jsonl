{"task_id": "Mbpp/265", "completion": "\n```python\ndef list_split(lst, n):\n    return [lst[i:i+n] for i in range(0, len(lst), n)]\n\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\nThe function `list_split` takes a list `lst` and an integer `n` as input. It uses list comprehension to create a new list, where each element is a slice of `lst` from `i` to `i+n` for each `i` in the range from 0 to the length of `lst`, stepping by `n`. The result is a list of lists, where each inner list contains `n` elements from `lst`. The assertion checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Your code should satisfy the following assertion:\n```python\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\n    ### Response:\n```python\ndef list_split(lst, n):\n    return [lst[i:i+n] for i in range(0, len(lst), n)]\n\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\nThe function `list_split` takes a list `lst` and an integer `n` as input. It uses list comprehension to create a new list, where each element is a slice of `lst` from `i` to `i+n` for each `i` in the range from 0 to the length of `lst`, stepping by `n`. The result is a list of lists, where each inner list contains `n` elements from `lst`. The assertion checks if the function works as expected."}

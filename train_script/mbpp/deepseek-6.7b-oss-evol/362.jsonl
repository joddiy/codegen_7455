{"task_id": "Mbpp/766", "completion": "\n```python\ndef pair_wise(lst):\n    return [(lst[i], lst[i+1]) for i in range(len(lst)-1)]\n\nassert pair_wise([1,1,2,3,3,4,4,5])==[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]\n```\n\nThe function `pair_wise` takes a list as input and returns a list of tuples. Each tuple contains two consecutive elements from the input list. The function uses list comprehension to generate the list of tuples. The `range(len(lst)-1)` generates indices for the list elements, and `lst[i]` and `lst[i+1]` are the elements at those indices.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to return a list of all pairs of consecutive items in a given list. Your code should satisfy the following assertion:\n```python\nassert pair_wise([1,1,2,3,3,4,4,5])==[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]\n```\n\n    ### Response:\n```python\ndef pair_wise(lst):\n    return [(lst[i], lst[i+1]) for i in range(len(lst)-1)]\n\nassert pair_wise([1,1,2,3,3,4,4,5])==[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]\n```\n\nThe function `pair_wise` takes a list as input and returns a list of tuples. Each tuple contains two consecutive elements from the input list. The function uses list comprehension to generate the list of tuples. The `range(len(lst)-1)` generates indices for the list elements, and `lst[i]` and `lst[i+1]` are the elements at those indices."}

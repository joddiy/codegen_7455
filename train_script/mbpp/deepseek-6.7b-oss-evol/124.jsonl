{"task_id": "Mbpp/252", "completion": "\n```python\nimport cmath\n\ndef convert(complex_number):\n    return cmath.polar(complex_number)\n\nassert convert(1) == (1.0, 0.0)\n```\n\nIn this script, we use the `cmath` module in Python to convert complex numbers to polar coordinates. The `polar` function returns a tuple where the first element is the modulus (also known as the absolute value) and the second element is the phase angle in radians.\n\nThe assertion at the end checks if the function `convert` works correctly. If the function returns the correct polar coordinates for the complex number 1, the assertion will pass.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to convert complex numbers to polar coordinates. Your code should satisfy the following assertion:\n```python\nassert convert(1) == (1.0, 0.0)\n```\n\n    ### Response:\n```python\nimport cmath\n\ndef convert(complex_number):\n    return cmath.polar(complex_number)\n\nassert convert(1) == (1.0, 0.0)\n```\n\nIn this script, we use the `cmath` module in Python to convert complex numbers to polar coordinates. The `polar` function returns a tuple where the first element is the modulus (also known as the absolute value) and the second element is the phase angle in radians.\n\nThe assertion at the end checks if the function `convert` works correctly. If the function returns the correct polar coordinates for the complex number 1, the assertion will pass."}

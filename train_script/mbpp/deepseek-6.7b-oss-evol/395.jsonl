{"task_id": "Mbpp/806", "completion": "\n```python\ndef max_run_uppercase(s):\n    max_run = 0\n    current_run = 0\n    for char in s:\n        if char.isupper():\n            current_run += 1\n            max_run = max(max_run, current_run)\n        else:\n            current_run = 0\n    return max_run\n\nassert max_run_uppercase('GeMKSForGERksISBESt') == 5\n```\n\nThe function `max_run_uppercase` iterates over each character in the string. If the character is uppercase, it increments the `current_run` counter and updates `max_run` if `current_run` is greater. If the character is not uppercase, it resets `current_run` to 0. The function finally returns the maximum run of uppercase characters.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find maximum run of uppercase characters in the given string. Your code should satisfy the following assertion:\n```python\nassert max_run_uppercase('GeMKSForGERksISBESt') == 5\n```\n\n    ### Response:\n```python\ndef max_run_uppercase(s):\n    max_run = 0\n    current_run = 0\n    for char in s:\n        if char.isupper():\n            current_run += 1\n            max_run = max(max_run, current_run)\n        else:\n            current_run = 0\n    return max_run\n\nassert max_run_uppercase('GeMKSForGERksISBESt') == 5\n```\n\nThe function `max_run_uppercase` iterates over each character in the string. If the character is uppercase, it increments the `current_run` counter and updates `max_run` if `current_run` is greater. If the character is not uppercase, it resets `current_run` to 0. The function finally returns the maximum run of uppercase characters."}

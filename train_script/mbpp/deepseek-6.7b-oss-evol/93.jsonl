{"task_id": "Mbpp/162", "completion": "\n```python\ndef sum_series(n):\n    total = 0\n    for i in range(n // 2 + 1):\n        total += n - 2 * i\n    return total\n\nassert sum_series(6) == 12\n```\n\nThe function `sum_series` calculates the sum of the series (n - 2*i) from i=0 to n // 2. It does this by initializing a variable `total` to 0, then iterating over the range from 0 to n // 2 (inclusive), adding the result of (n - 2 * i) to `total` at each iteration. Finally, it returns `total`.\n\nThe assertion `assert sum_series(6) == 12` checks that the function works correctly for the input 6. If the function's output for 6 is not 12, the assertion will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Your code should satisfy the following assertion:\n```python\nassert sum_series(6) == 12\n```\n\n    ### Response:\n```python\ndef sum_series(n):\n    total = 0\n    for i in range(n // 2 + 1):\n        total += n - 2 * i\n    return total\n\nassert sum_series(6) == 12\n```\n\nThe function `sum_series` calculates the sum of the series (n - 2*i) from i=0 to n // 2. It does this by initializing a variable `total` to 0, then iterating over the range from 0 to n // 2 (inclusive), adding the result of (n - 2 * i) to `total` at each iteration. Finally, it returns `total`.\n\nThe assertion `assert sum_series(6) == 12` checks that the function works correctly for the input 6. If the function's output for 6 is not 12, the assertion will raise an AssertionError."}

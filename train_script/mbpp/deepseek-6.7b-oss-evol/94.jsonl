{"task_id": "Mbpp/164", "completion": "\n```python\ndef sum_of_divisors(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum += i\n    return sum\n\ndef are_equivalent(a, b):\n    return sum_of_divisors(a) == sum_of_divisors(b)\n\nassert are_equivalent(36, 57) == False\n```\n\nIn this script, we first define a function `sum_of_divisors(n)` that calculates the sum of all divisors of a given number `n`. Then, we define another function `are_equivalent(a, b)` that checks if the sum of divisors of two numbers `a` and `b` are equal. Finally, we test this function with the given assertion.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to determine if the sum of the divisors of two integers are the same. Your code should satisfy the following assertion:\n```python\nassert are_equivalent(36, 57) == False\n```\n\n    ### Response:\n```python\ndef sum_of_divisors(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum += i\n    return sum\n\ndef are_equivalent(a, b):\n    return sum_of_divisors(a) == sum_of_divisors(b)\n\nassert are_equivalent(36, 57) == False\n```\n\nIn this script, we first define a function `sum_of_divisors(n)` that calculates the sum of all divisors of a given number `n`. Then, we define another function `are_equivalent(a, b)` that checks if the sum of divisors of two numbers `a` and `b` are equal. Finally, we test this function with the given assertion."}

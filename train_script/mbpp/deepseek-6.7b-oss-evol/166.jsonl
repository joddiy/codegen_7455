{"task_id": "Mbpp/305", "completion": "\n```python\ndef start_withp(words):\n    for word in words:\n        words_list = word.split()\n        for w in words_list:\n            if w.startswith('p') or w.startswith('P'):\n                return w,\n\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```\n\nThis function works by splitting each string in the list into a list of words, then checking each word to see if it starts with 'p' or 'P'. If it does, it returns that word. The function will return the first word it finds that starts with 'p' or 'P'. If no such word is found, it will return None.\n\nThe assertion checks if the function returns the expected output for the given input. If the function returns the expected output, the assertion will pass; otherwise, it will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to return two words from a list of words starting with letter 'p'. Your code should satisfy the following assertion:\n```python\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```\n\n    ### Response:\n```python\ndef start_withp(words):\n    for word in words:\n        words_list = word.split()\n        for w in words_list:\n            if w.startswith('p') or w.startswith('P'):\n                return w,\n\nassert start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==('Python', 'PHP')\n```\n\nThis function works by splitting each string in the list into a list of words, then checking each word to see if it starts with 'p' or 'P'. If it does, it returns that word. The function will return the first word it finds that starts with 'p' or 'P'. If no such word is found, it will return None.\n\nThe assertion checks if the function returns the expected output for the given input. If the function returns the expected output, the assertion will pass; otherwise, it will raise an AssertionError."}

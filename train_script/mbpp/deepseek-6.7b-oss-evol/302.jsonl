{"task_id": "Mbpp/619", "completion": "\n```python\ndef move_num(s):\n    nums = [i for i in s if i.isdigit()]\n    chars = [i for i in s if not i.isdigit()]\n    return ''.join(chars + nums)\n\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\nThis Python script defines a function `move_num` that takes a string `s` as input. It first creates two lists: `nums`, which contains all the digits in `s`, and `chars`, which contains all the non-digit characters in `s`. Then it concatenates `chars` and `nums` and returns the result.\n\nThe assertion checks if the function works correctly. If the function works correctly, the assertion will pass and no output will be produced. If the function does not work correctly, the assertion will fail and an AssertionError will be raised.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to move all the numbers to the end of the given string. Your code should satisfy the following assertion:\n```python\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\n    ### Response:\n```python\ndef move_num(s):\n    nums = [i for i in s if i.isdigit()]\n    chars = [i for i in s if not i.isdigit()]\n    return ''.join(chars + nums)\n\nassert move_num('I1love143you55three3000thousand') == 'Iloveyouthreethousand1143553000'\n```\n\nThis Python script defines a function `move_num` that takes a string `s` as input. It first creates two lists: `nums`, which contains all the digits in `s`, and `chars`, which contains all the non-digit characters in `s`. Then it concatenates `chars` and `nums` and returns the result.\n\nThe assertion checks if the function works correctly. If the function works correctly, the assertion will pass and no output will be produced. If the function does not work correctly, the assertion will fail and an AssertionError will be raised."}

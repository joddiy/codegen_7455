{"task_id": "Mbpp/566", "completion": "\n```python\ndef sum_digits(n):\n    return sum(int(digit) for digit in str(n))\n\nassert sum_digits(345)==12\n```\n\nThe function `sum_digits` takes an integer `n` as input, converts it to a string, and then iterates over each digit in the string. For each digit, it converts it back to an integer and adds it to the sum. The `assert` statement checks if the function `sum_digits` returns the correct sum for the input 345. If the function returns the correct sum, the `assert` statement does nothing, but if it returns a different sum, the `assert` statement will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to get the sum of the digits of a non-negative integer. Your code should satisfy the following assertion:\n```python\nassert sum_digits(345)==12\n```\n\n    ### Response:\n```python\ndef sum_digits(n):\n    return sum(int(digit) for digit in str(n))\n\nassert sum_digits(345)==12\n```\n\nThe function `sum_digits` takes an integer `n` as input, converts it to a string, and then iterates over each digit in the string. For each digit, it converts it back to an integer and adds it to the sum. The `assert` statement checks if the function `sum_digits` returns the correct sum for the input 345. If the function returns the correct sum, the `assert` statement does nothing, but if it returns a different sum, the `assert` statement will raise an `AssertionError`."}

{"task_id": "Mbpp/68", "completion": "\n```python\ndef is_Monotonic(arr):\n    return (all(arr[i] <= arr[i + 1] for i in range(len(arr) - 1)) or\n            all(arr[i] >= arr[i + 1] for i in range(len(arr) - 1)))\n\nassert is_Monotonic([6, 5, 4, 4]) == True\n```\n\nThe function `is_Monotonic` checks if the given array is monotonic by comparing each element with the next one. If all elements are less than or equal to the next one (or all elements are greater than or equal to the next one), the array is monotonic. The `assert` statement checks if the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether the given array is monotonic or not. Your code should satisfy the following assertion:\n```python\nassert is_Monotonic([6, 5, 4, 4]) == True\n```\n\n    ### Response:\n```python\ndef is_Monotonic(arr):\n    return (all(arr[i] <= arr[i + 1] for i in range(len(arr) - 1)) or\n            all(arr[i] >= arr[i + 1] for i in range(len(arr) - 1)))\n\nassert is_Monotonic([6, 5, 4, 4]) == True\n```\n\nThe function `is_Monotonic` checks if the given array is monotonic by comparing each element with the next one. If all elements are less than or equal to the next one (or all elements are greater than or equal to the next one), the array is monotonic. The `assert` statement checks if the function works correctly."}

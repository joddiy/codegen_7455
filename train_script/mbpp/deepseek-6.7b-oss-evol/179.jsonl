{"task_id": "Mbpp/395", "completion": "\n```python\ndef first_non_repeating_character(string):\n    char_count = {}\n    for char in string:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    for char in string:\n        if char_count[char] == 1:\n            return char\n    return None\n\nassert first_non_repeating_character(\"abcabc\") == None\n```\n\nThe function `first_non_repeating_character` works by first creating a dictionary `char_count` where the keys are the characters in the string and the values are the counts of each character. It then iterates over the string again, and returns the first character that has a count of 1. If no such character is found, it returns `None`.\n\nThe assertion `assert first_non_repeating_character(\"abcabc\") == None` checks if the function correctly returns `None` for the string \"abcabc\".", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the first non-repeated character in a given string. Your code should satisfy the following assertion:\n```python\nassert first_non_repeating_character(\"abcabc\") == None\n```\n\n    ### Response:\n```python\ndef first_non_repeating_character(string):\n    char_count = {}\n    for char in string:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    for char in string:\n        if char_count[char] == 1:\n            return char\n    return None\n\nassert first_non_repeating_character(\"abcabc\") == None\n```\n\nThe function `first_non_repeating_character` works by first creating a dictionary `char_count` where the keys are the characters in the string and the values are the counts of each character. It then iterates over the string again, and returns the first character that has a count of 1. If no such character is found, it returns `None`.\n\nThe assertion `assert first_non_repeating_character(\"abcabc\") == None` checks if the function correctly returns `None` for the string \"abcabc\"."}

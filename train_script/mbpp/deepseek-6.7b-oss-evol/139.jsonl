{"task_id": "Mbpp/270", "completion": "\n```python\ndef sum_even_and_even_index(lst):\n    return sum(num for index, num in enumerate(lst) if index % 2 == 0 and num % 2 == 0)\n\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```\n\nThe function `sum_even_and_even_index` iterates over the list `lst` using the `enumerate` function, which returns both the index and the value of each element. It then checks if the index is even (`index % 2 == 0`) and the number is even (`num % 2 == 0`). If both conditions are met, the number is added to the sum. The sum of all such numbers is then returned.\n\nThe assertion checks if the function works correctly for the given example. If the function returns 30, the assertion passes, otherwise it raises an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the sum of even numbers at even positions of a list. Your code should satisfy the following assertion:\n```python\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```\n\n    ### Response:\n```python\ndef sum_even_and_even_index(lst):\n    return sum(num for index, num in enumerate(lst) if index % 2 == 0 and num % 2 == 0)\n\nassert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30\n```\n\nThe function `sum_even_and_even_index` iterates over the list `lst` using the `enumerate` function, which returns both the index and the value of each element. It then checks if the index is even (`index % 2 == 0`) and the number is even (`num % 2 == 0`). If both conditions are met, the number is added to the sum. The sum of all such numbers is then returned.\n\nThe assertion checks if the function works correctly for the given example. If the function returns 30, the assertion passes, otherwise it raises an AssertionError."}

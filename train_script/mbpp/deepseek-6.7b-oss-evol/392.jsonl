{"task_id": "Mbpp/803", "completion": "\n```python\nimport math\n\ndef is_perfect_square(n):\n    if n < 0:\n        return False\n    root = math.sqrt(n)\n    return int(root + 0.5) ** 2 == n\n\nassert not is_perfect_square(10)\n```\n\nThis Python script defines a function `is_perfect_square` that takes an integer `n` as input. It first checks if `n` is less than 0, in which case it returns `False` because a negative number cannot be a perfect square. Then it calculates the square root of `n` using the `math.sqrt` function. It then checks if the square of the integer part of the square root (`int(root + 0.5) ** 2`) equals `n`. If it does, then `n` is a perfect square, and the function returns `True`. Otherwise, it returns `False`.\n\nThe assertion at the end checks if `is_perfect_square(10)` returns `False`, which is the expected result for a number that is not a perfect square.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/. Your code should satisfy the following assertion:\n```python\nassert not is_perfect_square(10)\n```\n\n    ### Response:\n```python\nimport math\n\ndef is_perfect_square(n):\n    if n < 0:\n        return False\n    root = math.sqrt(n)\n    return int(root + 0.5) ** 2 == n\n\nassert not is_perfect_square(10)\n```\n\nThis Python script defines a function `is_perfect_square` that takes an integer `n` as input. It first checks if `n` is less than 0, in which case it returns `False` because a negative number cannot be a perfect square. Then it calculates the square root of `n` using the `math.sqrt` function. It then checks if the square of the integer part of the square root (`int(root + 0.5) ** 2`) equals `n`. If it does, then `n` is a perfect square, and the function returns `True`. Otherwise, it returns `False`.\n\nThe assertion at the end checks if `is_perfect_square(10)` returns `False`, which is the expected result for a number that is not a perfect square."}

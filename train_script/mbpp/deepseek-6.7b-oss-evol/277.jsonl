{"task_id": "Mbpp/590", "completion": "\n```python\nimport cmath\n\ndef polar_rect(r, theta):\n    x = r * cmath.cos(theta)\n    y = r * cmath.sin(theta)\n    return (x, y)\n\nassert polar_rect(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\nThis script uses the `cmath` module in Python which provides functions for complex numbers. The `polar_rect` function takes two arguments, `r` and `theta`, which are the polar coordinates. It then calculates the rectangular coordinates `x` and `y` using the formula `x = r * cos(theta)` and `y = r * sin(theta)`. The function returns a tuple of the rectangular coordinates.\n\nThe assertion checks if the function returns the expected result for the given input. If the function returns the expected result, the assertion will pass, otherwise it will raise an `AssertionError`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert polar coordinates to rectangular coordinates. Your code should satisfy the following assertion:\n```python\nassert polar_rect(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\n    ### Response:\n```python\nimport cmath\n\ndef polar_rect(r, theta):\n    x = r * cmath.cos(theta)\n    y = r * cmath.sin(theta)\n    return (x, y)\n\nassert polar_rect(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\nThis script uses the `cmath` module in Python which provides functions for complex numbers. The `polar_rect` function takes two arguments, `r` and `theta`, which are the polar coordinates. It then calculates the rectangular coordinates `x` and `y` using the formula `x = r * cos(theta)` and `y = r * sin(theta)`. The function returns a tuple of the rectangular coordinates.\n\nThe assertion checks if the function returns the expected result for the given input. If the function returns the expected result, the assertion will pass, otherwise it will raise an `AssertionError`."}

{"task_id": "Mbpp/569", "completion": "\n```python\ndef sort_sublists(lst):\n    return [sorted(sublist) for sublist in lst]\n\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\nThe function `sort_sublists` takes a list of lists as input and returns a new list where each sublist is sorted. The `sorted` function is used to sort each sublist. The `assert` statement checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort each sublist of strings in a given list of lists. Your code should satisfy the following assertion:\n```python\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\n    ### Response:\n```python\ndef sort_sublists(lst):\n    return [sorted(sublist) for sublist in lst]\n\nassert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n```\n\nThe function `sort_sublists` takes a list of lists as input and returns a new list where each sublist is sorted. The `sorted` function is used to sort each sublist. The `assert` statement checks if the function works as expected."}

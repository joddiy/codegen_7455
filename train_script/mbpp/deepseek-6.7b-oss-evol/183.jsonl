{"task_id": "Mbpp/400", "completion": "\n```python\ndef extract_freq(lst):\n    return len(set(tuple(sorted(i)) for i in lst))\n\nassert extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3\n```\n\nIn this script, we first sort each tuple in the list and then convert it to a tuple. We then convert the list of tuples to a set, which automatically removes duplicates because sets only allow unique elements. Finally, we return the length of the set, which is the number of unique tuples in the list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to extract the number of unique tuples in the given list. Your code should satisfy the following assertion:\n```python\nassert extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3\n```\n\n    ### Response:\n```python\ndef extract_freq(lst):\n    return len(set(tuple(sorted(i)) for i in lst))\n\nassert extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3\n```\n\nIn this script, we first sort each tuple in the list and then convert it to a tuple. We then convert the list of tuples to a set, which automatically removes duplicates because sets only allow unique elements. Finally, we return the length of the set, which is the number of unique tuples in the list."}

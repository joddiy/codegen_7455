{"task_id": "Mbpp/75", "completion": "\n```python\ndef find_tuples(tuples_list, k):\n    result = []\n    for t in tuples_list:\n        if all(i % k == 0 for i in t):\n            result.append(t)\n    return result\n\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]\n```\n\nThis Python script defines a function `find_tuples` that takes a list of tuples and a number `k` as input. It iterates over each tuple in the list and checks if all elements in the tuple are divisible by `k`. If they are, it adds the tuple to the result list. Finally, it returns the result list. The assertion at the end checks if the function works correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find tuples which have all elements divisible by k from the given list of tuples. Your code should satisfy the following assertion:\n```python\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]\n```\n\n    ### Response:\n```python\ndef find_tuples(tuples_list, k):\n    result = []\n    for t in tuples_list:\n        if all(i % k == 0 for i in t):\n            result.append(t)\n    return result\n\nassert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]\n```\n\nThis Python script defines a function `find_tuples` that takes a list of tuples and a number `k` as input. It iterates over each tuple in the list and checks if all elements in the tuple are divisible by `k`. If they are, it adds the tuple to the result list. Finally, it returns the result list. The assertion at the end checks if the function works correctly."}

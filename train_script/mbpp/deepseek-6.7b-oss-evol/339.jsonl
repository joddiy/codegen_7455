{"task_id": "Mbpp/740", "completion": "\n```python\ndef tuple_to_dict(tup):\n    return {tup[i]: tup[i + 1] for i in range(0, len(tup), 2)}\n\nassert tuple_to_dict((1, 5, 7, 10, 13, 5)) == {1: 5, 7: 10, 13: 5}\n```\n\nThe function `tuple_to_dict` takes a tuple `tup` as input and returns a dictionary. The dictionary is created using a dictionary comprehension, where the keys are the elements of the tuple at even indices (0, 2, 4, etc.) and the values are the elements of the tuple at odd indices (1, 3, 5, etc.). The `range(0, len(tup), 2)` generates the even indices of the tuple. The `assert` statement checks if the function is working correctly.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/. Your code should satisfy the following assertion:\n```python\nassert tuple_to_dict((1, 5, 7, 10, 13, 5)) == {1: 5, 7: 10, 13: 5}\n```\n\n    ### Response:\n```python\ndef tuple_to_dict(tup):\n    return {tup[i]: tup[i + 1] for i in range(0, len(tup), 2)}\n\nassert tuple_to_dict((1, 5, 7, 10, 13, 5)) == {1: 5, 7: 10, 13: 5}\n```\n\nThe function `tuple_to_dict` takes a tuple `tup` as input and returns a dictionary. The dictionary is created using a dictionary comprehension, where the keys are the elements of the tuple at even indices (0, 2, 4, etc.) and the values are the elements of the tuple at odd indices (1, 3, 5, etc.). The `range(0, len(tup), 2)` generates the even indices of the tuple. The `assert` statement checks if the function is working correctly."}

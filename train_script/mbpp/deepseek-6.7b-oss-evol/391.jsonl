{"task_id": "Mbpp/801", "completion": "\n```python\ndef test_three_equal(a, b, c):\n    if a == b == c:\n        return 3\n    elif a == b or a == c or b == c:\n        return 2\n    else:\n        return 0\n\nassert test_three_equal(1,1,1) == 3\nassert test_three_equal(1,2,1) == 2\nassert test_three_equal(1,2,3) == 0\n```\n\nIn this script, the function `test_three_equal` takes three parameters `a`, `b`, and `c`. It checks if all three numbers are equal, if so it returns `3`. If not, it checks if any two numbers are equal and returns `2`. If none of the conditions are met, it returns `0`. The assertions at the end of the script test the function with different inputs to ensure it is working as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of equal numbers from three given integers. Your code should satisfy the following assertion:\n```python\nassert test_three_equal(1,1,1) == 3\n```\n\n    ### Response:\n```python\ndef test_three_equal(a, b, c):\n    if a == b == c:\n        return 3\n    elif a == b or a == c or b == c:\n        return 2\n    else:\n        return 0\n\nassert test_three_equal(1,1,1) == 3\nassert test_three_equal(1,2,1) == 2\nassert test_three_equal(1,2,3) == 0\n```\n\nIn this script, the function `test_three_equal` takes three parameters `a`, `b`, and `c`. It checks if all three numbers are equal, if so it returns `3`. If not, it checks if any two numbers are equal and returns `2`. If none of the conditions are met, it returns `0`. The assertions at the end of the script test the function with different inputs to ensure it is working as expected."}

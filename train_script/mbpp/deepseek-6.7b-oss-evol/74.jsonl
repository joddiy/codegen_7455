{"task_id": "Mbpp/126", "completion": "\n```python\ndef sum_common_divisors(num1, num2):\n    def common_divisors(num):\n        divisors = [1]\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                divisors.extend([i, num//i])\n        return divisors\n\n    return sum(set(common_divisors(num1)) & set(common_divisors(num2)))\n\nassert sum_common_divisors(10, 15) == 6\n```\n\nIn this script, we first define a helper function `common_divisors(num)` that returns a list of all divisors of a given number. We then use this function to find the common divisors of `num1` and `num2`, and return their sum. The `&` operator is used to find the intersection of two sets, which are the common divisors. The `sum()` function is used to add up the elements of the intersection set.\n\nThe assertion at the end of the script checks if the function works correctly for the given example. If the function returns the correct result, the assertion will pass, otherwise it will raise an AssertionError.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the sum of common divisors of two given numbers. Your code should satisfy the following assertion:\n```python\nassert sum(10,15) == 6\n```\n\n    ### Response:\n```python\ndef sum_common_divisors(num1, num2):\n    def common_divisors(num):\n        divisors = [1]\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                divisors.extend([i, num//i])\n        return divisors\n\n    return sum(set(common_divisors(num1)) & set(common_divisors(num2)))\n\nassert sum_common_divisors(10, 15) == 6\n```\n\nIn this script, we first define a helper function `common_divisors(num)` that returns a list of all divisors of a given number. We then use this function to find the common divisors of `num1` and `num2`, and return their sum. The `&` operator is used to find the intersection of two sets, which are the common divisors. The `sum()` function is used to add up the elements of the intersection set.\n\nThe assertion at the end of the script checks if the function works correctly for the given example. If the function returns the correct result, the assertion will pass, otherwise it will raise an AssertionError."}

{"task_id": "Mbpp/131", "completion": "\n```python\ndef reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    s = list(s)\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] not in vowels:\n            i += 1\n        elif s[j] not in vowels:\n            j -= 1\n        else:\n            s[i], s[j] = s[j], s[i]\n            i, j = i + 1, j - 1\n    return ''.join(s)\n\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\nThis Python script defines a function `reverse_vowels` that takes a string `s` as input and returns a new string where the vowels are reversed. The function works by iterating over the string from both ends, swapping the vowels it finds, and then moving the pointers towards the center of the string. If the current character is not a vowel, the pointer is moved to the next character. The function finally returns the modified string. The assertion at the end checks if the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to reverse only the vowels of a given string (where y is not a vowel). Your code should satisfy the following assertion:\n```python\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\n    ### Response:\n```python\ndef reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    s = list(s)\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] not in vowels:\n            i += 1\n        elif s[j] not in vowels:\n            j -= 1\n        else:\n            s[i], s[j] = s[j], s[i]\n            i, j = i + 1, j - 1\n    return ''.join(s)\n\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\nThis Python script defines a function `reverse_vowels` that takes a string `s` as input and returns a new string where the vowels are reversed. The function works by iterating over the string from both ends, swapping the vowels it finds, and then moving the pointers towards the center of the string. If the current character is not a vowel, the pointer is moved to the next character. The function finally returns the modified string. The assertion at the end checks if the function works as expected."}

{"task_id": "Mbpp/389", "completion": "\n```python\ndef find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        a, b = 2, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b\n\nassert find_lucas(9) == 76\n```\n\nIn this script, the function `find_lucas(n)` calculates the n'th Lucas number. The Lucas sequence is similar to the Fibonacci sequence, but starts with 2 and 1 instead of 0 and 1. The function uses a loop to calculate the n'th number by iteratively updating the values of `a` and `b` to the next two numbers in the sequence. The assertion at the end checks that the function works correctly for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the n'th lucas number. Your code should satisfy the following assertion:\n```python\nassert find_lucas(9) == 76\n```\n\n    ### Response:\n```python\ndef find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        a, b = 2, 1\n        for _ in range(2, n+1):\n            a, b = b, a + b\n        return b\n\nassert find_lucas(9) == 76\n```\n\nIn this script, the function `find_lucas(n)` calculates the n'th Lucas number. The Lucas sequence is similar to the Fibonacci sequence, but starts with 2 and 1 instead of 0 and 1. The function uses a loop to calculate the n'th number by iteratively updating the values of `a` and `b` to the next two numbers in the sequence. The assertion at the end checks that the function works correctly for the given input."}

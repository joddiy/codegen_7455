{"task_id": "Mbpp/463", "completion": "\n```python\ndef max_subarray_product(arr):\n    if not arr:\n        return 0\n\n    max_product = min_product = result = arr[0]\n\n    for num in arr[1:]:\n        if num < 0:\n            max_product, min_product = min_product, max_product\n\n        max_product = max(num, max_product * num)\n        min_product = min(num, min_product * num)\n\n        result = max(result, max_product)\n\n    return result\n\nassert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112\n```\n\nThis Python script uses Kadane's algorithm to find the maximum product subarray. It iterates through the array, updating the maximum and minimum product values for each number. If the number is negative, it swaps the maximum and minimum product values. The maximum product value is updated by taking the maximum of the current number and the product of the current number and the maximum product value. The minimum product value is updated by taking the minimum of the current number and the product of the current number and the minimum product value. The result is updated by taking the maximum of the result and the maximum product value. The function finally returns the result.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the maximum product subarray of the given array. Your code should satisfy the following assertion:\n```python\nassert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112\n```\n\n    ### Response:\n```python\ndef max_subarray_product(arr):\n    if not arr:\n        return 0\n\n    max_product = min_product = result = arr[0]\n\n    for num in arr[1:]:\n        if num < 0:\n            max_product, min_product = min_product, max_product\n\n        max_product = max(num, max_product * num)\n        min_product = min(num, min_product * num)\n\n        result = max(result, max_product)\n\n    return result\n\nassert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112\n```\n\nThis Python script uses Kadane's algorithm to find the maximum product subarray. It iterates through the array, updating the maximum and minimum product values for each number. If the number is negative, it swaps the maximum and minimum product values. The maximum product value is updated by taking the maximum of the current number and the product of the current number and the maximum product value. The minimum product value is updated by taking the minimum of the current number and the product of the current number and the minimum product value. The result is updated by taking the maximum of the result and the maximum product value. The function finally returns the result."}

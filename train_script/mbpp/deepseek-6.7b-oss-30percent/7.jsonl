{"task_id": "Mbpp/11", "completion": "\n```python\ndef remove_Occ(string, char):\n    if char in string:\n        first_index = string.find(char)\n        last_index = string.rfind(char)\n        return string[:first_index] + string[first_index+1:last_index] + string[last_index+1:]\n    else:\n        return string\n```\nThe `remove_Occ` function first checks if the given character is present in the string. If it is, it finds the first and last occurrences of the character using `find` and `rfind` methods. Then, it returns the modified string by removing the first and last occurrences of the given character. If the character is not present in the string, it returns the original string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to remove first and last occurrence of a given character from the string. Your code should satisfy the following assertion:\n```python\nassert remove_Occ(\"hello\",\"l\") == \"heo\"\n```\n\n    ### Response:\n```python\ndef remove_Occ(string, char):\n    if char in string:\n        first_index = string.find(char)\n        last_index = string.rfind(char)\n        return string[:first_index] + string[first_index+1:last_index] + string[last_index+1:]\n    else:\n        return string\n```\nThe `remove_Occ` function first checks if the given character is present in the string. If it is, it finds the first and last occurrences of the character using `find` and `rfind` methods. Then, it returns the modified string by removing the first and last occurrences of the given character. If the character is not present in the string, it returns the original string."}

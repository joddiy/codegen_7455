{"task_id": "Mbpp/767", "completion": "\n```python\ndef get_pairs_count(nums, target):\n    count = 0\n    num_count = {}\n    for num in nums:\n        complement = target - num\n        if complement in num_count:\n            count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return count\n```\nThe `get_pairs_count` function iterates through the list of numbers and for each number, it checks if the complement (target - num) exists in the dictionary `num_count`. If it does, it increments the count by the number of times the complement has been encountered. Then, it updates the count in the dictionary for the current number. Finally, it returns the total count of pairs whose sum is equal to the target.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,. Your code should satisfy the following assertion:\n```python\nassert get_pairs_count([1,1,1,1],2) == 6\n```\n\n    ### Response:\n```python\ndef get_pairs_count(nums, target):\n    count = 0\n    num_count = {}\n    for num in nums:\n        complement = target - num\n        if complement in num_count:\n            count += num_count[complement]\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return count\n```\nThe `get_pairs_count` function iterates through the list of numbers and for each number, it checks if the complement (target - num) exists in the dictionary `num_count`. If it does, it increments the count by the number of times the complement has been encountered. Then, it updates the count in the dictionary for the current number. Finally, it returns the total count of pairs whose sum is equal to the target."}

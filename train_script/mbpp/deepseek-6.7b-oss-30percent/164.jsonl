{"task_id": "Mbpp/300", "completion": "\n```python\nimport math\n\ndef count_binary_seq(n):\n    # Initialize the count of sequences\n    count = 0\n\n    # Recursive function to count binary sequences\n    def count_sequences(i, sum1, sum2):\n        nonlocal count\n        if i == 2 * n:\n            if sum1 == sum2:\n                count += 1\n            return\n        count_sequences(i + 1, sum1 + 1, sum2)\n        count_sequences(i + 1, sum1, sum2 + 1)\n\n    # Call the recursive function to count sequences\n    count_sequences(0, 0, 0)\n\n    # Return the count of sequences\n    return count\n\n# Test the function\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. Your code should satisfy the following assertion:\n```python\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```\n\n    ### Response:\n```python\nimport math\n\ndef count_binary_seq(n):\n    # Initialize the count of sequences\n    count = 0\n\n    # Recursive function to count binary sequences\n    def count_sequences(i, sum1, sum2):\n        nonlocal count\n        if i == 2 * n:\n            if sum1 == sum2:\n                count += 1\n            return\n        count_sequences(i + 1, sum1 + 1, sum2)\n        count_sequences(i + 1, sum1, sum2 + 1)\n\n    # Call the recursive function to count sequences\n    count_sequences(0, 0, 0)\n\n    # Return the count of sequences\n    return count\n\n# Test the function\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```"}

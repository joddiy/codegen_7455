{"task_id": "Mbpp/799", "completion": "\n```python\ndef left_rotate(num, d):\n    # Convert the number to binary representation\n    binary_num = bin(num)[2:]\n    \n    # Pad the binary representation with leading zeros if necessary\n    binary_num = binary_num.zfill(32)\n    \n    # Rotate the bits to the left by d positions\n    rotated_bits = binary_num[d:] + binary_num[:d]\n    \n    # Convert the rotated bits back to decimal\n    rotated_num = int(rotated_bits, 2)\n    \n    return rotated_num\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit. Your code should satisfy the following assertion:\n```python\nassert left_rotate(16,2) == 64\n```\n\n    ### Response:\n```python\ndef left_rotate(num, d):\n    # Convert the number to binary representation\n    binary_num = bin(num)[2:]\n    \n    # Pad the binary representation with leading zeros if necessary\n    binary_num = binary_num.zfill(32)\n    \n    # Rotate the bits to the left by d positions\n    rotated_bits = binary_num[d:] + binary_num[:d]\n    \n    # Convert the rotated bits back to decimal\n    rotated_num = int(rotated_bits, 2)\n    \n    return rotated_num\n```"}

{"task_id": "Mbpp/771", "completion": "\n```python\ndef check_expression(expression):\n    stack = []\n    opening_brackets = set(['(', '[', '{'])\n    closing_brackets = set([')', ']', '}'])\n    bracket_pairs = {')': '(', ']': '[', '}': '{'}\n\n    for char in expression:\n        if char in opening_brackets:\n            stack.append(char)\n        elif char in closing_brackets:\n            if not stack or bracket_pairs[char] != stack.pop():\n                return False\n\n    return not stack\n```\n\nThe `check_expression` function uses a stack to keep track of opening brackets encountered. It iterates through the expression, pushing opening brackets onto the stack and popping closing brackets when encountered. If the stack is empty at the end, the expression is balanced, otherwise, it is not balanced.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/. Your code should satisfy the following assertion:\n```python\nassert check_expression(\"{()}[{}]\") == True\n```\n\n    ### Response:\n```python\ndef check_expression(expression):\n    stack = []\n    opening_brackets = set(['(', '[', '{'])\n    closing_brackets = set([')', ']', '}'])\n    bracket_pairs = {')': '(', ']': '[', '}': '{'}\n\n    for char in expression:\n        if char in opening_brackets:\n            stack.append(char)\n        elif char in closing_brackets:\n            if not stack or bracket_pairs[char] != stack.pop():\n                return False\n\n    return not stack\n```\n\nThe `check_expression` function uses a stack to keep track of opening brackets encountered. It iterates through the expression, pushing opening brackets onto the stack and popping closing brackets when encountered. If the stack is empty at the end, the expression is balanced, otherwise, it is not balanced."}

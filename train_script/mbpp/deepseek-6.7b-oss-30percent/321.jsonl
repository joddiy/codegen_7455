{"task_id": "Mbpp/644", "completion": "\n```python\ndef reverse_Array_Upto_K(arr, k):\n    return arr[:k][::-1] + arr[k:]\n```\nThe `reverse_Array_Upto_K` function takes an array `arr` and an integer `k` as input. It returns a new array that consists of the first `k` elements of `arr` in reverse order followed by the remaining elements of `arr`. This solution uses list slicing and the `[::-1]` syntax to achieve the desired result.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to reverse an array upto a given position. Your code should satisfy the following assertion:\n```python\nassert reverse_Array_Upto_K([1, 2, 3, 4, 5, 6],4) == [4, 3, 2, 1, 5, 6]\n```\n\n    ### Response:\n```python\ndef reverse_Array_Upto_K(arr, k):\n    return arr[:k][::-1] + arr[k:]\n```\nThe `reverse_Array_Upto_K` function takes an array `arr` and an integer `k` as input. It returns a new array that consists of the first `k` elements of `arr` in reverse order followed by the remaining elements of `arr`. This solution uses list slicing and the `[::-1]` syntax to achieve the desired result."}

{"task_id": "Mbpp/4", "completion": "\n```python\nimport heapq\n\ndef heap_queue_largest(nums, n):\n    # Use heapq to find the n largest integers\n    largest_nums = heapq.nlargest(n, nums)\n    return largest_nums\n\n# Test the function\nassert heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]\n```\n\nThe `heap_queue_largest` function uses the `heapq.nlargest` method to find the n largest integers from the given list of numbers. The function then returns the n largest integers in descending order. The provided assertion verifies the correctness of the function.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the n largest integers from a given list of numbers, returned in descending order. Your code should satisfy the following assertion:\n```python\nassert heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]\n```\n\n    ### Response:\n```python\nimport heapq\n\ndef heap_queue_largest(nums, n):\n    # Use heapq to find the n largest integers\n    largest_nums = heapq.nlargest(n, nums)\n    return largest_nums\n\n# Test the function\nassert heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]\n```\n\nThe `heap_queue_largest` function uses the `heapq.nlargest` method to find the n largest integers from the given list of numbers. The function then returns the n largest integers in descending order. The provided assertion verifies the correctness of the function."}

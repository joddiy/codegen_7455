{"task_id": "Mbpp/131", "completion": "\n```python\ndef reverse_vowels(s):\n    vowels = set(\"aeiouAEIOU\")\n    s = list(s)\n    left, right = 0, len(s) - 1\n    while left < right:\n        while s[left] not in vowels and left < right:\n            left += 1\n        while s[right] not in vowels and left < right:\n            right -= 1\n        s[left], s[right] = s[right], s[left]\n        left += 1\n        right -= 1\n    return ''.join(s)\n\n# Test the function\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\nThe `reverse_vowels` function takes a string `s` as input and reverses only the vowels of the string. It uses two pointers, `left` and `right`, to traverse the string from the beginning and end, respectively. It swaps the vowels encountered at the two pointers and continues the process until the pointers meet in the middle. Finally, it returns the modified string with reversed vowels. The provided assertion ensures that the function works as expected.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to reverse only the vowels of a given string (where y is not a vowel). Your code should satisfy the following assertion:\n```python\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\n    ### Response:\n```python\ndef reverse_vowels(s):\n    vowels = set(\"aeiouAEIOU\")\n    s = list(s)\n    left, right = 0, len(s) - 1\n    while left < right:\n        while s[left] not in vowels and left < right:\n            left += 1\n        while s[right] not in vowels and left < right:\n            right -= 1\n        s[left], s[right] = s[right], s[left]\n        left += 1\n        right -= 1\n    return ''.join(s)\n\n# Test the function\nassert reverse_vowels(\"Python\") == \"Python\"\n```\n\nThe `reverse_vowels` function takes a string `s` as input and reverses only the vowels of the string. It uses two pointers, `left` and `right`, to traverse the string from the beginning and end, respectively. It swaps the vowels encountered at the two pointers and continues the process until the pointers meet in the middle. Finally, it returns the modified string with reversed vowels. The provided assertion ensures that the function works as expected."}

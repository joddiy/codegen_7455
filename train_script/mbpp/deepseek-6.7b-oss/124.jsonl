{"task_id": "Mbpp/252", "completion": "\n```python\nimport cmath\n\ndef convert(complex_number):\n    polar_coordinates = cmath.polar(complex_number)\n    return polar_coordinates\n\n# Test the function\nassert convert(1) == (1.0, 0.0)\n```\n\nThe `convert` function uses the `cmath.polar` method to convert the given complex number to polar coordinates. The assertion verifies that the function correctly converts the complex number 1 to the expected polar coordinates (1.0, 0.0).", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to convert complex numbers to polar coordinates. Your code should satisfy the following assertion:\n```python\nassert convert(1) == (1.0, 0.0)\n```\n\n    ### Response:\n```python\nimport cmath\n\ndef convert(complex_number):\n    polar_coordinates = cmath.polar(complex_number)\n    return polar_coordinates\n\n# Test the function\nassert convert(1) == (1.0, 0.0)\n```\n\nThe `convert` function uses the `cmath.polar` method to convert the given complex number to polar coordinates. The assertion verifies that the function correctly converts the complex number 1 to the expected polar coordinates (1.0, 0.0)."}

{"task_id": "Mbpp/244", "completion": "\n```python\nimport math\n\ndef next_Perfect_Square(num):\n    # Find the square root of the given number\n    sqrt_num = math.sqrt(num)\n    \n    # Check if the square root is an integer\n    if sqrt_num.is_integer():\n        # If it is, return the square of the square root\n        return int(sqrt_num) ** 2\n    else:\n        # If not, find the next integer greater than the square root\n        next_int = int(sqrt_num) + 1\n        # Return the square of the next integer\n        return next_int ** 2\n\n# Test the function\nassert next_Perfect_Square(35) == 36\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the next perfect square greater than a given number. Your code should satisfy the following assertion:\n```python\nassert next_Perfect_Square(35) == 36\n```\n\n    ### Response:\n```python\nimport math\n\ndef next_Perfect_Square(num):\n    # Find the square root of the given number\n    sqrt_num = math.sqrt(num)\n    \n    # Check if the square root is an integer\n    if sqrt_num.is_integer():\n        # If it is, return the square of the square root\n        return int(sqrt_num) ** 2\n    else:\n        # If not, find the next integer greater than the square root\n        next_int = int(sqrt_num) + 1\n        # Return the square of the next integer\n        return next_int ** 2\n\n# Test the function\nassert next_Perfect_Square(35) == 36\n```"}

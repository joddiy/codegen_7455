{"task_id": "Mbpp/8", "completion": "\n```python\ndef square_nums(nums):\n    return [num ** 2 for num in nums]\n\nassert square_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```\n\nThe `square_nums` function takes a list of numbers as input and uses a list comprehension to square each element. The assert statement verifies that the function produces the expected output for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find squares of individual elements in a list. Your code should satisfy the following assertion:\n```python\nassert square_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```\n\n    ### Response:\n```python\ndef square_nums(nums):\n    return [num ** 2 for num in nums]\n\nassert square_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```\n\nThe `square_nums` function takes a list of numbers as input and uses a list comprehension to square each element. The assert statement verifies that the function produces the expected output for the given input."}

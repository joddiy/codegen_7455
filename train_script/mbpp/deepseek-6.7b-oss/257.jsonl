{"task_id": "Mbpp/566", "completion": "\n```python\ndef sum_digits(num):\n    # Convert the number to a string to iterate through its digits\n    num_str = str(num)\n    # Initialize the sum of digits\n    digit_sum = 0\n    # Iterate through each digit and add it to the sum\n    for digit in num_str:\n        digit_sum += int(digit)\n    return digit_sum\n\n# Test the function\nassert sum_digits(345) == 12\n```\n\nThe `sum_digits` function takes a non-negative integer `num` as input and returns the sum of its digits. It first converts the number to a string to iterate through its digits. Then, it initializes the sum of digits and iterates through each digit, adding it to the sum. Finally, it returns the sum of digits. The provided assertion verifies the correctness of the function.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to get the sum of the digits of a non-negative integer. Your code should satisfy the following assertion:\n```python\nassert sum_digits(345)==12\n```\n\n    ### Response:\n```python\ndef sum_digits(num):\n    # Convert the number to a string to iterate through its digits\n    num_str = str(num)\n    # Initialize the sum of digits\n    digit_sum = 0\n    # Iterate through each digit and add it to the sum\n    for digit in num_str:\n        digit_sum += int(digit)\n    return digit_sum\n\n# Test the function\nassert sum_digits(345) == 12\n```\n\nThe `sum_digits` function takes a non-negative integer `num` as input and returns the sum of its digits. It first converts the number to a string to iterate through its digits. Then, it initializes the sum of digits and iterates through each digit, adding it to the sum. Finally, it returns the sum of digits. The provided assertion verifies the correctness of the function."}

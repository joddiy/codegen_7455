{"task_id": "Mbpp/785", "completion": "\n```python\ndef tuple_str_int(tuple_str):\n    # Remove the leading and trailing parentheses\n    tuple_str = tuple_str.strip('()')\n    # Split the string by comma and convert each element to integer\n    tuple_list = [int(x) for x in tuple_str.split(',')]\n    # Create a tuple from the list\n    tuple_int = tuple(tuple_list)\n    return tuple_int\n\n# Test the function\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\nThe `tuple_str_int` function first removes the leading and trailing parentheses from the input string. Then, it splits the string by comma and converts each element to an integer. Finally, it creates a tuple from the list and returns the result. The provided assertion verifies that the function correctly converts the tuple string to an integer tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert tuple string to integer tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\n    ### Response:\n```python\ndef tuple_str_int(tuple_str):\n    # Remove the leading and trailing parentheses\n    tuple_str = tuple_str.strip('()')\n    # Split the string by comma and convert each element to integer\n    tuple_list = [int(x) for x in tuple_str.split(',')]\n    # Create a tuple from the list\n    tuple_int = tuple(tuple_list)\n    return tuple_int\n\n# Test the function\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\nThe `tuple_str_int` function first removes the leading and trailing parentheses from the input string. Then, it splits the string by comma and converts each element to an integer. Finally, it creates a tuple from the list and returns the result. The provided assertion verifies that the function correctly converts the tuple string to an integer tuple."}

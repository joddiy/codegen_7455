{"task_id": "Mbpp/590", "completion": "\n```python\nimport cmath\n\ndef polar_rect(r, theta):\n    x = r * cmath.cos(theta)\n    y = r * cmath.sin(theta)\n    return (x, y)\n\n# Test the function\nassert polar_rect(3, 4) == ((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\nThe `polar_rect` function takes the radius `r` and angle `theta` as input and calculates the rectangular coordinates using the trigonometric functions from the `cmath` module. The assertion verifies that the function produces the expected output for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert polar coordinates to rectangular coordinates. Your code should satisfy the following assertion:\n```python\nassert polar_rect(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\n    ### Response:\n```python\nimport cmath\n\ndef polar_rect(r, theta):\n    x = r * cmath.cos(theta)\n    y = r * cmath.sin(theta)\n    return (x, y)\n\n# Test the function\nassert polar_rect(3, 4) == ((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\nThe `polar_rect` function takes the radius `r` and angle `theta` as input and calculates the rectangular coordinates using the trigonometric functions from the `cmath` module. The assertion verifies that the function produces the expected output for the given input."}

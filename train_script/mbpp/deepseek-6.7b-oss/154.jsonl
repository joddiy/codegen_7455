{"task_id": "Mbpp/286", "completion": "\n```python\ndef max_sub_array_sum_repeated(arr, k, n):\n    def kadane(arr):\n        max_sum = float('-inf')\n        current_sum = 0\n        for num in arr:\n            current_sum = max(num, current_sum + num)\n            max_sum = max(max_sum, current_sum)\n        return max_sum\n\n    total_sum = sum(arr)\n    max_sum = kadane(arr)\n    max_sum_repeated = max(max_sum, total_sum * max(0, k - 2) + kadane([arr[i] for i in range(1, n * k - 1)]))\n    return max_sum_repeated\n```\n\nThe `max_sub_array_sum_repeated` function first defines a helper function `kadane` to find the maximum subarray sum using Kadane's algorithm. Then, it calculates the total sum of the array and the maximum sum of the array. Finally, it computes the maximum sum of the modified array by considering the case where the array is repeated k times and returns the result.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times. Your code should satisfy the following assertion:\n```python\nassert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30\n```\n\n    ### Response:\n```python\ndef max_sub_array_sum_repeated(arr, k, n):\n    def kadane(arr):\n        max_sum = float('-inf')\n        current_sum = 0\n        for num in arr:\n            current_sum = max(num, current_sum + num)\n            max_sum = max(max_sum, current_sum)\n        return max_sum\n\n    total_sum = sum(arr)\n    max_sum = kadane(arr)\n    max_sum_repeated = max(max_sum, total_sum * max(0, k - 2) + kadane([arr[i] for i in range(1, n * k - 1)]))\n    return max_sum_repeated\n```\n\nThe `max_sub_array_sum_repeated` function first defines a helper function `kadane` to find the maximum subarray sum using Kadane's algorithm. Then, it calculates the total sum of the array and the maximum sum of the array. Finally, it computes the maximum sum of the modified array by considering the case where the array is repeated k times and returns the result."}

{"task_id": "Mbpp/92", "completion": "\n```python\ndef is_undulating(num):\n    num_str = str(num)\n    if len(num_str) < 3:\n        return False  # Undulating number must have at least 3 digits\n\n    prev_diff = int(num_str[1]) - int(num_str[0])\n    for i in range(2, len(num_str)):\n        diff = int(num_str[i]) - int(num_str[i-1])\n        if diff != prev_diff:\n            return False\n        prev_diff = diff\n\n    return True\n```\n\nThe `is_undulating` function first converts the input number to a string to handle the case of single-digit numbers. It then checks if the number has at least 3 digits, as an undulating number must have at least 3 digits. Next, it iterates through the digits, comparing the differences between consecutive pairs of digits. If any pair of consecutive digits has a different difference, the function returns False. If all differences are the same, the function returns True, indicating that the number is undulating.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is undulating or not. Your code should satisfy the following assertion:\n```python\nassert is_undulating(1212121) == True\n```\n\n    ### Response:\n```python\ndef is_undulating(num):\n    num_str = str(num)\n    if len(num_str) < 3:\n        return False  # Undulating number must have at least 3 digits\n\n    prev_diff = int(num_str[1]) - int(num_str[0])\n    for i in range(2, len(num_str)):\n        diff = int(num_str[i]) - int(num_str[i-1])\n        if diff != prev_diff:\n            return False\n        prev_diff = diff\n\n    return True\n```\n\nThe `is_undulating` function first converts the input number to a string to handle the case of single-digit numbers. It then checks if the number has at least 3 digits, as an undulating number must have at least 3 digits. Next, it iterates through the digits, comparing the differences between consecutive pairs of digits. If any pair of consecutive digits has a different difference, the function returns False. If all differences are the same, the function returns True, indicating that the number is undulating."}

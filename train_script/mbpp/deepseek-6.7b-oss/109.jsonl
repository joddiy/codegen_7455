{"task_id": "Mbpp/232", "completion": "\n```python\ndef larg_nnum(lst, n):\n    lst.sort(reverse=True)  # Sort the list in descending order\n    return lst[:n]  # Return the first n items from the sorted list\n```\n\nThe `larg_nnum` function takes in a list `lst` and an integer `n`. It sorts the list in descending order and then returns the first `n` items from the sorted list, which represents the `n` largest items in the original list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Your code should satisfy the following assertion:\n```python\nassert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])\n```\n\n    ### Response:\n```python\ndef larg_nnum(lst, n):\n    lst.sort(reverse=True)  # Sort the list in descending order\n    return lst[:n]  # Return the first n items from the sorted list\n```\n\nThe `larg_nnum` function takes in a list `lst` and an integer `n`. It sorts the list in descending order and then returns the first `n` items from the sorted list, which represents the `n` largest items in the original list."}

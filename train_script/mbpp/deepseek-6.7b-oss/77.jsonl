{"task_id": "Mbpp/129", "completion": "\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    target_sum = sum(matrix[0])  # Sum of the first row as the target sum for the rest of the rows\n\n    # Check row sums\n    for row in matrix:\n        if sum(row) != target_sum:\n            return False\n\n    # Check column sums\n    for j in range(n):\n        col_sum = sum(matrix[i][j] for i in range(n))\n        if col_sum != target_sum:\n            return False\n\n    # Check diagonal sums\n    diag_sum1 = sum(matrix[i][i] for i in range(n))\n    diag_sum2 = sum(matrix[i][n - 1 - i] for i in range(n))\n    if diag_sum1 != target_sum or diag_sum2 != target_sum:\n        return False\n\n    return True\n```\n\nThe `magic_square_test` function first calculates the target sum by summing the elements of the first row. Then, it checks the row sums, column sums, and diagonal sums to determine if the matrix is a magic square. If all sums are equal to the target sum, the function returns `True`, indicating that the matrix is a magic square. Otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n    ### Response:\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    target_sum = sum(matrix[0])  # Sum of the first row as the target sum for the rest of the rows\n\n    # Check row sums\n    for row in matrix:\n        if sum(row) != target_sum:\n            return False\n\n    # Check column sums\n    for j in range(n):\n        col_sum = sum(matrix[i][j] for i in range(n))\n        if col_sum != target_sum:\n            return False\n\n    # Check diagonal sums\n    diag_sum1 = sum(matrix[i][i] for i in range(n))\n    diag_sum2 = sum(matrix[i][n - 1 - i] for i in range(n))\n    if diag_sum1 != target_sum or diag_sum2 != target_sum:\n        return False\n\n    return True\n```\n\nThe `magic_square_test` function first calculates the target sum by summing the elements of the first row. Then, it checks the row sums, column sums, and diagonal sums to determine if the matrix is a magic square. If all sums are equal to the target sum, the function returns `True`, indicating that the matrix is a magic square. Otherwise, it returns `False`."}

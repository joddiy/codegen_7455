{"task_id": "Mbpp/447", "completion": "\n```python\ndef cube_nums(nums):\n    return [num ** 3 for num in nums]\n\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```\n\nThe `cube_nums` function takes a list of numbers as input and returns a list of their cubes using a list comprehension. The provided assertion verifies that the function correctly calculates the cubes of the input list of numbers.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find cubes of individual elements in a list. Your code should satisfy the following assertion:\n```python\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```\n\n    ### Response:\n```python\ndef cube_nums(nums):\n    return [num ** 3 for num in nums]\n\nassert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n```\n\nThe `cube_nums` function takes a list of numbers as input and returns a list of their cubes using a list comprehension. The provided assertion verifies that the function correctly calculates the cubes of the input list of numbers."}

{"task_id": "Mbpp/607", "completion": "\n```python\nimport re\n\ndef find_literals(string, pattern):\n    match = re.search(pattern, string)\n    if match:\n        return match.group(), match.start(), match.end()\n    else:\n        return None\n\n# Test the function\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```\n\nThe `find_literals` function uses the `re.search` method to find the first occurrence of the given pattern in the input string. If a match is found, it returns the matching substring, the start index, and the end index. If no match is found, it returns `None`. The provided assertion verifies the correctness of the function.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index. Your code should satisfy the following assertion:\n```python\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```\n\n    ### Response:\n```python\nimport re\n\ndef find_literals(string, pattern):\n    match = re.search(pattern, string)\n    if match:\n        return match.group(), match.start(), match.end()\n    else:\n        return None\n\n# Test the function\nassert find_literals('The quick brown fox jumps over the lazy dog.', 'fox') == ('fox', 16, 19)\n```\n\nThe `find_literals` function uses the `re.search` method to find the first occurrence of the given pattern in the input string. If a match is found, it returns the matching substring, the start index, and the end index. If no match is found, it returns `None`. The provided assertion verifies the correctness of the function."}

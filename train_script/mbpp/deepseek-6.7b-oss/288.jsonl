{"task_id": "Mbpp/602", "completion": "\n```python\ndef first_repeated_char(s):\n    seen = set()\n    for char in s:\n        if char in seen:\n            return char\n        seen.add(char)\n    return None\n```\n\nThe `first_repeated_char` function iterates through the characters of the input string `s`. It uses a set `seen` to keep track of characters encountered so far. If a character is already in the set, it means it has been repeated, and the function returns that character. If no repeated character is found, the function returns `None`. This solution has a time complexity of O(n), where n is the length of the input string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the first repeated character in a given string. Your code should satisfy the following assertion:\n```python\nassert first_repeated_char(\"abcabc\") == \"a\"\n```\n\n    ### Response:\n```python\ndef first_repeated_char(s):\n    seen = set()\n    for char in s:\n        if char in seen:\n            return char\n        seen.add(char)\n    return None\n```\n\nThe `first_repeated_char` function iterates through the characters of the input string `s`. It uses a set `seen` to keep track of characters encountered so far. If a character is already in the set, it means it has been repeated, and the function returns that character. If no repeated character is found, the function returns `None`. This solution has a time complexity of O(n), where n is the length of the input string."}

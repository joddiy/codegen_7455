{"task_id": "Mbpp/765", "completion": "\n```python\ndef is_polite(n):\n    polite_numbers = [1, 2, 4, 6, 10, 12, 16, 18, 22, 24, 28, 30, 34, 36, 40, 42, 46, 48, 52, 54, 58, 60, 64, 66, 70, 72, 76, 78, 82, 84, 88, 90, 94, 96, 100, 102, 106, 108, 112, 114, 118, 120, 124, 126, 130, 132, 136, 138, 142, 144, 148, 150, 154, 156, 160, 162, 166, 168, 172, 174, 178, 180, 184, 186, 190, 192, 196, 198, 202, 204, 208, 210, 214, 216, 220, 222, 226, 228, 232, 234, 238, 240, 244, 246, 250, 252, 256, 258, 262, 264, 268, 270, 274, 276, 280, 282, 286, 288, 292, 294, 298, 300, 304, 306, 310, 312, 316, 318, 322, 324, 328, 330, 334, 336, 340, 342, 346, 348, 352, 354, 358, 360, 364, 366, 370, 372, 376, 378, 382, 384, 388, 390, 394, 396, 400, 402, 406, 408, 412, 414, 418, 420, 424, 426, 430, 432, 436, 438, 442, 444, 448, 450, 454, 456, 460, 462, 466, 468, 472, 474, 478, 480, 484, 486, 490, 492, 496, 498]\n    return polite_numbers[n-1]\n\nassert is_polite(7) == 11\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/. Your code should satisfy the following assertion:\n```python\nassert is_polite(7) == 11\n```\n\n    ### Response:\n```python\ndef is_polite(n):\n    polite_numbers = [1, 2, 4, 6, 10, 12, 16, 18, 22, 24, 28, 30, 34, 36, 40, 42, 46, 48, 52, 54, 58, 60, 64, 66, 70, 72, 76, 78, 82, 84, 88, 90, 94, 96, 100, 102, 106, 108, 112, 114, 118, 120, 124, 126, 130, 132, 136, 138, 142, 144, 148, 150, 154, 156, 160, 162, 166, 168, 172, 174, 178, 180, 184, 186, 190, 192, 196, 198, 202, 204, 208, 210, 214, 216, 220, 222, 226, 228, 232, 234, 238, 240, 244, 246, 250, 252, 256, 258, 262, 264, 268, 270, 274, 276, 280, 282, 286, 288, 292, 294, 298, 300, 304, 306, 310, 312, 316, 318, 322, 324, 328, 330, 334, 336, 340, 342, 346, 348, 352, 354, 358, 360, 364, 366, 370, 372, 376, 378, 382, 384, 388, 390, 394, 396, 400, 402, 406, 408, 412, 414, 418, 420, 424, 426, 430, 432, 436, 438, 442, 444, 448, 450, 454, 456, 460, 462, 466, 468, 472, 474, 478, 480, 484, 486, 490, 492, 496, 498]\n    return polite_numbers[n-1]\n\nassert is_polite(7) == 11\n```"}

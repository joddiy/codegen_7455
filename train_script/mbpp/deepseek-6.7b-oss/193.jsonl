{"task_id": "Mbpp/415", "completion": "\n```python\ndef max_Product(arr):\n    arr.sort()\n    n = len(arr)\n    return (arr[n-1], arr[n-2]) if arr[n-1] * arr[n-2] > arr[0] * arr[1] else (arr[0], arr[1])\n```\n\nThe `max_Product` function first sorts the input array `arr`. Then, it checks the products of the two largest elements and the two smallest elements in the sorted array. The function returns a tuple containing the two elements with the highest product. If the product of the two largest elements is greater than the product of the two smallest elements, it returns the two largest elements; otherwise, it returns the two smallest elements.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find a pair with highest product from a given array of integers. Your code should satisfy the following assertion:\n```python\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```\n\n    ### Response:\n```python\ndef max_Product(arr):\n    arr.sort()\n    n = len(arr)\n    return (arr[n-1], arr[n-2]) if arr[n-1] * arr[n-2] > arr[0] * arr[1] else (arr[0], arr[1])\n```\n\nThe `max_Product` function first sorts the input array `arr`. Then, it checks the products of the two largest elements and the two smallest elements in the sorted array. The function returns a tuple containing the two elements with the highest product. If the product of the two largest elements is greater than the product of the two smallest elements, it returns the two largest elements; otherwise, it returns the two smallest elements."}

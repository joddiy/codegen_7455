{"task_id": "Mbpp/751", "completion": "\n```python\ndef check_min_heap(arr):\n    n = len(arr)\n    for i in range(n // 2 - 1, -1, -1):\n        if arr[i] > arr[2 * i + 1] or (2 * i + 2 < n and arr[i] > arr[2 * i + 2]):\n            return False\n    return True\n```\n\nThe `check_min_heap` function iterates through the array from the last non-leaf node to the root node and checks if each node satisfies the min heap property. If any node violates the property, the function returns `False`. Otherwise, it returns `True` indicating that the array represents a min heap.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/. Your code should satisfy the following assertion:\n```python\nassert check_min_heap([1, 2, 3, 4, 5, 6]) == True\n```\n\n    ### Response:\n```python\ndef check_min_heap(arr):\n    n = len(arr)\n    for i in range(n // 2 - 1, -1, -1):\n        if arr[i] > arr[2 * i + 1] or (2 * i + 2 < n and arr[i] > arr[2 * i + 2]):\n            return False\n    return True\n```\n\nThe `check_min_heap` function iterates through the array from the last non-leaf node to the root node and checks if each node satisfies the min heap property. If any node violates the property, the function returns `False`. Otherwise, it returns `True` indicating that the array represents a min heap."}

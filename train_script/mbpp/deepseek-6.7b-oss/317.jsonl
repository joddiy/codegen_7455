{"task_id": "Mbpp/639", "completion": "\n```python\ndef sum_name_lengths(names):\n    # Remove names that start with a lowercase letter\n    filtered_names = [name for name in names if not name[0].islower()]\n    \n    # Sum the lengths of the filtered names\n    total_length = sum(len(name) for name in filtered_names)\n    \n    return total_length\n\n# Test the function\nassert sum_name_lengths(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith']) == 16\n```\n\nThe `sum_name_lengths` function filters the names that start with a lowercase letter and then sums the lengths of the filtered names. The provided assertion verifies that the function returns the expected result for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter. Your code should satisfy the following assertion:\n```python\nassert sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])==16\n```\n\n    ### Response:\n```python\ndef sum_name_lengths(names):\n    # Remove names that start with a lowercase letter\n    filtered_names = [name for name in names if not name[0].islower()]\n    \n    # Sum the lengths of the filtered names\n    total_length = sum(len(name) for name in filtered_names)\n    \n    return total_length\n\n# Test the function\nassert sum_name_lengths(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith']) == 16\n```\n\nThe `sum_name_lengths` function filters the names that start with a lowercase letter and then sums the lengths of the filtered names. The provided assertion verifies that the function returns the expected result for the given input."}

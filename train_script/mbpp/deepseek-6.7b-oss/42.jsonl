{"task_id": "Mbpp/88", "completion": "\n```python\ndef freq_count(lst):\n    freq_dict = {}\n    for num in lst:\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return freq_dict\n\n# Test the function\nassert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})\n```\n\nThe `freq_count` function iterates through the input list and maintains a dictionary `freq_dict` to store the frequency of each element. For each element, it checks if the element is already a key in the dictionary. If it is, the corresponding value (frequency) is incremented by 1. If not, a new key-value pair is added to the dictionary with the element as the key and the initial frequency of 1. Finally, the function returns the populated `freq_dict`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to get the frequency of all the elements in a list, returned as a dictionary. Your code should satisfy the following assertion:\n```python\nassert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})\n```\n\n    ### Response:\n```python\ndef freq_count(lst):\n    freq_dict = {}\n    for num in lst:\n        if num in freq_dict:\n            freq_dict[num] += 1\n        else:\n            freq_dict[num] = 1\n    return freq_dict\n\n# Test the function\nassert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})\n```\n\nThe `freq_count` function iterates through the input list and maintains a dictionary `freq_dict` to store the frequency of each element. For each element, it checks if the element is already a key in the dictionary. If it is, the corresponding value (frequency) is incremented by 1. If not, a new key-value pair is added to the dictionary with the element as the key and the initial frequency of 1. Finally, the function returns the populated `freq_dict`."}

{"task_id": "Mbpp/475", "completion": "\n```python\ndef sort_counter(dictionary):\n    sorted_dict = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)\n    return sorted_dict\n\n# Test the function\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```\n\nThe `sort_counter` function takes a dictionary as input and uses the `sorted` function with a custom key function to sort the dictionary by value in descending order. The sorted list of tuples is then returned. The provided assertion verifies that the function correctly sorts the given dictionary.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort a dictionary by value. Your code should satisfy the following assertion:\n```python\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```\n\n    ### Response:\n```python\ndef sort_counter(dictionary):\n    sorted_dict = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)\n    return sorted_dict\n\n# Test the function\nassert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]\n```\n\nThe `sort_counter` function takes a dictionary as input and uses the `sorted` function with a custom key function to sort the dictionary by value in descending order. The sorted list of tuples is then returned. The provided assertion verifies that the function correctly sorts the given dictionary."}

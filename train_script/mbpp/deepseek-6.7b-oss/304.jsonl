{"task_id": "Mbpp/622", "completion": "\n```python\ndef get_median(list1, list2, n):\n    merged_list = sorted(list1 + list2)\n    if n % 2 == 0:\n        return (merged_list[n // 2 - 1] + merged_list[n // 2]) / 2\n    else:\n        return merged_list[n // 2]\n```\n\nThe `get_median` function takes two sorted lists `list1` and `list2` of size `n` as input. It merges the two lists and sorts the merged list. Then, it calculates the median based on whether the size of the merged list is even or odd and returns the median value.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the median of two sorted lists of same size. Your code should satisfy the following assertion:\n```python\nassert get_median([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5) == 16.0\n```\n\n    ### Response:\n```python\ndef get_median(list1, list2, n):\n    merged_list = sorted(list1 + list2)\n    if n % 2 == 0:\n        return (merged_list[n // 2 - 1] + merged_list[n // 2]) / 2\n    else:\n        return merged_list[n // 2]\n```\n\nThe `get_median` function takes two sorted lists `list1` and `list2` of size `n` as input. It merges the two lists and sorts the merged list. Then, it calculates the median based on whether the size of the merged list is even or odd and returns the median value."}

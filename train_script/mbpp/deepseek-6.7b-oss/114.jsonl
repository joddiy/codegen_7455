{"task_id": "Mbpp/238", "completion": "\n```python\ndef number_of_substrings(s):\n    n = len(s)\n    return n * (n + 1) // 2\n```\n\nThe solution defines a function `number_of_substrings` that takes a string `s` as input. It calculates the number of non-empty substrings by using the formula `n * (n + 1) // 2`, where `n` is the length of the input string. The assertion `assert number_of_substrings(\"abc\") == 6` is satisfied by this solution.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of non-empty substrings of a given string. Your code should satisfy the following assertion:\n```python\nassert number_of_substrings(\"abc\") == 6\n```\n\n    ### Response:\n```python\ndef number_of_substrings(s):\n    n = len(s)\n    return n * (n + 1) // 2\n```\n\nThe solution defines a function `number_of_substrings` that takes a string `s` as input. It calculates the number of non-empty substrings by using the formula `n * (n + 1) // 2`, where `n` is the length of the input string. The assertion `assert number_of_substrings(\"abc\") == 6` is satisfied by this solution."}

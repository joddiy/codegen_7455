{"task_id": "Mbpp/145", "completion": "\n```python\ndef max_Abs_Diff(arr):\n    if len(arr) < 2:\n        return 0\n    min_val = arr[0]\n    max_diff = 0\n    for num in arr:\n        max_diff = max(max_diff, num - min_val)\n        min_val = min(min_val, num)\n    return max_diff\n```\n\nThe `max_Abs_Diff` function iterates through the array, keeping track of the minimum value encountered so far and the maximum difference between any two elements. It updates these values as it iterates through the array, and finally returns the maximum difference found. This solution has a time complexity of O(n), where n is the number of elements in the array.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the maximum difference between any two elements in a given array. Your code should satisfy the following assertion:\n```python\nassert max_Abs_Diff((2,1,5,3)) == 4\n```\n\n    ### Response:\n```python\ndef max_Abs_Diff(arr):\n    if len(arr) < 2:\n        return 0\n    min_val = arr[0]\n    max_diff = 0\n    for num in arr:\n        max_diff = max(max_diff, num - min_val)\n        min_val = min(min_val, num)\n    return max_diff\n```\n\nThe `max_Abs_Diff` function iterates through the array, keeping track of the minimum value encountered so far and the maximum difference between any two elements. It updates these values as it iterates through the array, and finally returns the maximum difference found. This solution has a time complexity of O(n), where n is the number of elements in the array."}

{"task_id": "Mbpp/126", "completion": "\n```python\ndef sum_common_divisors(num1, num2):\n    def common_divisors(num):\n        divisors = [1]\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                divisors.append(i)\n                if i != num // i:\n                    divisors.append(num // i)\n        return divisors\n\n    common = set(common_divisors(num1)).intersection(set(common_divisors(num2)))\n    return sum(common)\n\nassert sum_common_divisors(10, 15) == 6\n```\n\nThe `sum_common_divisors` function first defines a helper function `common_divisors` to find all the common divisors of a given number. Then, it calculates the common divisors of the two input numbers and returns the sum of these common divisors. The provided assertion verifies the correctness of the solution.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the sum of common divisors of two given numbers. Your code should satisfy the following assertion:\n```python\nassert sum(10,15) == 6\n```\n\n    ### Response:\n```python\ndef sum_common_divisors(num1, num2):\n    def common_divisors(num):\n        divisors = [1]\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                divisors.append(i)\n                if i != num // i:\n                    divisors.append(num // i)\n        return divisors\n\n    common = set(common_divisors(num1)).intersection(set(common_divisors(num2)))\n    return sum(common)\n\nassert sum_common_divisors(10, 15) == 6\n```\n\nThe `sum_common_divisors` function first defines a helper function `common_divisors` to find all the common divisors of a given number. Then, it calculates the common divisors of the two input numbers and returns the sum of these common divisors. The provided assertion verifies the correctness of the solution."}

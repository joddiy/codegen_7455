{"task_id": "Mbpp/605", "completion": "\n```python\ndef prime_num(num):\n    if num < 2:\n        return False\n    for i in range(2, int(num ** 0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n\nassert prime_num(13)==True\n```\n\nThe `prime_num` function checks if the given number is prime by iterating through the numbers up to the square root of the given number. If the number is divisible by any number in that range, it returns False, indicating that the number is not prime. If the number is not divisible by any number in that range, it returns True, indicating that the number is prime. The assertion at the end verifies that the function correctly identifies the number 13 as a prime number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check if the given integer is a prime number. Your code should satisfy the following assertion:\n```python\nassert prime_num(13)==True\n```\n\n    ### Response:\n```python\ndef prime_num(num):\n    if num < 2:\n        return False\n    for i in range(2, int(num ** 0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n\nassert prime_num(13)==True\n```\n\nThe `prime_num` function checks if the given number is prime by iterating through the numbers up to the square root of the given number. If the number is divisible by any number in that range, it returns False, indicating that the number is not prime. If the number is not divisible by any number in that range, it returns True, indicating that the number is prime. The assertion at the end verifies that the function correctly identifies the number 13 as a prime number."}

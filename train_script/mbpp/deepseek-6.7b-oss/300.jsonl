{"task_id": "Mbpp/616", "completion": "\n```python\ndef tuple_modulo(tuple1, tuple2):\n    return tuple(a % b for a, b in zip(tuple1, tuple2))\n```\n\nThe `tuple_modulo` function takes two tuples as input and uses a generator expression to perform element-wise modulo operation. It then returns a new tuple containing the results of the modulo operation. The `zip` function is used to pair corresponding elements from the input tuples, and the modulo operation is performed using tuple unpacking. The resulting tuple is then returned as the output.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function which takes two tuples of the same length and performs the element wise modulo. Your code should satisfy the following assertion:\n```python\nassert tuple_modulo((10, 4, 5, 6), (5, 6, 7, 5)) == (0, 4, 5, 1)\n```\n\n    ### Response:\n```python\ndef tuple_modulo(tuple1, tuple2):\n    return tuple(a % b for a, b in zip(tuple1, tuple2))\n```\n\nThe `tuple_modulo` function takes two tuples as input and uses a generator expression to perform element-wise modulo operation. It then returns a new tuple containing the results of the modulo operation. The `zip` function is used to pair corresponding elements from the input tuples, and the modulo operation is performed using tuple unpacking. The resulting tuple is then returned as the output."}

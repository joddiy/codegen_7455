{"task_id": "Mbpp/394", "completion": "\n```python\ndef check_distinct(tup):\n    return len(tup) == len(set(tup))\n```\n\nThe `check_distinct` function takes a tuple as input and returns `True` if it contains no duplicates, and `False` otherwise. It achieves this by comparing the length of the input tuple with the length of a set created from the tuple. If the lengths are equal, it means there are no duplicates, and the function returns `True`; otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check if given tuple contains no duplicates. Your code should satisfy the following assertion:\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\n    ### Response:\n```python\ndef check_distinct(tup):\n    return len(tup) == len(set(tup))\n```\n\nThe `check_distinct` function takes a tuple as input and returns `True` if it contains no duplicates, and `False` otherwise. It achieves this by comparing the length of the input tuple with the length of a set created from the tuple. If the lengths are equal, it means there are no duplicates, and the function returns `True`; otherwise, it returns `False`."}

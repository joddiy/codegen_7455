{"task_id": "Mbpp/406", "completion": "\n```python\ndef find_Parity(num):\n    return num % 2 != 0\n```\n\nThe `find_Parity` function takes a number as input and returns `True` if the parity is odd, and `False` if the parity is even. The parity of a number is determined by the number of 1s in its binary representation. An odd number of 1s in the binary representation indicates an odd parity, while an even number of 1s indicates an even parity. The modulo operator `%` is used to check if the remainder of the division by 2 is not equal to 0, which corresponds to an odd parity.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find whether the parity of a given number is odd. Your code should satisfy the following assertion:\n```python\nassert find_Parity(12) == False\n```\n\n    ### Response:\n```python\ndef find_Parity(num):\n    return num % 2 != 0\n```\n\nThe `find_Parity` function takes a number as input and returns `True` if the parity is odd, and `False` if the parity is even. The parity of a number is determined by the number of 1s in its binary representation. An odd number of 1s in the binary representation indicates an odd parity, while an even number of 1s indicates an even parity. The modulo operator `%` is used to check if the remainder of the division by 2 is not equal to 0, which corresponds to an odd parity."}

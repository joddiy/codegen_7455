{"task_id": "Mbpp/580", "completion": "\n```python\ndef extract_even(t):\n    if isinstance(t, tuple):\n        return tuple(extract_even(x) for x in t if isinstance(x, tuple) or x % 2 == 0)\n    else:\n        return t\n\nassert extract_even((4, 5, (7, 6, (2, 4)), 6, 8)) == (4, (6, (2, 4)), 6, 8)\n```\n\nThe `extract_even` function recursively processes the input tuple, removing uneven elements and nested tuples containing uneven elements. The base case is when the input is not a tuple, in which case it returns the input itself. The assertion verifies that the function correctly removes uneven elements from the nested mixed tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove uneven elements in the nested mixed tuple. Your code should satisfy the following assertion:\n```python\nassert extract_even((4, 5, (7, 6, (2, 4)), 6, 8)) == (4, (6, (2, 4)), 6, 8)\n```\n\n    ### Response:\n```python\ndef extract_even(t):\n    if isinstance(t, tuple):\n        return tuple(extract_even(x) for x in t if isinstance(x, tuple) or x % 2 == 0)\n    else:\n        return t\n\nassert extract_even((4, 5, (7, 6, (2, 4)), 6, 8)) == (4, (6, (2, 4)), 6, 8)\n```\n\nThe `extract_even` function recursively processes the input tuple, removing uneven elements and nested tuples containing uneven elements. The base case is when the input is not a tuple, in which case it returns the input itself. The assertion verifies that the function correctly removes uneven elements from the nested mixed tuple."}

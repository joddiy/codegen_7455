{"task_id": "Mbpp/245", "completion": "\n```python\ndef max_sum(arr):\n    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n\n    max_sum = arr[0]\n    for i in range(1, n-1):\n        max_sum = max(max_sum, inc[i-1] + arr[i] + dec[i+1])\n\n    return max_sum\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing. Your code should satisfy the following assertion:\n```python\nassert max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194\n```\n\n    ### Response:\n```python\ndef max_sum(arr):\n    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n\n    max_sum = arr[0]\n    for i in range(1, n-1):\n        max_sum = max(max_sum, inc[i-1] + arr[i] + dec[i+1])\n\n    return max_sum\n```"}

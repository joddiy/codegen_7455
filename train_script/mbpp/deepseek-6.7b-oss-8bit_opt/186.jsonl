{"task_id": "Mbpp/406", "completion": "\n```python\ndef find_Parity(num):\n    return bin(num).count('1') % 2 != 0\n```\nThe `find_Parity` function takes an integer `num` as input and returns `True` if the parity of `num` is odd, and `False` otherwise. It uses the `bin` function to convert the integer to its binary representation and then counts the number of '1' bits in the binary representation. If the count is odd, the function returns `True`; otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find whether the parity of a given number is odd. Your code should satisfy the following assertion:\n```python\nassert find_Parity(12) == False\n```\n\n    ### Response:\n```python\ndef find_Parity(num):\n    return bin(num).count('1') % 2 != 0\n```\nThe `find_Parity` function takes an integer `num` as input and returns `True` if the parity of `num` is odd, and `False` otherwise. It uses the `bin` function to convert the integer to its binary representation and then counts the number of '1' bits in the binary representation. If the count is odd, the function returns `True`; otherwise, it returns `False`."}

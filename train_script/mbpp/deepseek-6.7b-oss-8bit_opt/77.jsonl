{"task_id": "Mbpp/129", "completion": "\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    # Check if the sum of each row, column, and diagonal is the same\n    row_sum = [sum(row) for row in matrix]\n    col_sum = [sum(col) for col in zip(*matrix)]\n    diag_sum = sum(matrix[i][i] for i in range(n)) + sum(matrix[i][n-i-1] for i in range(n))\n\n    # Check if all sums are equal\n    if len(set(row_sum)) == 1 and len(set(col_sum)) == 1 and len(set([diag_sum])) == 1:\n        return True\n    else:\n        return False\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n    ### Response:\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    # Check if the sum of each row, column, and diagonal is the same\n    row_sum = [sum(row) for row in matrix]\n    col_sum = [sum(col) for col in zip(*matrix)]\n    diag_sum = sum(matrix[i][i] for i in range(n)) + sum(matrix[i][n-i-1] for i in range(n))\n\n    # Check if all sums are equal\n    if len(set(row_sum)) == 1 and len(set(col_sum)) == 1 and len(set([diag_sum])) == 1:\n        return True\n    else:\n        return False\n```"}

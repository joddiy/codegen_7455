{"task_id": "Mbpp/260", "completion": "\n```python\ndef newman_prime(n):\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def newman_shanks_williams_prime(n):\n        if n == 1:\n            return 2\n        if n == 2:\n            return 3\n        a, b = 2, 3\n        count = 2\n        while count < n:\n            c = a + b + 1\n            while not is_prime(c):\n                c += 1\n            a, b = b, c\n            count += 1\n        return b\n\n    return newman_shanks_williams_prime(n)\n```\n\nThe `newman_prime` function first defines a helper function `is_prime` to check if a number is prime. Then, it defines the `newman_shanks_williams_prime` function to find the nth newman\u2013shanks\u2013williams prime number. The `newman_prime` function simply calls the `newman_shanks_williams_prime` function with the input `n` and returns the result.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number. Your code should satisfy the following assertion:\n```python\nassert newman_prime(3) == 7\n```\n\n    ### Response:\n```python\ndef newman_prime(n):\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    def newman_shanks_williams_prime(n):\n        if n == 1:\n            return 2\n        if n == 2:\n            return 3\n        a, b = 2, 3\n        count = 2\n        while count < n:\n            c = a + b + 1\n            while not is_prime(c):\n                c += 1\n            a, b = b, c\n            count += 1\n        return b\n\n    return newman_shanks_williams_prime(n)\n```\n\nThe `newman_prime` function first defines a helper function `is_prime` to check if a number is prime. Then, it defines the `newman_shanks_williams_prime` function to find the nth newman\u2013shanks\u2013williams prime number. The `newman_prime` function simply calls the `newman_shanks_williams_prime` function with the input `n` and returns the result."}

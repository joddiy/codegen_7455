{"task_id": "Mbpp/300", "completion": "\n```python\nimport math\n\ndef count_binary_seq(n):\n    dp = [[0] * (2*n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n\n    for i in range(1, n + 1):\n        for j in range(2*n + 1):\n            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]\n\n    return dp[n][n]\n\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. Your code should satisfy the following assertion:\n```python\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```\n\n    ### Response:\n```python\nimport math\n\ndef count_binary_seq(n):\n    dp = [[0] * (2*n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n\n    for i in range(1, n + 1):\n        for j in range(2*n + 1):\n            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]\n\n    return dp[n][n]\n\nassert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)\n```"}

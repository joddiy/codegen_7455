{"task_id": "Mbpp/407", "completion": "\n```python\ndef rearrange_bigger(num):\n    num_str = str(num)\n    num_list = list(num_str)\n    for i in range(len(num_list)-1, 0, -1):\n        if num_list[i] > num_list[i-1]:\n            num_list[i], num_list[i-1] = num_list[i-1], num_list[i]\n            return int(\"\".join(num_list))\n    return num\n```\n\n    ### Test:\n```python\nassert rearrange_bigger(12)==21\nassert rearrange_bigger(513)==531\nassert rearrange_bigger(2017)==2071\nassert rearrange_bigger(414)==441\nassert rearrange_bigger(144)==414\nassert rearrange_bigger(1234321)==1241233\nassert rearrange_bigger(1234126)==1234162\nassert rearrange_bigger(3456432)==3462345\nassert rearrange_bigger(10)==10\nassert rearrange_bigger(20)==20\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to create the next bigger number by rearranging the digits of a given number. Your code should satisfy the following assertion:\n```python\nassert rearrange_bigger(12)==21\n```\n\n    ### Response:\n```python\ndef rearrange_bigger(num):\n    num_str = str(num)\n    num_list = list(num_str)\n    for i in range(len(num_list)-1, 0, -1):\n        if num_list[i] > num_list[i-1]:\n            num_list[i], num_list[i-1] = num_list[i-1], num_list[i]\n            return int(\"\".join(num_list))\n    return num\n```\n\n    ### Test:\n```python\nassert rearrange_bigger(12)==21\nassert rearrange_bigger(513)==531\nassert rearrange_bigger(2017)==2071\nassert rearrange_bigger(414)==441\nassert rearrange_bigger(144)==414\nassert rearrange_bigger(1234321)==1241233\nassert rearrange_bigger(1234126)==1234162\nassert rearrange_bigger(3456432)==3462345\nassert rearrange_bigger(10)==10\nassert rearrange_bigger(20)==20\n```"}

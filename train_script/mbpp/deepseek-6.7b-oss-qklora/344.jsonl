{"task_id": "Mbpp/745", "completion": "\n```python\ndef divisible_by_digits(startnum, endnum):\n    return [x for x in range(startnum, endnum + 1) if all(x % int(i) == 0 for i in str(x))]\n\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\n    ### Justification:\n    The function divisible_by_digits takes two arguments, startnum and endnum, and returns a list of numbers within the given range that are divisible by every digit they contain. The function uses a list comprehension to generate the list of numbers, and the all function to check if each number is divisible by every digit it contains. The assertion checks if the function returns the expected result for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php. Your code should satisfy the following assertion:\n```python\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\n    ### Response:\n```python\ndef divisible_by_digits(startnum, endnum):\n    return [x for x in range(startnum, endnum + 1) if all(x % int(i) == 0 for i in str(x))]\n\nassert divisible_by_digits(1,22)==[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n```\n\n    ### Justification:\n    The function divisible_by_digits takes two arguments, startnum and endnum, and returns a list of numbers within the given range that are divisible by every digit they contain. The function uses a list comprehension to generate the list of numbers, and the all function to check if each number is divisible by every digit it contains. The assertion checks if the function returns the expected result for the given input."}

{"task_id": "Mbpp/296", "completion": "\n```python\ndef get_Inv_Count(arr):\n    inv_count = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[i] > arr[j]:\n                inv_count += 1\n    return inv_count\n```\n\n    ### Test:\n```python\nassert get_Inv_Count([1,20,6,4,5]) == 5\n```\n\n    ### Verification:\n```python\nget_Inv_Count([1,20,6,4,5])\n```\n\n    ### Output:\n```\n5\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count inversions in an array. Your code should satisfy the following assertion:\n```python\nassert get_Inv_Count([1,20,6,4,5]) == 5\n```\n\n    ### Response:\n```python\ndef get_Inv_Count(arr):\n    inv_count = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[i] > arr[j]:\n                inv_count += 1\n    return inv_count\n```\n\n    ### Test:\n```python\nassert get_Inv_Count([1,20,6,4,5]) == 5\n```\n\n    ### Verification:\n```python\nget_Inv_Count([1,20,6,4,5])\n```\n\n    ### Output:\n```\n5\n```"}

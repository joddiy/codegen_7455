{"task_id": "Mbpp/224", "completion": "\n```python\ndef count_Set_Bits(num):\n    count = 0\n    while num:\n        num &= num - 1\n        count += 1\n    return count\n```\n\n    ### Explanation:\n    The function `count_Set_Bits` takes a number `num` as input and initializes a variable `count` to 0. It then enters a loop that continues until `num` becomes 0. In each iteration, it performs a bitwise AND operation between `num` and `num - 1`, effectively clearing the least significant set bit in `num`. The count of set bits is incremented by 1 in each iteration. Finally, the function returns the count of set bits.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to count the number of set bits (binary digits with value 1) in a given number. Your code should satisfy the following assertion:\n```python\nassert count_Set_Bits(2) == 1\n```\n\n    ### Response:\n```python\ndef count_Set_Bits(num):\n    count = 0\n    while num:\n        num &= num - 1\n        count += 1\n    return count\n```\n\n    ### Explanation:\n    The function `count_Set_Bits` takes a number `num` as input and initializes a variable `count` to 0. It then enters a loop that continues until `num` becomes 0. In each iteration, it performs a bitwise AND operation between `num` and `num - 1`, effectively clearing the least significant set bit in `num`. The count of set bits is incremented by 1 in each iteration. Finally, the function returns the count of set bits."}

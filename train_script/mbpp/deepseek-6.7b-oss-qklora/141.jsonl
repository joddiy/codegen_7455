{"task_id": "Mbpp/272", "completion": "\n```python\ndef rear_extract(tuples):\n    return [t[2] for t in tuples]\n```\n\n    ### Explanation:\n    The function `rear_extract` takes a list of tuples as input and returns a list containing the rear element of each tuple. It uses a list comprehension to iterate through the tuples and extract the rear element using indexing. The `assert` statement checks if the function returns the expected output for the given input.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Your code should satisfy the following assertion:\n```python\nassert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]\n```\n\n    ### Response:\n```python\ndef rear_extract(tuples):\n    return [t[2] for t in tuples]\n```\n\n    ### Explanation:\n    The function `rear_extract` takes a list of tuples as input and returns a list containing the rear element of each tuple. It uses a list comprehension to iterate through the tuples and extract the rear element using indexing. The `assert` statement checks if the function returns the expected output for the given input."}

{"task_id": "Mbpp/388", "completion": "\n```python\ndef highest_Power_of_2(n):\n    power = 1\n    while power <= n:\n        power *= 2\n    return power // 2\n```\n\n    ### Explanation:\n    The function `highest_Power_of_2` takes an integer `n` as input and returns the highest power of 2 that is less than or equal to `n`. It initializes a variable `power` to 1 and then repeatedly multiplies it by 2 until it is greater than `n`. Finally, it returns the previous value of `power` divided by 2.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the highest power of 2 that is less than or equal to n. Your code should satisfy the following assertion:\n```python\nassert highest_Power_of_2(10) == 8\n```\n\n    ### Response:\n```python\ndef highest_Power_of_2(n):\n    power = 1\n    while power <= n:\n        power *= 2\n    return power // 2\n```\n\n    ### Explanation:\n    The function `highest_Power_of_2` takes an integer `n` as input and returns the highest power of 2 that is less than or equal to `n`. It initializes a variable `power` to 1 and then repeatedly multiplies it by 2 until it is greater than `n`. Finally, it returns the previous value of `power` divided by 2."}

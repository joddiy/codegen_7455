{"task_id": "Mbpp/239", "completion": "\n```python\ndef get_total_number_of_sequences(m, n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        total = 0\n        for i in range(1, m+1):\n            if i >= 2*n:\n                total += get_total_number_of_sequences(i-1, n-1)\n        return total\n```\n\n    ### Test:\n```python\nassert get_total_number_of_sequences(10, 4) == 4\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m. Your code should satisfy the following assertion:\n```python\nassert get_total_number_of_sequences(10, 4) == 4\n```\n\n    ### Response:\n```python\ndef get_total_number_of_sequences(m, n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        total = 0\n        for i in range(1, m+1):\n            if i >= 2*n:\n                total += get_total_number_of_sequences(i-1, n-1)\n        return total\n```\n\n    ### Test:\n```python\nassert get_total_number_of_sequences(10, 4) == 4\n```"}

{"task_id": "Mbpp/166", "completion": "\n    ```python\n    def find_even_pair(numbers):\n        even_pairs = 0\n        for i in range(len(numbers)):\n            for j in range(i+1, len(numbers)):\n                if (numbers[i] ^ numbers[j]) % 2 == 0:\n                    even_pairs += 1\n        return even_pairs\n    ```\n    The function iterates through the list of numbers and for each pair of numbers, it checks if their bitwise XOR is even. If it is, the function increments the count of even pairs. Finally, the function returns the count of even pairs.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that counts the number of pairs of integers in a list that xor to an even number. Your code should satisfy the following assertion:\n```python\nassert find_even_pair([5, 4, 7, 2, 1]) == 4\n```\n\n    ### Response:\n    ```python\n    def find_even_pair(numbers):\n        even_pairs = 0\n        for i in range(len(numbers)):\n            for j in range(i+1, len(numbers)):\n                if (numbers[i] ^ numbers[j]) % 2 == 0:\n                    even_pairs += 1\n        return even_pairs\n    ```\n    The function iterates through the list of numbers and for each pair of numbers, it checks if their bitwise XOR is even. If it is, the function increments the count of even pairs. Finally, the function returns the count of even pairs."}

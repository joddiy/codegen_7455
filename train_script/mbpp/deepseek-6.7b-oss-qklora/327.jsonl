{"task_id": "Mbpp/725", "completion": "\n    ```python\n    def extract_quotation(string):\n        quotations = []\n        start_index = string.find('\"')\n        while start_index != -1:\n            end_index = string.find('\"', start_index + 1)\n            if end_index != -1:\n                quotations.append(string[start_index + 1:end_index])\n                start_index = string.find('\"', end_index + 1)\n            else:\n                break\n        return quotations\n    ```\n    The `extract_quotation` function uses the `find` method to locate the first occurrence of a quotation mark and then searches for the next quotation mark to extract the value between them. It appends the extracted value to the `quotations` list and continues the search for the next quotation mark. The function returns the list of extracted values.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to extract values between quotation marks \" \" of the given string. Your code should satisfy the following assertion:\n```python\nassert extract_quotation('Cortex \"A53\" Based \"multi\" tasking \"Processor\"') == ['A53', 'multi', 'Processor']\n```\n\n    ### Response:\n    ```python\n    def extract_quotation(string):\n        quotations = []\n        start_index = string.find('\"')\n        while start_index != -1:\n            end_index = string.find('\"', start_index + 1)\n            if end_index != -1:\n                quotations.append(string[start_index + 1:end_index])\n                start_index = string.find('\"', end_index + 1)\n            else:\n                break\n        return quotations\n    ```\n    The `extract_quotation` function uses the `find` method to locate the first occurrence of a quotation mark and then searches for the next quotation mark to extract the value between them. It appends the extracted value to the `quotations` list and continues the search for the next quotation mark. The function returns the list of extracted values."}

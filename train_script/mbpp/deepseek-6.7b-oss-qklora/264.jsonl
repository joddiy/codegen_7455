{"task_id": "Mbpp/576", "completion": "\n    ```python\n    def is_Sub_Array(arr1, arr2):\n        if len(arr2) > len(arr1):\n            return False\n        for i in range(len(arr1) - len(arr2) + 1):\n            if arr1[i:i+len(arr2)] == arr2:\n                return True\n        return False\n    ```\n\n    The `is_Sub_Array` function takes two lists, `arr1` and `arr2`, as input. It first checks if `arr2` is longer than `arr1`, and if so, returns `False`. Then, it iterates through `arr1`, checking if any sublist of length `len(arr2)` matches `arr2`. If a match is found, the function returns `True`; otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether a list is sublist of another or not. Your code should satisfy the following assertion:\n```python\nassert is_Sub_Array([1,4,3,5],[1,2]) == False\n```\n\n    ### Response:\n    ```python\n    def is_Sub_Array(arr1, arr2):\n        if len(arr2) > len(arr1):\n            return False\n        for i in range(len(arr1) - len(arr2) + 1):\n            if arr1[i:i+len(arr2)] == arr2:\n                return True\n        return False\n    ```\n\n    The `is_Sub_Array` function takes two lists, `arr1` and `arr2`, as input. It first checks if `arr2` is longer than `arr1`, and if so, returns `False`. Then, it iterates through `arr1`, checking if any sublist of length `len(arr2)` matches `arr2`. If a match is found, the function returns `True`; otherwise, it returns `False`."}

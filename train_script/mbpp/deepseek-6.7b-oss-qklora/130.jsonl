{"task_id": "Mbpp/260", "completion": "\n    ```python\n    def newman_prime(n):\n        primes = [2, 3]\n        if n <= 0:\n            return None\n        if n == 1:\n            return 2\n        if n == 2:\n            return 3\n        for i in range(3, n+1):\n            next_prime = primes[-1] + 2\n            while True:\n                is_prime = True\n                for prime in primes:\n                    if next_prime % prime == 0:\n                        is_prime = False\n                        break\n                if is_prime:\n                    primes.append(next_prime)\n                    break\n                next_prime += 2\n        return primes[n-1]\n    ```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number. Your code should satisfy the following assertion:\n```python\nassert newman_prime(3) == 7\n```\n\n    ### Response:\n    ```python\n    def newman_prime(n):\n        primes = [2, 3]\n        if n <= 0:\n            return None\n        if n == 1:\n            return 2\n        if n == 2:\n            return 3\n        for i in range(3, n+1):\n            next_prime = primes[-1] + 2\n            while True:\n                is_prime = True\n                for prime in primes:\n                    if next_prime % prime == 0:\n                        is_prime = False\n                        break\n                if is_prime:\n                    primes.append(next_prime)\n                    break\n                next_prime += 2\n        return primes[n-1]\n    ```"}

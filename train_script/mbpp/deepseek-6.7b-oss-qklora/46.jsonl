{"task_id": "Mbpp/92", "completion": "\n    ```python\n    def is_undulating(num):\n        num_str = str(num)\n        for i in range(1, len(num_str)):\n            if num_str[i] == num_str[i-1]:\n                return False\n        return True\n    ```\n\n    The `is_undulating` function takes a number as input and converts it to a string. It then iterates through the digits of the number and checks if any two consecutive digits are the same. If so, it returns False; otherwise, it returns True.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is undulating or not. Your code should satisfy the following assertion:\n```python\nassert is_undulating(1212121) == True\n```\n\n    ### Response:\n    ```python\n    def is_undulating(num):\n        num_str = str(num)\n        for i in range(1, len(num_str)):\n            if num_str[i] == num_str[i-1]:\n                return False\n        return True\n    ```\n\n    The `is_undulating` function takes a number as input and converts it to a string. It then iterates through the digits of the number and checks if any two consecutive digits are the same. If so, it returns False; otherwise, it returns True."}

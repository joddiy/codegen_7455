{"task_id": "Mbpp/395", "completion": "\n    ```python\n    def first_non_repeating_character(string):\n        char_count = {}\n        for char in string:\n            if char in char_count:\n                char_count[char] += 1\n            else:\n                char_count[char] = 1\n        for char in string:\n            if char_count[char] == 1:\n                return char\n        return None\n    ```\n    This function uses a dictionary to keep track of the count of each character in the input string. It then iterates through the string again to find the first character that has a count of 1, which is the first non-repeating character. If no such character is found, it returns None.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the first non-repeated character in a given string. Your code should satisfy the following assertion:\n```python\nassert first_non_repeating_character(\"abcabc\") == None\n```\n\n    ### Response:\n    ```python\n    def first_non_repeating_character(string):\n        char_count = {}\n        for char in string:\n            if char in char_count:\n                char_count[char] += 1\n            else:\n                char_count[char] = 1\n        for char in string:\n            if char_count[char] == 1:\n                return char\n        return None\n    ```\n    This function uses a dictionary to keep track of the count of each character in the input string. It then iterates through the string again to find the first character that has a count of 1, which is the first non-repeating character. If no such character is found, it returns None."}

{"task_id": "Mbpp/590", "completion": "\n    ```python\n    import cmath\n\n    def polar_rect(r, theta):\n        x = r * cmath.cos(theta)\n        y = r * cmath.sin(theta)\n        return (x, y)\n    ```\n\n    The `polar_rect` function takes two arguments, `r` and `theta`, which represent the radius and angle of a polar coordinate. It uses the `cmath` module to calculate the rectangular coordinates (x and y) based on the given radius and angle. The function then returns a tuple containing the rectangular coordinates.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert polar coordinates to rectangular coordinates. Your code should satisfy the following assertion:\n```python\nassert polar_rect(3,4)==((5.0, 0.9272952180016122), (-2+2.4492935982947064e-16j))\n```\n\n    ### Response:\n    ```python\n    import cmath\n\n    def polar_rect(r, theta):\n        x = r * cmath.cos(theta)\n        y = r * cmath.sin(theta)\n        return (x, y)\n    ```\n\n    The `polar_rect` function takes two arguments, `r` and `theta`, which represent the radius and angle of a polar coordinate. It uses the `cmath` module to calculate the rectangular coordinates (x and y) based on the given radius and angle. The function then returns a tuple containing the rectangular coordinates."}

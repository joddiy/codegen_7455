{"task_id": "Mbpp/103", "completion": "\n    ```python\n    def eulerian_num(n, m):\n        if n == 0:\n            return 1\n        elif m == 0:\n            return 0\n        else:\n            return (n - m) * eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n    ```\n    The function `eulerian_num` takes two arguments `n` and `m` and returns the Eulerian number `a(n, m)`. If `n` is 0, the function returns 1. If `m` is 0, the function returns 0. Otherwise, the function recursively calculates the Eulerian number using the formula `a(n, m) = (n - m) * a(n - 1, m) + a(n, m - 1)`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the Eulerian number a(n, m). Your code should satisfy the following assertion:\n```python\nassert eulerian_num(3, 1) == 4\n```\n\n    ### Response:\n    ```python\n    def eulerian_num(n, m):\n        if n == 0:\n            return 1\n        elif m == 0:\n            return 0\n        else:\n            return (n - m) * eulerian_num(n - 1, m) + eulerian_num(n, m - 1)\n    ```\n    The function `eulerian_num` takes two arguments `n` and `m` and returns the Eulerian number `a(n, m)`. If `n` is 0, the function returns 1. If `m` is 0, the function returns 0. Otherwise, the function recursively calculates the Eulerian number using the formula `a(n, m) = (n - m) * a(n - 1, m) + a(n, m - 1)`."}

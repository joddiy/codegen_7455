{"task_id": "Mbpp/632", "completion": "\n    ```python\n    def move_zero(lst):\n        # Initialize a variable to keep track of the position of the last non-zero element\n        last_non_zero_pos = 0\n        \n        # Iterate through the list\n        for i in range(len(lst)):\n            # If the current element is non-zero, swap it with the element at the last non-zero position\n            if lst[i] != 0:\n                lst[last_non_zero_pos], lst[i] = lst[i], lst[last_non_zero_pos]\n                last_non_zero_pos += 1\n        \n        return lst\n    ```\n    \n    This function iterates through the list, swapping non-zero elements with the element at the last non-zero position, and returns the modified list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to move all zeroes to the end of the given list. Your code should satisfy the following assertion:\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\n    ### Response:\n    ```python\n    def move_zero(lst):\n        # Initialize a variable to keep track of the position of the last non-zero element\n        last_non_zero_pos = 0\n        \n        # Iterate through the list\n        for i in range(len(lst)):\n            # If the current element is non-zero, swap it with the element at the last non-zero position\n            if lst[i] != 0:\n                lst[last_non_zero_pos], lst[i] = lst[i], lst[last_non_zero_pos]\n                last_non_zero_pos += 1\n        \n        return lst\n    ```\n    \n    This function iterates through the list, swapping non-zero elements with the element at the last non-zero position, and returns the modified list."}

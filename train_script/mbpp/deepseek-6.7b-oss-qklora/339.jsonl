{"task_id": "Mbpp/740", "completion": "\n    ```python\n    def tuple_to_dict(tup):\n        return dict(zip(tup[::2], tup[1::2]))\n    ```\n\n    ### Explanation:\n    The `tuple_to_dict` function takes a tuple `tup` as input and uses the `zip` function to pair adjacent elements of the tuple into a dictionary. The `zip` function takes two iterables (in this case, the even-indexed elements of `tup` and the odd-indexed elements of `tup`) and returns an iterator of tuples, where each tuple contains the corresponding elements from the input iterables. The `dict` function then converts this iterator of tuples into a dictionary.\n\n    The assertion checks that the `tuple_to_dict` function correctly converts the given tuple to a key-value dictionary using adjacent elements.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/. Your code should satisfy the following assertion:\n```python\nassert tuple_to_dict((1, 5, 7, 10, 13, 5)) == {1: 5, 7: 10, 13: 5}\n```\n\n    ### Response:\n    ```python\n    def tuple_to_dict(tup):\n        return dict(zip(tup[::2], tup[1::2]))\n    ```\n\n    ### Explanation:\n    The `tuple_to_dict` function takes a tuple `tup` as input and uses the `zip` function to pair adjacent elements of the tuple into a dictionary. The `zip` function takes two iterables (in this case, the even-indexed elements of `tup` and the odd-indexed elements of `tup`) and returns an iterator of tuples, where each tuple contains the corresponding elements from the input iterables. The `dict` function then converts this iterator of tuples into a dictionary.\n\n    The assertion checks that the `tuple_to_dict` function correctly converts the given tuple to a key-value dictionary using adjacent elements."}

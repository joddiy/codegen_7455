{"task_id": "Mbpp/735", "completion": "\n    ```python\n    def toggle_middle_bits(num):\n        # Find the position of the most significant bit\n        msb = 0\n        while num >> (msb + 1) > 0:\n            msb += 1\n\n        # Toggle bits from 1 to msb-1\n        mask = (1 << (msb - 1)) - 1\n        return num ^ mask\n    ```\n\n    This function first finds the position of the most significant bit of the input number using a loop. Then, it creates a bit mask with all bits set except the first and the last bit, and uses bitwise XOR to toggle the middle bits. The function returns the modified number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/. Your code should satisfy the following assertion:\n```python\nassert toggle_middle_bits(9) == 15\n```\n\n    ### Response:\n    ```python\n    def toggle_middle_bits(num):\n        # Find the position of the most significant bit\n        msb = 0\n        while num >> (msb + 1) > 0:\n            msb += 1\n\n        # Toggle bits from 1 to msb-1\n        mask = (1 << (msb - 1)) - 1\n        return num ^ mask\n    ```\n\n    This function first finds the position of the most significant bit of the input number using a loop. Then, it creates a bit mask with all bits set except the first and the last bit, and uses bitwise XOR to toggle the middle bits. The function returns the modified number."}

{"task_id": "Mbpp/463", "completion": "\n    ```python\n    def max_subarray_product(arr):\n        max_product = arr[0]\n        current_product = arr[0]\n        for i in range(1, len(arr)):\n            current_product = max(arr[i], current_product * arr[i])\n            max_product = max(max_product, current_product)\n        return max_product\n    ```\n    The `max_subarray_product` function iterates through the array, keeping track of the maximum product seen so far and the current product. It updates the maximum product if the current product is greater than the maximum product seen so far. Finally, it returns the maximum product found.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the maximum product subarray of the given array. Your code should satisfy the following assertion:\n```python\nassert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112\n```\n\n    ### Response:\n    ```python\n    def max_subarray_product(arr):\n        max_product = arr[0]\n        current_product = arr[0]\n        for i in range(1, len(arr)):\n            current_product = max(arr[i], current_product * arr[i])\n            max_product = max(max_product, current_product)\n        return max_product\n    ```\n    The `max_subarray_product` function iterates through the array, keeping track of the maximum product seen so far and the current product. It updates the maximum product if the current product is greater than the maximum product seen so far. Finally, it returns the maximum product found."}

{"task_id": "Mbpp/308", "completion": "\n```python\ndef large_product(list1, list2, n):\n    # Sort the lists in descending order\n    list1.sort(reverse=True)\n    list2.sort(reverse=True)\n    \n    # Initialize the result list\n    result = []\n    \n    # Iterate through the first n elements of both lists\n    for i in range(n):\n        # Multiply the elements and append to the result list\n        result.append(list1[i] * list2[i])\n    \n    return result\n```\n\n    ### Test:\n```python\nassert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Your code should satisfy the following assertion:\n```python\nassert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]\n```\n\n    ### Response:\n```python\ndef large_product(list1, list2, n):\n    # Sort the lists in descending order\n    list1.sort(reverse=True)\n    list2.sort(reverse=True)\n    \n    # Initialize the result list\n    result = []\n    \n    # Iterate through the first n elements of both lists\n    for i in range(n):\n        # Multiply the elements and append to the result list\n        result.append(list1[i] * list2[i])\n    \n    return result\n```\n\n    ### Test:\n```python\nassert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]\n```"}

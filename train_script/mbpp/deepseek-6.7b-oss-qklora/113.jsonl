{"task_id": "Mbpp/237", "completion": "\n```python\ndef check_occurences(lst):\n    dct = {}\n    for tup in lst:\n        if tup in dct:\n            dct[tup] += 1\n        else:\n            dct[tup] = 1\n    return dct\n```\n\n    ### Test:\n```python\nassert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)]) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list. Your code should satisfy the following assertion:\n```python\nassert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}\n```\n\n    ### Response:\n```python\ndef check_occurences(lst):\n    dct = {}\n    for tup in lst:\n        if tup in dct:\n            dct[tup] += 1\n        else:\n            dct[tup] = 1\n    return dct\n```\n\n    ### Test:\n```python\nassert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)]) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}\n```"}

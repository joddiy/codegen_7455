{"task_id": "Mbpp/559", "completion": "\n```python\ndef max_sub_array_sum(arr, n):\n    max_sum = float('-inf')\n    current_sum = 0\n    for i in range(n):\n        current_sum = max(arr[i], current_sum + arr[i])\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n```\nThe `max_sub_array_sum` function iterates through the given list and maintains the maximum sum encountered so far. It updates the maximum sum if the current sum becomes greater than the maximum sum. Finally, it returns the maximum sum found.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the sum of the largest contiguous sublist in the given list. Your code should satisfy the following assertion:\n```python\nassert max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7\n```\n\n    ### Response:\n```python\ndef max_sub_array_sum(arr, n):\n    max_sum = float('-inf')\n    current_sum = 0\n    for i in range(n):\n        current_sum = max(arr[i], current_sum + arr[i])\n        max_sum = max(max_sum, current_sum)\n    return max_sum\n```\nThe `max_sub_array_sum` function iterates through the given list and maintains the maximum sum encountered so far. It updates the maximum sum if the current sum becomes greater than the maximum sum. Finally, it returns the maximum sum found."}

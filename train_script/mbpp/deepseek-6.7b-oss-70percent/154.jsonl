{"task_id": "Mbpp/286", "completion": "\n```python\ndef max_sub_array_sum_repeated(arr, k, n):\n    def kadane(arr):\n        max_so_far = float('-inf')\n        max_ending_here = 0\n        for num in arr:\n            max_ending_here = max(num, max_ending_here + num)\n            max_so_far = max(max_so_far, max_ending_here)\n        return max_so_far\n\n    def max_sub_array_sum(arr):\n        return kadane(arr)\n\n    def max_sub_array_sum_circular(arr):\n        max_kadane = kadane(arr)\n        max_wrap = 0\n        for i in range(n):\n            max_wrap += arr[i]\n            arr[i] = -arr[i]\n        max_wrap = max_wrap + kadane(arr)\n        return max(max_wrap, max_kadane)\n\n    return max_sub_array_sum_circular(arr * k)\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times. Your code should satisfy the following assertion:\n```python\nassert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30\n```\n\n    ### Response:\n```python\ndef max_sub_array_sum_repeated(arr, k, n):\n    def kadane(arr):\n        max_so_far = float('-inf')\n        max_ending_here = 0\n        for num in arr:\n            max_ending_here = max(num, max_ending_here + num)\n            max_so_far = max(max_so_far, max_ending_here)\n        return max_so_far\n\n    def max_sub_array_sum(arr):\n        return kadane(arr)\n\n    def max_sub_array_sum_circular(arr):\n        max_kadane = kadane(arr)\n        max_wrap = 0\n        for i in range(n):\n            max_wrap += arr[i]\n            arr[i] = -arr[i]\n        max_wrap = max_wrap + kadane(arr)\n        return max(max_wrap, max_kadane)\n\n    return max_sub_array_sum_circular(arr * k)\n```"}

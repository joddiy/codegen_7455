{"task_id": "Mbpp/598", "completion": "\n```python\ndef armstrong_number(num):\n    num_str = str(num)\n    num_len = len(num_str)\n    sum_of_cubes = 0\n    for digit in num_str:\n        sum_of_cubes += int(digit) ** num_len\n    return sum_of_cubes == num\n```\nThe `armstrong_number` function takes a number as input and checks if it is an Armstrong number. It first converts the number to a string to iterate through its digits. Then, it calculates the sum of the cubes of its digits and compares it with the original number. If the sum is equal to the original number, the function returns True, indicating that the number is an Armstrong number. Otherwise, it returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is armstrong or not. Your code should satisfy the following assertion:\n```python\nassert armstrong_number(153)==True\n```\n\n    ### Response:\n```python\ndef armstrong_number(num):\n    num_str = str(num)\n    num_len = len(num_str)\n    sum_of_cubes = 0\n    for digit in num_str:\n        sum_of_cubes += int(digit) ** num_len\n    return sum_of_cubes == num\n```\nThe `armstrong_number` function takes a number as input and checks if it is an Armstrong number. It first converts the number to a string to iterate through its digits. Then, it calculates the sum of the cubes of its digits and compares it with the original number. If the sum is equal to the original number, the function returns True, indicating that the number is an Armstrong number. Otherwise, it returns False."}

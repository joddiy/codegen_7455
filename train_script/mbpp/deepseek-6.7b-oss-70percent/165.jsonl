{"task_id": "Mbpp/301", "completion": "\n```python\ndef dict_depth(d):\n    if isinstance(d, dict):\n        return 1 + max(dict_depth(v) for v in d.values()) if d else 1\n    else:\n        return 0\n```\nThe `dict_depth` function takes a dictionary as input and recursively calculates the depth of the dictionary. If the input is not a dictionary, it returns 0. If the input is a dictionary, it returns 1 plus the maximum depth of its values. If the input dictionary is empty, it returns 1.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the depth of a dictionary. Your code should satisfy the following assertion:\n```python\nassert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4\n```\n\n    ### Response:\n```python\ndef dict_depth(d):\n    if isinstance(d, dict):\n        return 1 + max(dict_depth(v) for v in d.values()) if d else 1\n    else:\n        return 0\n```\nThe `dict_depth` function takes a dictionary as input and recursively calculates the depth of the dictionary. If the input is not a dictionary, it returns 0. If the input is a dictionary, it returns 1 plus the maximum depth of its values. If the input dictionary is empty, it returns 1."}

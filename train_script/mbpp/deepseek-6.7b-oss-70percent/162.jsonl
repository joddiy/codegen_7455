{"task_id": "Mbpp/297", "completion": "\n```python\ndef flatten_list(nested_list):\n    flattened = []\n    for item in nested_list:\n        if isinstance(item, list):\n            flattened.extend(flatten_list(item))\n        else:\n            flattened.append(item)\n    return flattened\n```\nThe `flatten_list` function takes a nested list as input and recursively flattens it by appending each element to the `flattened` list. If an element is a list, it calls itself recursively to flatten the nested list. Finally, it returns the flattened list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to flatten a given nested list structure. Your code should satisfy the following assertion:\n```python\nassert flatten_list([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]])==[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]\n```\n\n    ### Response:\n```python\ndef flatten_list(nested_list):\n    flattened = []\n    for item in nested_list:\n        if isinstance(item, list):\n            flattened.extend(flatten_list(item))\n        else:\n            flattened.append(item)\n    return flattened\n```\nThe `flatten_list` function takes a nested list as input and recursively flattens it by appending each element to the `flattened` list. If an element is a list, it calls itself recursively to flatten the nested list. Finally, it returns the flattened list."}

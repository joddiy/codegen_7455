{"task_id": "Mbpp/622", "completion": "\n```python\ndef get_median(list1, list2, n):\n    i = 0\n    j = 0\n    m1 = -1\n    m2 = -1\n    count = 0\n\n    while count < n + 1:\n        if i == n:\n            m1 = m2\n            m2 = list2[0]\n            break\n        if j == n:\n            m1 = m2\n            m2 = list1[0]\n            break\n\n        if list1[i] <= list2[j]:\n            m1 = m2\n            m2 = list1[i]\n            i += 1\n        else:\n            m1 = m2\n            m2 = list2[j]\n            j += 1\n        count += 1\n\n    return (m1 + m2) / 2\n```\n\nThe `get_median` function takes two sorted lists `list1` and `list2` of size `n` as input and returns the median of the two lists. It iterates through the lists and maintains two variables `m1` and `m2` to store the median values. The function returns the average of `m1` and `m2` as the median.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the median of two sorted lists of same size. Your code should satisfy the following assertion:\n```python\nassert get_median([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5) == 16.0\n```\n\n    ### Response:\n```python\ndef get_median(list1, list2, n):\n    i = 0\n    j = 0\n    m1 = -1\n    m2 = -1\n    count = 0\n\n    while count < n + 1:\n        if i == n:\n            m1 = m2\n            m2 = list2[0]\n            break\n        if j == n:\n            m1 = m2\n            m2 = list1[0]\n            break\n\n        if list1[i] <= list2[j]:\n            m1 = m2\n            m2 = list1[i]\n            i += 1\n        else:\n            m1 = m2\n            m2 = list2[j]\n            j += 1\n        count += 1\n\n    return (m1 + m2) / 2\n```\n\nThe `get_median` function takes two sorted lists `list1` and `list2` of size `n` as input and returns the median of the two lists. It iterates through the lists and maintains two variables `m1` and `m2` to store the median values. The function returns the average of `m1` and `m2` as the median."}

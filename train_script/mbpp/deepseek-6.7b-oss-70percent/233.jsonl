{"task_id": "Mbpp/463", "completion": "\n```python\ndef max_subarray_product(nums):\n    max_product = float('-inf')\n    current_product = 1\n    for num in nums:\n        current_product *= num\n        max_product = max(max_product, current_product)\n        if num == 0:\n            current_product = 1\n    return max_product\n```\nThe `max_subarray_product` function iterates through the input array and keeps track of the maximum product encountered so far. It updates the maximum product if the current product is greater than the current maximum product. If the current number is 0, it resets the current product to 1 to start a new subarray. Finally, it returns the maximum product found.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the maximum product subarray of the given array. Your code should satisfy the following assertion:\n```python\nassert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112\n```\n\n    ### Response:\n```python\ndef max_subarray_product(nums):\n    max_product = float('-inf')\n    current_product = 1\n    for num in nums:\n        current_product *= num\n        max_product = max(max_product, current_product)\n        if num == 0:\n            current_product = 1\n    return max_product\n```\nThe `max_subarray_product` function iterates through the input array and keeps track of the maximum product encountered so far. It updates the maximum product if the current product is greater than the current maximum product. If the current number is 0, it resets the current product to 1 to start a new subarray. Finally, it returns the maximum product found."}

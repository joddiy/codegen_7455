{"task_id": "Mbpp/165", "completion": "\n```python\ndef count_char_position(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i].lower() == chr(97 + i):\n            count += 1\n    return count\n```\nThe `count_char_position` function iterates through the input string and checks if the character at the current index matches the character at the same position in the alphabet (case insensitive). If a match is found, the count is incremented. Finally, the function returns the total count of characters that occur at the same position in the string as in the English alphabet.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). Your code should satisfy the following assertion:\n```python\nassert count_char_position(\"xbcefg\") == 2\n```\n\n    ### Response:\n```python\ndef count_char_position(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i].lower() == chr(97 + i):\n            count += 1\n    return count\n```\nThe `count_char_position` function iterates through the input string and checks if the character at the current index matches the character at the same position in the alphabet (case insensitive). If a match is found, the count is incremented. Finally, the function returns the total count of characters that occur at the same position in the string as in the English alphabet."}

{"task_id": "Mbpp/129", "completion": "\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    # Check if the sum of each row is equal\n    for row in matrix:\n        if sum(row) != sum(matrix[0]):\n            return False\n    # Check if the sum of each column is equal\n    for i in range(n):\n        col_sum = 0\n        for j in range(n):\n            col_sum += matrix[j][i]\n        if col_sum != sum(matrix[0]):\n            return False\n    # Check if the sum of the two diagonals is equal\n    diag1_sum = 0\n    diag2_sum = 0\n    for i in range(n):\n        diag1_sum += matrix[i][i]\n        diag2_sum += matrix[i][n-1-i]\n    if diag1_sum != sum(matrix[0]) or diag2_sum != sum(matrix[0]):\n        return False\n    return True\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate whether the matrix is a magic square. Your code should satisfy the following assertion:\n```python\nassert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True\n```\n\n    ### Response:\n```python\ndef magic_square_test(matrix):\n    n = len(matrix)\n    # Check if the sum of each row is equal\n    for row in matrix:\n        if sum(row) != sum(matrix[0]):\n            return False\n    # Check if the sum of each column is equal\n    for i in range(n):\n        col_sum = 0\n        for j in range(n):\n            col_sum += matrix[j][i]\n        if col_sum != sum(matrix[0]):\n            return False\n    # Check if the sum of the two diagonals is equal\n    diag1_sum = 0\n    diag2_sum = 0\n    for i in range(n):\n        diag1_sum += matrix[i][i]\n        diag2_sum += matrix[i][n-1-i]\n    if diag1_sum != sum(matrix[0]) or diag2_sum != sum(matrix[0]):\n        return False\n    return True\n```"}

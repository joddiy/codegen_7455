{"task_id": "Mbpp/244", "completion": "\n```python\nimport math\n\ndef next_Perfect_Square(num):\n    # Find the square root of the given number\n    sqrt_num = math.sqrt(num)\n    \n    # Check if the square root is an integer\n    if sqrt_num.is_integer():\n        return num\n    else:\n        # Find the next integer greater than the square root\n        next_int = int(sqrt_num) + 1\n        # Return the square of the next integer\n        return next_int ** 2\n```\n\nThe `next_Perfect_Square` function first finds the square root of the given number. If the square root is an integer, it returns the given number. Otherwise, it finds the next integer greater than the square root and returns the square of that integer. This solution satisfies the given assertion.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the next perfect square greater than a given number. Your code should satisfy the following assertion:\n```python\nassert next_Perfect_Square(35) == 36\n```\n\n    ### Response:\n```python\nimport math\n\ndef next_Perfect_Square(num):\n    # Find the square root of the given number\n    sqrt_num = math.sqrt(num)\n    \n    # Check if the square root is an integer\n    if sqrt_num.is_integer():\n        return num\n    else:\n        # Find the next integer greater than the square root\n        next_int = int(sqrt_num) + 1\n        # Return the square of the next integer\n        return next_int ** 2\n```\n\nThe `next_Perfect_Square` function first finds the square root of the given number. If the square root is an integer, it returns the given number. Otherwise, it finds the next integer greater than the square root and returns the square of that integer. This solution satisfies the given assertion."}

{"task_id": "Mbpp/141", "completion": "\n```python\ndef pancake_sort(lst):\n    def flip(arr, k):\n        return arr[:k][::-1] + arr[k:]\n\n    def find_max_index(arr, end):\n        max_index = 0\n        for i in range(end):\n            if arr[i] > arr[max_index]:\n                max_index = i\n        return max_index\n\n    def pancake_sort_helper(arr):\n        for i in range(len(arr) - 1, 0, -1):\n            max_index = find_max_index(arr, i + 1)\n            if max_index != i:\n                arr = flip(arr, max_index + 1)\n                arr = flip(arr, i + 1)\n        return arr\n\n    return pancake_sort_helper(lst)\n```\n\nThe `pancake_sort` function first defines a helper function `flip` to reverse a sublist of the input list. It then defines another helper function `find_max_index` to find the index of the maximum element in the sublist. Finally, the `pancake_sort_helper` function implements the pancake sort algorithm to sort the input list and returns the sorted list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```\n\n    ### Response:\n```python\ndef pancake_sort(lst):\n    def flip(arr, k):\n        return arr[:k][::-1] + arr[k:]\n\n    def find_max_index(arr, end):\n        max_index = 0\n        for i in range(end):\n            if arr[i] > arr[max_index]:\n                max_index = i\n        return max_index\n\n    def pancake_sort_helper(arr):\n        for i in range(len(arr) - 1, 0, -1):\n            max_index = find_max_index(arr, i + 1)\n            if max_index != i:\n                arr = flip(arr, max_index + 1)\n                arr = flip(arr, i + 1)\n        return arr\n\n    return pancake_sort_helper(lst)\n```\n\nThe `pancake_sort` function first defines a helper function `flip` to reverse a sublist of the input list. It then defines another helper function `find_max_index` to find the index of the maximum element in the sublist. Finally, the `pancake_sort_helper` function implements the pancake sort algorithm to sort the input list and returns the sorted list."}

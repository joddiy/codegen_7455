{"task_id": "Mbpp/123", "completion": "\n    ```python\n    def is_amicable(n):\n        def sum_of_divisors(num):\n            divisors_sum = 0\n            for i in range(1, int(num**0.5) + 1):\n                if num % i == 0:\n                    divisors_sum += i\n                    if i != num // i:\n                        divisors_sum += num // i\n            return divisors_sum - num\n\n        def is_amicable_pair(a, b):\n            return sum_of_divisors(a) == b and sum_of_divisors(b) == a and a != b\n\n        amicable_sum = 0\n        for i in range(1, n + 1):\n            for j in range(i + 1, n + 1):\n                if is_amicable_pair(i, j):\n                    amicable_sum += i + j\n        return amicable_sum\n\n    assert amicable_numbers_sum(999)==504\n    ```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sum all amicable numbers from 1 to a specified number. Your code should satisfy the following assertion:\n```python\nassert amicable_numbers_sum(999)==504\n```\n\n    ### Response:\n    ```python\n    def is_amicable(n):\n        def sum_of_divisors(num):\n            divisors_sum = 0\n            for i in range(1, int(num**0.5) + 1):\n                if num % i == 0:\n                    divisors_sum += i\n                    if i != num // i:\n                        divisors_sum += num // i\n            return divisors_sum - num\n\n        def is_amicable_pair(a, b):\n            return sum_of_divisors(a) == b and sum_of_divisors(b) == a and a != b\n\n        amicable_sum = 0\n        for i in range(1, n + 1):\n            for j in range(i + 1, n + 1):\n                if is_amicable_pair(i, j):\n                    amicable_sum += i + j\n        return amicable_sum\n\n    assert amicable_numbers_sum(999)==504\n    ```"}

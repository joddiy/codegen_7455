{"task_id": "Mbpp/11", "completion": "\n```python\ndef remove_Occ(string, char):\n    if char in string:\n        first_index = string.index(char)\n        last_index = string.rindex(char)\n        return string[:first_index] + string[last_index+1:]\n    else:\n        return string\n```\n\nThe `remove_Occ` function takes a string and a character as input. It first checks if the character is present in the string. If it is, it finds the index of the first and last occurrence of the character using `index` and `rindex` methods. Then, it returns the substring of the original string without the first and last occurrence of the character. If the character is not present in the string, the function returns the original string.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to remove first and last occurrence of a given character from the string. Your code should satisfy the following assertion:\n```python\nassert remove_Occ(\"hello\",\"l\") == \"heo\"\n```\n\n    ### Response:\n```python\ndef remove_Occ(string, char):\n    if char in string:\n        first_index = string.index(char)\n        last_index = string.rindex(char)\n        return string[:first_index] + string[last_index+1:]\n    else:\n        return string\n```\n\nThe `remove_Occ` function takes a string and a character as input. It first checks if the character is present in the string. If it is, it finds the index of the first and last occurrence of the character using `index` and `rindex` methods. Then, it returns the substring of the original string without the first and last occurrence of the character. If the character is not present in the string, the function returns the original string."}

{"task_id": "Mbpp/585", "completion": "\n```python\ndef expensive_items(dataset, n):\n    sorted_dataset = sorted(dataset, key=lambda x: x['price'], reverse=True)\n    return sorted_dataset[:n]\n```\n\nThe `expensive_items` function takes a list of dictionaries representing items and their prices, and an integer `n` as input. It then sorts the dataset based on the item prices in descending order and returns the top `n` most expensive items.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the n most expensive items in a given dataset. Your code should satisfy the following assertion:\n```python\nassert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\n```\n\n    ### Response:\n```python\ndef expensive_items(dataset, n):\n    sorted_dataset = sorted(dataset, key=lambda x: x['price'], reverse=True)\n    return sorted_dataset[:n]\n```\n\nThe `expensive_items` function takes a list of dictionaries representing items and their prices, and an integer `n` as input. It then sorts the dataset based on the item prices in descending order and returns the top `n` most expensive items."}

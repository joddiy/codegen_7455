{"task_id": "Mbpp/448", "completion": "\n    ```python\n    def cal_sum(n):\n        perrin_numbers = [3, 0, 2]\n        if n <= 2:\n            return perrin_numbers[n]\n        else:\n            for i in range(3, n+1):\n                perrin_numbers.append(perrin_numbers[i-2] + perrin_numbers[i-3])\n            return sum(perrin_numbers)\n    ```\n    The `cal_sum` function calculates the sum of the first `n` Perrin numbers using a list to store the numbers. It initializes the list with the first three Perrin numbers and then iterates through the remaining numbers to calculate the sum. The function returns the sum of the first `n` Perrin numbers.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate the sum of perrin numbers. Your code should satisfy the following assertion:\n```python\nassert cal_sum(9) == 49\n```\n\n    ### Response:\n    ```python\n    def cal_sum(n):\n        perrin_numbers = [3, 0, 2]\n        if n <= 2:\n            return perrin_numbers[n]\n        else:\n            for i in range(3, n+1):\n                perrin_numbers.append(perrin_numbers[i-2] + perrin_numbers[i-3])\n            return sum(perrin_numbers)\n    ```\n    The `cal_sum` function calculates the sum of the first `n` Perrin numbers using a list to store the numbers. It initializes the list with the first three Perrin numbers and then iterates through the remaining numbers to calculate the sum. The function returns the sum of the first `n` Perrin numbers."}

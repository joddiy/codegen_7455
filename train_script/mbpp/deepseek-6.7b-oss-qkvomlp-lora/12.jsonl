{"task_id": "Mbpp/18", "completion": "\n```python\ndef remove_dirty_chars(first_string, second_string):\n    clean_string = \"\"\n    for char in first_string:\n        if char not in second_string:\n            clean_string += char\n    return clean_string\n```\n\nThe `remove_dirty_chars` function takes two strings as input, `first_string` and `second_string`. It iterates through each character in `first_string` and checks if it is present in `second_string`. If a character is not present in `second_string`, it is added to the `clean_string`. Finally, the function returns the `clean_string`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove characters from the first string which are present in the second string. Your code should satisfy the following assertion:\n```python\nassert remove_dirty_chars(\"probasscurve\", \"pros\") == 'bacuve'\n```\n\n    ### Response:\n```python\ndef remove_dirty_chars(first_string, second_string):\n    clean_string = \"\"\n    for char in first_string:\n        if char not in second_string:\n            clean_string += char\n    return clean_string\n```\n\nThe `remove_dirty_chars` function takes two strings as input, `first_string` and `second_string`. It iterates through each character in `first_string` and checks if it is present in `second_string`. If a character is not present in `second_string`, it is added to the `clean_string`. Finally, the function returns the `clean_string`."}

{"task_id": "Mbpp/394", "completion": "\n    ```python\n    def check_distinct(t):\n        return len(set(t)) == len(t)\n    ```\n    The `check_distinct` function takes a tuple `t` as input and returns `True` if it contains no duplicates, and `False` otherwise. It does this by creating a set from the tuple and comparing its length with the original tuple's length. If the lengths are equal, it means that the tuple contains no duplicates, and the function returns `True`. Otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check if given tuple contains no duplicates. Your code should satisfy the following assertion:\n```python\nassert check_distinct((1, 4, 5, 6, 1, 4)) == False\n```\n\n    ### Response:\n    ```python\n    def check_distinct(t):\n        return len(set(t)) == len(t)\n    ```\n    The `check_distinct` function takes a tuple `t` as input and returns `True` if it contains no duplicates, and `False` otherwise. It does this by creating a set from the tuple and comparing its length with the original tuple's length. If the lengths are equal, it means that the tuple contains no duplicates, and the function returns `True`. Otherwise, it returns `False`."}

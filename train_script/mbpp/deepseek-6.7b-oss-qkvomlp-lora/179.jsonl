{"task_id": "Mbpp/395", "completion": "\n```python\ndef first_non_repeating_character(string):\n    char_count = {}\n    for char in string:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    \n    for char in string:\n        if char_count[char] == 1:\n            return char\n    \n    return None\n```\n\nThe `first_non_repeating_character` function creates a dictionary `char_count` to store the count of each character in the input string. It then iterates through the string again to find the first character with a count of 1, which is the first non-repeating character. If no such character is found, the function returns `None`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the first non-repeated character in a given string. Your code should satisfy the following assertion:\n```python\nassert first_non_repeating_character(\"abcabc\") == None\n```\n\n    ### Response:\n```python\ndef first_non_repeating_character(string):\n    char_count = {}\n    for char in string:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    \n    for char in string:\n        if char_count[char] == 1:\n            return char\n    \n    return None\n```\n\nThe `first_non_repeating_character` function creates a dictionary `char_count` to store the count of each character in the input string. It then iterates through the string again to find the first character with a count of 1, which is the first non-repeating character. If no such character is found, the function returns `None`."}

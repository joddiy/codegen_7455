{"task_id": "Mbpp/12", "completion": "\n    ```python\n    def sort_matrix(matrix):\n        # Calculate the sum of each row\n        row_sums = [sum(row) for row in matrix]\n        \n        # Sort the matrix based on the row sums\n        sorted_matrix = [x for _, x in sorted(zip(row_sums, matrix))]\n        \n        return sorted_matrix\n    ```\n    The `sort_matrix` function first calculates the sum of each row in the input matrix. It then uses the `sorted` function to sort the matrix based on the row sums. Finally, it returns the sorted matrix.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort a given matrix in ascending order according to the sum of its rows. Your code should satisfy the following assertion:\n```python\nassert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n```\n\n    ### Response:\n    ```python\n    def sort_matrix(matrix):\n        # Calculate the sum of each row\n        row_sums = [sum(row) for row in matrix]\n        \n        # Sort the matrix based on the row sums\n        sorted_matrix = [x for _, x in sorted(zip(row_sums, matrix))]\n        \n        return sorted_matrix\n    ```\n    The `sort_matrix` function first calculates the sum of each row in the input matrix. It then uses the `sorted` function to sort the matrix based on the row sums. Finally, it returns the sorted matrix."}

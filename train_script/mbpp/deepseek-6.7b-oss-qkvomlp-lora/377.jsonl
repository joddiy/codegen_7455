{"task_id": "Mbpp/785", "completion": "\n```python\ndef tuple_str_int(tuple_str):\n    # Remove the leading and trailing parentheses and split the string by commas\n    tuple_elements = tuple_str[1:-1].split(\", \")\n    # Convert each element to an integer and create a tuple\n    int_tuple = tuple(int(element) for element in tuple_elements)\n    return int_tuple\n```\n\nThe `tuple_str_int` function takes a string representing a tuple and converts it to an integer tuple. It first removes the leading and trailing parentheses, then splits the string by commas to obtain individual elements. Finally, it converts each element to an integer and creates a tuple. The function returns the integer tuple.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to convert tuple string to integer tuple. Your code should satisfy the following assertion:\n```python\nassert tuple_str_int(\"(7, 8, 9)\") == (7, 8, 9)\n```\n\n    ### Response:\n```python\ndef tuple_str_int(tuple_str):\n    # Remove the leading and trailing parentheses and split the string by commas\n    tuple_elements = tuple_str[1:-1].split(\", \")\n    # Convert each element to an integer and create a tuple\n    int_tuple = tuple(int(element) for element in tuple_elements)\n    return int_tuple\n```\n\nThe `tuple_str_int` function takes a string representing a tuple and converts it to an integer tuple. It first removes the leading and trailing parentheses, then splits the string by commas to obtain individual elements. Finally, it converts each element to an integer and creates a tuple. The function returns the integer tuple."}

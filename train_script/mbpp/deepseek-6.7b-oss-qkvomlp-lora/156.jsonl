{"task_id": "Mbpp/290", "completion": "\n```python\ndef max_length(lst):\n    max_len = max(len(sublist) for sublist in lst)\n    max_sublist = [sublist for sublist in lst if len(sublist) == max_len][0]\n    return max_len, max_sublist\n```\nThe `max_length` function first finds the maximum length of a sublist in the input list using a list comprehension. It then filters the input list to find the sublist with the maximum length and returns both the maximum length and the corresponding sublist.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the list of maximum length in a list of lists. Your code should satisfy the following assertion:\n```python\nassert max_length([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [13, 15, 17])\n```\n\n    ### Response:\n```python\ndef max_length(lst):\n    max_len = max(len(sublist) for sublist in lst)\n    max_sublist = [sublist for sublist in lst if len(sublist) == max_len][0]\n    return max_len, max_sublist\n```\nThe `max_length` function first finds the maximum length of a sublist in the input list using a list comprehension. It then filters the input list to find the sublist with the maximum length and returns both the maximum length and the corresponding sublist."}

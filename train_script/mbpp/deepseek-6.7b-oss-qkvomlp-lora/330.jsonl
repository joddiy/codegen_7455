{"task_id": "Mbpp/730", "completion": "\n```python\ndef consecutive_duplicates(lst):\n    new_lst = []\n    for i in range(len(lst)):\n        if i == 0 or lst[i] != lst[i-1]:\n            new_lst.append(lst[i])\n    return new_lst\n```\n\nThe `consecutive_duplicates` function takes a list `lst` as input and returns a new list `new_lst` without consecutive duplicates. It iterates through the input list, appending each element to `new_lst` only if it is not equal to the previous element. This ensures that consecutive duplicates are removed from the input list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove consecutive duplicates of a given list. Your code should satisfy the following assertion:\n```python\nassert consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])==[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n```\n\n    ### Response:\n```python\ndef consecutive_duplicates(lst):\n    new_lst = []\n    for i in range(len(lst)):\n        if i == 0 or lst[i] != lst[i-1]:\n            new_lst.append(lst[i])\n    return new_lst\n```\n\nThe `consecutive_duplicates` function takes a list `lst` as input and returns a new list `new_lst` without consecutive duplicates. It iterates through the input list, appending each element to `new_lst` only if it is not equal to the previous element. This ensures that consecutive duplicates are removed from the input list."}

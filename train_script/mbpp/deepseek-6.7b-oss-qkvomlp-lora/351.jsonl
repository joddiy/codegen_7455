{"task_id": "Mbpp/753", "completion": "\n    ```python\n    def min_k(records, k):\n        sorted_records = sorted(records, key=lambda x: x[1])\n        return sorted_records[:k]\n    ```\n\n    The `min_k` function takes a list of tuples `records` and an integer `k` as input. It sorts the list of tuples based on the second element of each tuple using the `sorted` function with a custom key function that sorts based on the second element. Finally, it returns the first `k` elements of the sorted list, which represent the minimum `k` records.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases. Your code should satisfy the following assertion:\n```python\nassert min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2) == [('Akash', 2), ('Akshat', 4)]\n```\n\n    ### Response:\n    ```python\n    def min_k(records, k):\n        sorted_records = sorted(records, key=lambda x: x[1])\n        return sorted_records[:k]\n    ```\n\n    The `min_k` function takes a list of tuples `records` and an integer `k` as input. It sorts the list of tuples based on the second element of each tuple using the `sorted` function with a custom key function that sorts based on the second element. Finally, it returns the first `k` elements of the sorted list, which represent the minimum `k` records."}

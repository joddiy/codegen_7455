{"task_id": "Mbpp/415", "completion": "\n```python\ndef max_Product(arr):\n    arr.sort()\n    n = len(arr)\n    if n < 2:\n        return None\n    if n == 2:\n        return (arr[0], arr[1])\n    if arr[0] * arr[1] > arr[-2] * arr[-1]:\n        return (arr[0], arr[1])\n    else:\n        return (arr[-2], arr[-1])\n```\n\nThe `max_Product` function takes an array of integers as input and returns a tuple containing the two integers with the highest product. It first sorts the array and then checks the products of the first two and last two elements to determine which pair has the highest product. If the first two elements have the highest product, it returns them; otherwise, it returns the last two elements.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find a pair with highest product from a given array of integers. Your code should satisfy the following assertion:\n```python\nassert max_Product([1,2,3,4,7,0,8,4]) == (7,8)\n```\n\n    ### Response:\n```python\ndef max_Product(arr):\n    arr.sort()\n    n = len(arr)\n    if n < 2:\n        return None\n    if n == 2:\n        return (arr[0], arr[1])\n    if arr[0] * arr[1] > arr[-2] * arr[-1]:\n        return (arr[0], arr[1])\n    else:\n        return (arr[-2], arr[-1])\n```\n\nThe `max_Product` function takes an array of integers as input and returns a tuple containing the two integers with the highest product. It first sorts the array and then checks the products of the first two and last two elements to determine which pair has the highest product. If the first two elements have the highest product, it returns them; otherwise, it returns the last two elements."}

{"task_id": "Mbpp/308", "completion": "\n```python\ndef large_product(list1, list2, num):\n    products = []\n    for i in range(num):\n        max_product = 0\n        max_index1 = 0\n        max_index2 = 0\n        for j in range(len(list1)):\n            for k in range(len(list2)):\n                if list1[j] * list2[k] > max_product:\n                    max_product = list1[j] * list2[k]\n                    max_index1 = j\n                    max_index2 = k\n        products.append(max_product)\n        del list1[max_index1]\n        del list2[max_index2]\n    return products\n```\n\n    The `large_product` function takes two lists `list1` and `list2` and an integer `num` as input. It iterates `num` times, finding the largest product from the two lists and appending it to the `products` list. After finding the largest product, the corresponding factors from the lists are removed to avoid duplicates. Finally, the function returns the list of `num` largest products.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Your code should satisfy the following assertion:\n```python\nassert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]\n```\n\n    ### Response:\n```python\ndef large_product(list1, list2, num):\n    products = []\n    for i in range(num):\n        max_product = 0\n        max_index1 = 0\n        max_index2 = 0\n        for j in range(len(list1)):\n            for k in range(len(list2)):\n                if list1[j] * list2[k] > max_product:\n                    max_product = list1[j] * list2[k]\n                    max_index1 = j\n                    max_index2 = k\n        products.append(max_product)\n        del list1[max_index1]\n        del list2[max_index2]\n    return products\n```\n\n    The `large_product` function takes two lists `list1` and `list2` and an integer `num` as input. It iterates `num` times, finding the largest product from the two lists and appending it to the `products` list. After finding the largest product, the corresponding factors from the lists are removed to avoid duplicates. Finally, the function returns the list of `num` largest products."}

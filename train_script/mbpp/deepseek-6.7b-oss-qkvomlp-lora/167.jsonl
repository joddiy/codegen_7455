{"task_id": "Mbpp/306", "completion": "\n    ```python\n    def max_sum_increasing_subseq(arr, n, i, k):\n        max_sum = 0\n        for j in range(i, k):\n            if arr[j] > arr[i-1]:\n                max_sum += arr[j]\n        return max_sum\n    ```\n    The `max_sum_increasing_subseq` function takes an array `arr`, its length `n`, an index `i`, and a number `k` as input. It iterates through the elements of the array from index `i` to `k` and adds the elements that are greater than the element at index `i-1` to the `max_sum`. Finally, it returns the maximum sum of increasing subsequence.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i . Your code should satisfy the following assertion:\n```python\nassert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11\n```\n\n    ### Response:\n    ```python\n    def max_sum_increasing_subseq(arr, n, i, k):\n        max_sum = 0\n        for j in range(i, k):\n            if arr[j] > arr[i-1]:\n                max_sum += arr[j]\n        return max_sum\n    ```\n    The `max_sum_increasing_subseq` function takes an array `arr`, its length `n`, an index `i`, and a number `k` as input. It iterates through the elements of the array from index `i` to `k` and adds the elements that are greater than the element at index `i-1` to the `max_sum`. Finally, it returns the maximum sum of increasing subsequence."}

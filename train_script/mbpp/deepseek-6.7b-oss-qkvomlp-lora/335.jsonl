{"task_id": "Mbpp/735", "completion": "\n```python\ndef toggle_middle_bits(num):\n    # Calculate the number of bits in the number\n    bits = num.bit_length()\n    \n    # Calculate the mask to toggle all bits except the first and last bit\n    mask = (1 << (bits - 2)) - 1\n    \n    # Toggle the bits using the mask\n    toggled_num = num ^ mask\n    \n    return toggled_num\n```\n\nThe `toggle_middle_bits` function takes a number as input and calculates the number of bits in the number. It then creates a mask to toggle all bits except the first and last bit. Finally, it uses the mask to toggle the bits of the number and returns the toggled number.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/. Your code should satisfy the following assertion:\n```python\nassert toggle_middle_bits(9) == 15\n```\n\n    ### Response:\n```python\ndef toggle_middle_bits(num):\n    # Calculate the number of bits in the number\n    bits = num.bit_length()\n    \n    # Calculate the mask to toggle all bits except the first and last bit\n    mask = (1 << (bits - 2)) - 1\n    \n    # Toggle the bits using the mask\n    toggled_num = num ^ mask\n    \n    return toggled_num\n```\n\nThe `toggle_middle_bits` function takes a number as input and calculates the number of bits in the number. It then creates a mask to toggle all bits except the first and last bit. Finally, it uses the mask to toggle the bits of the number and returns the toggled number."}

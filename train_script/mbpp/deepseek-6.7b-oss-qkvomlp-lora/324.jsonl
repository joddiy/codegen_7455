{"task_id": "Mbpp/722", "completion": "\n```python\ndef filter_data(student_data, min_height, min_weight):\n    filtered_students = {name: (height, weight) for name, (height, weight) in student_data.items() if height >= min_height and weight >= min_weight}\n    return filtered_students\n```\nThe `filter_data` function takes a dictionary `student_data`, a `min_height`, and a `min_weight` as input. It then uses a dictionary comprehension to filter the students based on the given criteria and returns the filtered dictionary.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Your code should satisfy the following assertion:\n```python\nassert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}\n```\n\n    ### Response:\n```python\ndef filter_data(student_data, min_height, min_weight):\n    filtered_students = {name: (height, weight) for name, (height, weight) in student_data.items() if height >= min_height and weight >= min_weight}\n    return filtered_students\n```\nThe `filter_data` function takes a dictionary `student_data`, a `min_height`, and a `min_weight` as input. It then uses a dictionary comprehension to filter the students based on the given criteria and returns the filtered dictionary."}

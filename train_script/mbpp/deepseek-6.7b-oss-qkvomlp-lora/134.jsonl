{"task_id": "Mbpp/265", "completion": "\n```python\ndef list_split(lst, n):\n    result = []\n    for i in range(0, len(lst), n):\n        result.append(lst[i:i+n])\n    return result\n```\n\nThe `list_split` function takes a list `lst` and an integer `n` as input. It initializes an empty list `result` to store the resulting lists. It then iterates through the input list `lst` in increments of `n`, slicing the list into sublists of length `n` and appending them to the `result` list. Finally, it returns the `result` list, which contains the split lists.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Your code should satisfy the following assertion:\n```python\nassert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]\n```\n\n    ### Response:\n```python\ndef list_split(lst, n):\n    result = []\n    for i in range(0, len(lst), n):\n        result.append(lst[i:i+n])\n    return result\n```\n\nThe `list_split` function takes a list `lst` and an integer `n` as input. It initializes an empty list `result` to store the resulting lists. It then iterates through the input list `lst` in increments of `n`, slicing the list into sublists of length `n` and appending them to the `result` list. Finally, it returns the `result` list, which contains the split lists."}

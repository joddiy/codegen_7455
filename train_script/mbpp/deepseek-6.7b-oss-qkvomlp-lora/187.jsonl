{"task_id": "Mbpp/407", "completion": "\n    ```python\n    def rearrange_bigger(num):\n        num_str = str(num)\n        digits = list(num_str)\n        for i in range(len(digits)-1, 0, -1):\n            if digits[i] > digits[i-1]:\n                digits[i], digits[i-1] = digits[i-1], digits[i]\n                return int(''.join(digits))\n        return -1\n    ```\n    The `rearrange_bigger` function takes a number as input and returns the next bigger number by rearranging the digits of the input. If no such arrangement is possible, it returns -1.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to create the next bigger number by rearranging the digits of a given number. Your code should satisfy the following assertion:\n```python\nassert rearrange_bigger(12)==21\n```\n\n    ### Response:\n    ```python\n    def rearrange_bigger(num):\n        num_str = str(num)\n        digits = list(num_str)\n        for i in range(len(digits)-1, 0, -1):\n            if digits[i] > digits[i-1]:\n                digits[i], digits[i-1] = digits[i-1], digits[i]\n                return int(''.join(digits))\n        return -1\n    ```\n    The `rearrange_bigger` function takes a number as input and returns the next bigger number by rearranging the digits of the input. If no such arrangement is possible, it returns -1."}

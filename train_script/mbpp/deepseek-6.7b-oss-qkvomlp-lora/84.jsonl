{"task_id": "Mbpp/138", "completion": "\n```python\ndef is_Sum_Of_Powers_Of_Two(n):\n    if n == 0:\n        return True\n    while n > 0:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            return False\n    return True\n```\nThe `is_Sum_Of_Powers_Of_Two` function takes a non-negative integer `n` as input and returns `True` if it can be represented as the sum of non-zero powers of 2, and `False` otherwise. The function iteratively divides `n` by 2 until it becomes 0 or becomes odd. If `n` becomes odd, it means it cannot be represented as the sum of non-zero powers of 2, so the function returns `False`. If `n` becomes 0, it means it can be represented as the sum of non-zero powers of 2, so the function returns `True`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not. Your code should satisfy the following assertion:\n```python\nassert is_Sum_Of_Powers_Of_Two(10) == True\n```\n\n    ### Response:\n```python\ndef is_Sum_Of_Powers_Of_Two(n):\n    if n == 0:\n        return True\n    while n > 0:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            return False\n    return True\n```\nThe `is_Sum_Of_Powers_Of_Two` function takes a non-negative integer `n` as input and returns `True` if it can be represented as the sum of non-zero powers of 2, and `False` otherwise. The function iteratively divides `n` by 2 until it becomes 0 or becomes odd. If `n` becomes odd, it means it cannot be represented as the sum of non-zero powers of 2, so the function returns `False`. If `n` becomes 0, it means it can be represented as the sum of non-zero powers of 2, so the function returns `True`."}

{"task_id": "Mbpp/74", "completion": "\n```python\ndef is_samepatterns(colors, patterns):\n    if len(colors) != len(patterns):\n        return False\n    color_pattern_map = {}\n    pattern_color_map = {}\n    for i in range(len(colors)):\n        color = colors[i]\n        pattern = patterns[i]\n        if color in color_pattern_map:\n            if color_pattern_map[color] != pattern:\n                return False\n        else:\n            color_pattern_map[color] = pattern\n        if pattern in pattern_color_map:\n            if pattern_color_map[pattern] != color:\n                return False\n        else:\n            pattern_color_map[pattern] = color\n    return True\n```\n\nThe `is_samepatterns` function takes two lists of colors and patterns as input and checks if they follow the same pattern. It uses two maps to store the color-pattern and pattern-color mappings and ensures that each color is mapped to the same pattern and each pattern is mapped to the same color. If the lengths of the input lists are not equal, the function returns False. Otherwise, it iterates through the lists and checks if the color-pattern and pattern-color mappings are consistent. If any inconsistency is found, the function returns False; otherwise, it returns True.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether it follows the sequence given in the patterns array. Your code should satisfy the following assertion:\n```python\nassert is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True\n```\n\n    ### Response:\n```python\ndef is_samepatterns(colors, patterns):\n    if len(colors) != len(patterns):\n        return False\n    color_pattern_map = {}\n    pattern_color_map = {}\n    for i in range(len(colors)):\n        color = colors[i]\n        pattern = patterns[i]\n        if color in color_pattern_map:\n            if color_pattern_map[color] != pattern:\n                return False\n        else:\n            color_pattern_map[color] = pattern\n        if pattern in pattern_color_map:\n            if pattern_color_map[pattern] != color:\n                return False\n        else:\n            pattern_color_map[pattern] = color\n    return True\n```\n\nThe `is_samepatterns` function takes two lists of colors and patterns as input and checks if they follow the same pattern. It uses two maps to store the color-pattern and pattern-color mappings and ensures that each color is mapped to the same pattern and each pattern is mapped to the same color. If the lengths of the input lists are not equal, the function returns False. Otherwise, it iterates through the lists and checks if the color-pattern and pattern-color mappings are consistent. If any inconsistency is found, the function returns False; otherwise, it returns True."}

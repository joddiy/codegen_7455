{"task_id": "Mbpp/803", "completion": "\n```python\nimport math\n\ndef is_perfect_square(num):\n    if num < 0:\n        return False\n    sqrt_num = int(math.sqrt(num))\n    return sqrt_num * sqrt_num == num\n```\nThe `is_perfect_square` function first checks if the input number is less than 0. If it is, the function returns False. Then, it calculates the square root of the input number using the `math.sqrt` function and converts the result to an integer. Finally, it checks if the square of the integer is equal to the input number. If it is, the function returns True, indicating that the input number is a perfect square; otherwise, it returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/. Your code should satisfy the following assertion:\n```python\nassert not is_perfect_square(10)\n```\n\n    ### Response:\n```python\nimport math\n\ndef is_perfect_square(num):\n    if num < 0:\n        return False\n    sqrt_num = int(math.sqrt(num))\n    return sqrt_num * sqrt_num == num\n```\nThe `is_perfect_square` function first checks if the input number is less than 0. If it is, the function returns False. Then, it calculates the square root of the input number using the `math.sqrt` function and converts the result to an integer. Finally, it checks if the square of the integer is equal to the input number. If it is, the function returns True, indicating that the input number is a perfect square; otherwise, it returns False."}

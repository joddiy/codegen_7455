{"task_id": "Mbpp/223", "completion": "\n```python\ndef is_majority(arr, n, x):\n    count = 0\n    for i in range(n):\n        if arr[i] == x:\n            count += 1\n    return count > n//2\n```\nThe `is_majority` function iterates through the array and counts the occurrences of the given element. If the count is greater than n/2, it returns True, indicating that the element is the majority element in the array. Otherwise, it returns False.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.). Your code should satisfy the following assertion:\n```python\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\n```\n\n    ### Response:\n```python\ndef is_majority(arr, n, x):\n    count = 0\n    for i in range(n):\n        if arr[i] == x:\n            count += 1\n    return count > n//2\n```\nThe `is_majority` function iterates through the array and counts the occurrences of the given element. If the count is greater than n/2, it returns True, indicating that the element is the majority element in the array. Otherwise, it returns False."}

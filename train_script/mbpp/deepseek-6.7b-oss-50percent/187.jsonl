{"task_id": "Mbpp/407", "completion": "\n```python\ndef rearrange_bigger(num):\n    num_str = str(num)\n    num_list = list(num_str)\n    for i in range(len(num_list)-1, 0, -1):\n        if num_list[i] > num_list[i-1]:\n            num_list[i], num_list[i-1] = num_list[i-1], num_list[i]\n            return int(''.join(num_list))\n    return -1\n```\nThe `rearrange_bigger` function takes a number as input and converts it to a list of digits. It then iterates through the digits from right to left, checking if the digit at the current position is greater than the digit to its left. If it is, the digits are swapped and the new number is returned. If no such swap can be made, the function returns -1.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to create the next bigger number by rearranging the digits of a given number. Your code should satisfy the following assertion:\n```python\nassert rearrange_bigger(12)==21\n```\n\n    ### Response:\n```python\ndef rearrange_bigger(num):\n    num_str = str(num)\n    num_list = list(num_str)\n    for i in range(len(num_list)-1, 0, -1):\n        if num_list[i] > num_list[i-1]:\n            num_list[i], num_list[i-1] = num_list[i-1], num_list[i]\n            return int(''.join(num_list))\n    return -1\n```\nThe `rearrange_bigger` function takes a number as input and converts it to a list of digits. It then iterates through the digits from right to left, checking if the digit at the current position is greater than the digit to its left. If it is, the digits are swapped and the new number is returned. If no such swap can be made, the function returns -1."}

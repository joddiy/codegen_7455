{"task_id": "Mbpp/58", "completion": "\n```python\ndef opposite_Signs(num1, num2):\n    return (num1 ^ num2) < 0\n```\nThe `opposite_Signs` function takes two integers `num1` and `num2` as input and uses the bitwise XOR operation to check if the signs of the two numbers are opposite. If the result of the XOR operation is less than 0, it means the signs are opposite, and the function returns `True`. Otherwise, it returns `False`.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to check whether the given two integers have opposite sign or not. Your code should satisfy the following assertion:\n```python\nassert opposite_Signs(1,-2) == True\n```\n\n    ### Response:\n```python\ndef opposite_Signs(num1, num2):\n    return (num1 ^ num2) < 0\n```\nThe `opposite_Signs` function takes two integers `num1` and `num2` as input and uses the bitwise XOR operation to check if the signs of the two numbers are opposite. If the result of the XOR operation is less than 0, it means the signs are opposite, and the function returns `True`. Otherwise, it returns `False`."}

{"task_id": "Mbpp/632", "completion": "\n```python\ndef move_zero(lst):\n    non_zero = [num for num in lst if num != 0]\n    zero_count = len(lst) - len(non_zero)\n    return non_zero + [0] * zero_count\n```\n\nThe `move_zero` function takes a list `lst` as input and uses a list comprehension to create a new list `non_zero` containing all non-zero elements from the input list. It then calculates the number of zeroes in the original list and appends that many zeros to the end of the `non_zero` list. Finally, it returns the modified list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to move all zeroes to the end of the given list. Your code should satisfy the following assertion:\n```python\nassert move_zero([1,0,2,0,3,4]) == [1,2,3,4,0,0]\n```\n\n    ### Response:\n```python\ndef move_zero(lst):\n    non_zero = [num for num in lst if num != 0]\n    zero_count = len(lst) - len(non_zero)\n    return non_zero + [0] * zero_count\n```\n\nThe `move_zero` function takes a list `lst` as input and uses a list comprehension to create a new list `non_zero` containing all non-zero elements from the input list. It then calculates the number of zeroes in the original list and appends that many zeros to the end of the `non_zero` list. Finally, it returns the modified list."}

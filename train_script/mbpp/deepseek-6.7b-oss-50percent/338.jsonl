{"task_id": "Mbpp/739", "completion": "\n```python\ndef find_Index(n):\n    # Initialize the index and the current triangular number\n    index = 1\n    triangular_number = 1\n    \n    # Iterate until the number of digits of the triangular number is equal to n\n    while len(str(triangular_number)) < n:\n        index += 1\n        triangular_number += index\n    \n    return index\n```\n\nThe `find_Index` function initializes the index and the current triangular number. It then iterates until the number of digits of the triangular number is equal to n, incrementing the index and updating the triangular number. Finally, it returns the index of the smallest triangular number with n digits.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/. Your code should satisfy the following assertion:\n```python\nassert find_Index(2) == 4\n```\n\n    ### Response:\n```python\ndef find_Index(n):\n    # Initialize the index and the current triangular number\n    index = 1\n    triangular_number = 1\n    \n    # Iterate until the number of digits of the triangular number is equal to n\n    while len(str(triangular_number)) < n:\n        index += 1\n        triangular_number += index\n    \n    return index\n```\n\nThe `find_Index` function initializes the index and the current triangular number. It then iterates until the number of digits of the triangular number is equal to n, incrementing the index and updating the triangular number. Finally, it returns the index of the smallest triangular number with n digits."}

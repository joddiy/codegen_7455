{"task_id": "Mbpp/622", "completion": "\n```python\ndef get_median(list1, list2, n):\n    merged_list = sorted(list1 + list2)\n    if n % 2 == 0:\n        median = (merged_list[n // 2 - 1] + merged_list[n // 2]) / 2\n    else:\n        median = merged_list[n // 2]\n    return median\n```\nThe `get_median` function takes two sorted lists `list1` and `list2` of size `n` and returns the median of the merged list. It first merges the two lists and then calculates the median based on the size of the merged list.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to find the median of two sorted lists of same size. Your code should satisfy the following assertion:\n```python\nassert get_median([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5) == 16.0\n```\n\n    ### Response:\n```python\ndef get_median(list1, list2, n):\n    merged_list = sorted(list1 + list2)\n    if n % 2 == 0:\n        median = (merged_list[n // 2 - 1] + merged_list[n // 2]) / 2\n    else:\n        median = merged_list[n // 2]\n    return median\n```\nThe `get_median` function takes two sorted lists `list1` and `list2` of size `n` and returns the median of the merged list. It first merges the two lists and then calculates the median based on the size of the merged list."}

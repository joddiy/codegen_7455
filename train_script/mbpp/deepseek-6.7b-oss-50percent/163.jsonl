{"task_id": "Mbpp/299", "completion": "\n```python\ndef max_aggregate(tuples_list):\n    max_aggregate_dict = {}\n    for name, score in tuples_list:\n        if name in max_aggregate_dict:\n            max_aggregate_dict[name] += score\n        else:\n            max_aggregate_dict[name] = score\n    max_aggregate_name = max(max_aggregate_dict, key=max_aggregate_dict.get)\n    max_aggregate_score = max_aggregate_dict[max_aggregate_name]\n    return (max_aggregate_name, max_aggregate_score)\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to calculate the maximum aggregate from the list of tuples. Your code should satisfy the following assertion:\n```python\nassert max_aggregate([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])==('Juan Whelan', 212)\n```\n\n    ### Response:\n```python\ndef max_aggregate(tuples_list):\n    max_aggregate_dict = {}\n    for name, score in tuples_list:\n        if name in max_aggregate_dict:\n            max_aggregate_dict[name] += score\n        else:\n            max_aggregate_dict[name] = score\n    max_aggregate_name = max(max_aggregate_dict, key=max_aggregate_dict.get)\n    max_aggregate_score = max_aggregate_dict[max_aggregate_name]\n    return (max_aggregate_name, max_aggregate_score)\n```"}

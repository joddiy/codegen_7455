{"task_id": "Mbpp/18", "completion": "\n```python\ndef remove_dirty_chars(str1, str2):\n    clean_chars = set(str2)\n    result = ''.join(char for char in str1 if char not in clean_chars)\n    return result\n```\n\nThe `remove_dirty_chars` function takes two strings as input, `str1` and `str2`. It creates a set `clean_chars` from the characters in `str2` to efficiently check for presence. Then, it iterates through `str1` and appends characters to the result if they are not present in `clean_chars`. Finally, it returns the resulting string without the dirty characters.", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to remove characters from the first string which are present in the second string. Your code should satisfy the following assertion:\n```python\nassert remove_dirty_chars(\"probasscurve\", \"pros\") == 'bacuve'\n```\n\n    ### Response:\n```python\ndef remove_dirty_chars(str1, str2):\n    clean_chars = set(str2)\n    result = ''.join(char for char in str1 if char not in clean_chars)\n    return result\n```\n\nThe `remove_dirty_chars` function takes two strings as input, `str1` and `str2`. It creates a set `clean_chars` from the characters in `str2` to efficiently check for presence. Then, it iterates through `str1` and appends characters to the result if they are not present in `clean_chars`. Finally, it returns the resulting string without the dirty characters."}

{"task_id": "Mbpp/123", "completion": "\n```python\ndef is_amicable(num):\n    def sum_of_divisors(n):\n        divisors_sum = 0\n        for i in range(1, n):\n            if n % i == 0:\n                divisors_sum += i\n        return divisors_sum\n\n    sum1 = sum_of_divisors(num)\n    sum2 = sum_of_divisors(sum1)\n    return sum2 == num and sum1 != num\n\ndef amicable_numbers_sum(limit):\n    amicable_sum = 0\n    for num in range(1, limit + 1):\n        if is_amicable(num):\n            amicable_sum += num\n    return amicable_sum\n\nassert amicable_numbers_sum(999) == 504\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sum all amicable numbers from 1 to a specified number. Your code should satisfy the following assertion:\n```python\nassert amicable_numbers_sum(999)==504\n```\n\n    ### Response:\n```python\ndef is_amicable(num):\n    def sum_of_divisors(n):\n        divisors_sum = 0\n        for i in range(1, n):\n            if n % i == 0:\n                divisors_sum += i\n        return divisors_sum\n\n    sum1 = sum_of_divisors(num)\n    sum2 = sum_of_divisors(sum1)\n    return sum2 == num and sum1 != num\n\ndef amicable_numbers_sum(limit):\n    amicable_sum = 0\n    for num in range(1, limit + 1):\n        if is_amicable(num):\n            amicable_sum += num\n    return amicable_sum\n\nassert amicable_numbers_sum(999) == 504\n```"}

{"task_id": "Mbpp/141", "completion": "\n```python\ndef pancake_sort(lst):\n    def flip(arr, k):\n        i = 0\n        while i < k / 2:\n            arr[i], arr[k - i - 1] = arr[k - i - 1], arr[i]\n            i += 1\n\n    def find_max_index(arr, n):\n        max_index = 0\n        for i in range(n):\n            if arr[i] > arr[max_index]:\n                max_index = i\n        return max_index\n\n    def pancake_sort_helper(arr, n):\n        if n == 1:\n            return\n\n        max_index = find_max_index(arr, n)\n        flip(arr, max_index + 1)\n        flip(arr, n)\n\n        pancake_sort_helper(arr, n - 1)\n\n    pancake_sort_helper(lst, len(lst))\n    return lst\n```", "all_code": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n\n    ### Instruction:\n    Create a Python script for this problem:\n    Write a function to sort a list of elements. Your code should satisfy the following assertion:\n```python\nassert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]\n```\n\n    ### Response:\n```python\ndef pancake_sort(lst):\n    def flip(arr, k):\n        i = 0\n        while i < k / 2:\n            arr[i], arr[k - i - 1] = arr[k - i - 1], arr[i]\n            i += 1\n\n    def find_max_index(arr, n):\n        max_index = 0\n        for i in range(n):\n            if arr[i] > arr[max_index]:\n                max_index = i\n        return max_index\n\n    def pancake_sort_helper(arr, n):\n        if n == 1:\n            return\n\n        max_index = find_max_index(arr, n)\n        flip(arr, max_index + 1)\n        flip(arr, n)\n\n        pancake_sort_helper(arr, n - 1)\n\n    pancake_sort_helper(lst, len(lst))\n    return lst\n```"}
